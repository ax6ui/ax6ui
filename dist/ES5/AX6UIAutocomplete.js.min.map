{"version":3,"sources":["AX6UIAutocomplete.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Info","_AX6Util","_AX6Mustache","ctrlKeys","18","17","46","40","35","187","36","45","37","189","34","33","39","16","9","38","91","tmpl","optionGroup","columnKeys","autocompleteDisplay","formSelect","formSelectOptions","optionValue","optionText","options","optionSelected","label","item","find","that","onStateChanged","call","this","state","onChange","$display","alignAutocompleteDisplay","_this","i","queue","length","w","displayTableHeightAdjust","displayTableHeight","Math","max","$select","outerWidth","_AX6Util2","default","number","minWidth","css","min-width","reset","line-height","height","multiple","positionMargin","dim","pickerDim","pickerDirection","$displayTable","outerHeight","abs","document","body","append","activeautocompleteOptionGroup","$target","offset","_loop","width","winWidth","winHeight","alignAutocompleteOptionGroup","direction","pos","_jqmin2","top","addClass","$","window","newTop","left","onBodyClick","clickEl","target","close","index","e","activeautocompleteQueueIndex","data","findParentNode","getAttribute","getLabel","queIdx","selected","hasSelected","undefined","render","syncLabel","html","printLabel","id","$displayLabel","$displayLabelInput","focusLabel","removeIcon","disabled","_AX6Mustache2","trigger","concat","regExp","forEach","n","nindex","searchWord","self","remove","before","optionsMap","O","_O","_OIndex","clearLabel","isArray","onSearch","setTimeout","bind","collect_options","text","sort","lang","optionsSort","focusClear","focusWord","l","toLowerCase","focusMove","_focusIndex","focusOptionEl","search","optionGroupScrollContainer","@findex","a","b","_prevFocusIndex","optionFocusIndex","removeClass","removeAttr","isStrop","findex","optionItemLength","optionSelectedIndex","optionGroupScrollContainerScrollTop","optionGroupScrollContainerHeight","hide","bindAutocompleteTarget","autocompleteEvent","get","focusOptionElHeight","innerHeight","scrollTop","focusOptionElTop","position","removeIndex","setSelected","clear","debouncedFocusWord","debounce","val","click","which","splice","stopEvent","keyUp","inputValue","_AX6Info2","eventKeys","BACKSPACE","pop","blurLabel","keyDown","ESC","instanceId","RETURN","name","theme","tabIndex","optionItemHeight","paddingLeft","DOWN","attr","UP","blur","selectChange","value","boundID","isString","console","getError","formSize","off","processor","on","focus","removeSelectedIndex","addOptions","getQueIdx","optionIndex","log","getSelected","_item","values","optgroup","nn","_option","appendOk","setValueType","newSelectedArray","@index","config","pushOk","push","isNumber","key","clearSelected","arr","AX6UIAutocomplete","borderWidth","noSelected","noOptions","extend","noStateChange","closeTimer","_classCallCheck","_this2","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","animateTime","initialized","waitOptionsCallback","keyUpTimer","xvar","init","initOnce","throttle","event","openTimer","clearTimeout","tryCount","getInstanceId","isObject","error","focusTop","selectedOptionEl","open","_values","_boundID","_value","map","_text","deepCopy","disable"],"mappings":"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","file":"AX6UIAutocomplete.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport info from \"./AX6Info\";\nimport U from \"./AX6Util\";\nimport mustache from \"./AX6Mustache\";\n\n/** ~~~~~~~~~~~~~~~~~~ end of import  ~~~~~~~~~~~~~~~~~~~~ **/\n\nlet ctrlKeys = {\n  \"18\": \"KEY_ALT\",\n  //\"8\": \"KEY_BACKSPACE\",\n  \"17\": \"KEY_CONTROL\",\n  \"46\": \"KEY_DELETE\",\n  \"40\": \"KEY_DOWN\",\n  \"35\": \"KEY_END\",\n  \"187\": \"KEY_EQUAL\",\n  //\"27\": \"KEY_ESC\",\n  \"36\": \"KEY_HOME\",\n  \"45\": \"KEY_INSERT\",\n  \"37\": \"KEY_LEFT\",\n  \"189\": \"KEY_MINUS\",\n  \"34\": \"KEY_PAGEDOWN\",\n  \"33\": \"KEY_PAGEUP\",\n  // \"190\": \"KEY_PERIOD\",\n  //\"13\": \"KEY_RETURN\",\n  \"39\": \"KEY_RIGHT\",\n  \"16\": \"KEY_SHIFT\",\n  // \"32\": \"KEY_SPACE\",\n  \"9\": \"KEY_TAB\",\n  \"38\": \"KEY_UP\",\n  \"91\": \"KEY_WINDOW\"\n  //\"107\" : \"NUMPAD_ADD\",\n  //\"194\" : \"NUMPAD_COMMA\",\n  //\"110\" : \"NUMPAD_DECIMAL\",\n  //\"111\" : \"NUMPAD_DIVIDE\",\n  //\"12\" : \"NUMPAD_EQUAL\",\n  //\"106\" : \"NUMPAD_MULTIPLY\",\n  //\"109\" : \"NUMPAD_SUBTRACT\"\n};\nlet tmpl = {\n  \"optionGroup\"(columnKeys) {\n    return `\n<div class=\"ax6ui-autocomplete-option-group {{theme}} {{size}}\" data-ax6ui-autocomplete-option-group=\"{{id}}\">\n    <div class=\"ax-autocomplete-body\">\n        <div class=\"ax-autocomplete-option-group-content\" data-els=\"content\"></div>\n    </div>\n    <div class=\"ax-autocomplete-arrow\"></div> \n</div>\n`;\n  },\n  \"autocompleteDisplay\"(columnKeys) {\n    return ` \n<input tabindex=\"-1\" type=\"text\" data-input-dummy=\"\" style=\"display: none;\" />\n<div class=\"ax6ui-autocomplete-display {{theme}}\" data-ax6ui-autocomplete-display=\"{{id}}\" data-ax6ui-autocomplete-instance=\"{{instanceId}}\" style=\"height: {{height}}px;\">\n    <div class=\"ax6ui-autocomplete-display-table\" data-els=\"display-table\">\n        <div data-ax6ui-autocomplete-display=\"label-holder\"> \n          <a {{^tabIndex}}{{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}} data-ax6ui-autocomplete-display=\"label\" spellcheck=\"false\" style=\"padding: 0 {{paddingLeft}}px;\">\n              <input type=\"text\" data-ax6ui-autocomplete-display=\"input\" style=\"border:0 none;height: {{optionItemHeight}}px;line-height: {{optionItemHeight}}px;\" />\n          </a>\n        </div>\n        <div data-ax6ui-autocomplete-display=\"addon\"> \n            {{#multiple}}{{#reset}}\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\n            {{/reset}}{{/multiple}}\n        </div>\n    </div>\n</div>\n`;\n  },\n  \"formSelect\"(columnKeys) {\n    return `\n<select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" multiple=\"multiple\"></select>\n`;\n  },\n  \"formSelectOptions\"(columnKeys) {\n    return `\n{{#selected}}\n<option value=\"{{${columnKeys.optionValue}}}\" selected=\"true\">{{${columnKeys.optionText}}}</option>\n{{/selected}}\n`;\n  },\n  \"options\"(columnKeys) {\n    return `\n{{#waitOptions}}\n    <div class=\"ax-autocomplete-option-item\">\n            <div class=\"ax-autocomplete-option-item-holder\">\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">\n                    {{{lang.loading}}}\n                </span>\n            </div>\n        </div>\n{{/waitOptions}}\n{{^waitOptions}}\n    {{#options}}\n        {{^hide}}\n        <div class=\"ax-autocomplete-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{${columnKeys.optionValue}}}\" {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n            <div class=\"ax-autocomplete-option-item-holder\">\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">{{${columnKeys.optionText}}}</span>\n            </div>\n        </div>\n        {{/hide}}\n    {{/options}}\n    {{^options}}\n        <div class=\"ax-autocomplete-option-item\">\n            <div class=\"ax-autocomplete-option-item-holder\">\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">\n                    {{{lang.noOptions}}}\n                </span>\n            </div>\n        </div>\n    {{/options}}\n{{/waitOptions}}\n`;\n  },\n  \"label\"(columnKeys) {\n    return `{{#selected}}\n<div tabindex=\"-1\" data-ax6ui-autocomplete-selected-label=\"{{@i}}\" data-ax6ui-autocomplete-selected-text=\"{{text}}\" style=\"height: {{optionItemHeight}}px;\">  \n  <div class=\"label-cell\">{{${columnKeys.optionText}}}</div>\n  <div class=\"label-cell\" data-ax6ui-autocomplete-remove=\"true\" data-ax6ui-autocomplete-remove-index=\"{{@i}}\">{{{removeIcon}}}</div>\n</div>{{/selected}}`;\n  },\n};\n\nconst onStateChanged = function (item, that) {\n  if (item && item.onStateChanged) {\n    item.onStateChanged.call(that, that);\n  }\n  else if (this.onStateChanged) {\n    this.onStateChanged.call(that, that);\n  }\n\n  if (that.state == \"changeValue\") {\n    if (item && item.onChange) {\n      item.onChange.call(that, that);\n    }\n    else if (this.onChange) {\n      this.onChange.call(that, that);\n    }\n  }\n\n  item = null;\n  that = null;\n  return true;\n};\nconst alignAutocompleteDisplay = function () {\n  let i = this.queue.length, w;\n\n  while (i--) {\n    let item = this.queue[i];\n    if (item.$display) {\n      w = Math.max(item.$select.outerWidth(), U.number(item.minWidth));\n      item.$display.css({\n        \"min-width\": w\n      });\n      if (item.reset) {\n        item.$display.find(\".addon-icon-reset\").css({\n          \"line-height\": this.queue[i].$display.height() + \"px\"\n        });\n      }\n\n      // 높이조절 처리\n      if (item.multiple) {\n        var displayTableHeightAdjust = (function () {\n          return U.number(item.$display.css(\"border-top-width\")) + U.number(item.$display.css(\"border-bottom-width\"));\n        }).call(this);\n        item.$target.height('');\n        item.$display.height('');\n\n        var displayTableHeight = item.$displayTable.outerHeight();\n        if (Math.abs(displayTableHeight - item.$target.height()) > displayTableHeightAdjust) {\n          item.$target.css({height: displayTableHeight + displayTableHeightAdjust + 4});\n          item.$display.css({height: displayTableHeight + displayTableHeightAdjust + 4});\n        }\n      }\n    }\n  }\n\n  i = null;\n  w = null;\n  return this;\n};\nconst alignAutocompleteOptionGroup = function (append) {\n  if (append && !this.activeautocompleteOptionGroup) return this;\n\n  let item = this.queue[this.activeautocompleteQueueIndex],\n    pos = {}, positionMargin = 0,\n    dim = {}, pickerDim = {},\n    pickerDirection;\n\n  if (!item) return this;\n  if (append) jQuery(document.body).append(this.activeautocompleteOptionGroup);\n\n  pos = item.$target.offset();\n  dim = {\n    width: item.$target.outerWidth(),\n    height: item.$target.outerHeight()\n  };\n  pickerDim = {\n    winWidth: Math.max($(window).width(), jQuery(document.body).width()),\n    winHeight: Math.max($(window).height(), jQuery(document.body).height()),\n    width: this.activeautocompleteOptionGroup.outerWidth(),\n    height: this.activeautocompleteOptionGroup.outerHeight()\n  };\n\n  // picker css(width, left, top) & direction 결정\n  if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n    // set direction\n    pickerDirection = \"top\";\n\n    if (pos.top - pickerDim.height - positionMargin < 0) {\n      pickerDirection = \"top\";\n    } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n      pickerDirection = \"bottom\";\n    }\n  } else {\n    pickerDirection = item.direction;\n  }\n\n  if (append) {\n    this.activeautocompleteOptionGroup\n      .addClass(\"direction-\" + pickerDirection);\n  }\n  this.activeautocompleteOptionGroup\n    .css((function () {\n      if (pickerDirection == \"top\") {\n        if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n          var newTop = pos.top + pickerDim.height;\n          if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n            newTop = 0;\n          }\n          if (newTop < 0) {\n            newTop = 0;\n          }\n\n          return {\n            left: pos.left,\n            top: newTop,\n            width: dim.width\n          }\n        }\n        return {\n          left: pos.left,\n          top: pos.top + dim.height + 1,\n          width: dim.width\n        }\n      }\n      else if (pickerDirection == \"bottom\") {\n        return {\n          left: pos.left,\n          top: pos.top - pickerDim.height - 1,\n          width: dim.width\n        }\n      }\n    }).call(this));\n};\nconst onBodyClick = function (e, target) {\n  if (!this.activeautocompleteOptionGroup) return this;\n\n  let item = this.queue[this.activeautocompleteQueueIndex], clickEl = \"display\";\n\n  target = U.findParentNode(e.target, function (target) {\n    if (target.getAttribute(\"data-option-value\")) {\n      clickEl = \"optionItem\";\n      return true;\n    }\n    else if (item.$target.get(0) == target) {\n      clickEl = \"display\";\n      return true;\n    }\n  });\n\n  if (!target) {\n    this.close();\n    return this;\n  }\n  else if (clickEl === \"optionItem\") {\n    setSelected.call(this, item.id, {\n      optionIndex: {\n        index: target.getAttribute(\"data-option-index\")\n      }\n    }, undefined, \"optionItemClick\");\n    alignAutocompleteDisplay.call(this);\n    alignAutocompleteOptionGroup.call(this);\n    if (!item.multiple) {\n      this.close();\n    }\n  }\n  else {\n\n  }\n\n  return this;\n};\nconst getLabel = function (queIdx) {\n  let item = this.queue[queIdx];\n\n  // 템플릿에 전달 해야할 데이터 선언\n  let data = {};\n  data.id = item.id;\n  data.theme = item.theme;\n  data.multiple = item.multiple;\n  data.lang = item.lang;\n  data.options = item.options;\n  data.selected = item.selected;\n  data.hasSelected = (data.selected && data.selected.length > 0);\n  data.removeIcon = item.removeIcon;\n  data.height = item.height;\n  data.optionItemHeight = item.optionItemHeight;\n\n  return mustache.render(tmpl.label.call(this, item.columnKeys), data);\n};\nconst syncLabel = function (queIdx) {\n  let item = this.queue[queIdx];\n\n  if (!item.multiple && item.selected && item.selected.length > 0) {\n    item.selected = [].concat(item.selected[item.selected.length - 1]);\n  }\n\n  item.selected.forEach(function (n, nindex) {\n    n[\"@index\"] = nindex;\n  });\n\n  item.$select.html(\n    mustache.render(tmpl.formSelectOptions.call(this, item.columnKeys), {\n      selected: item.selected\n    })\n  );\n};\nconst printLabel = function (queIdx) {\n  let item = this.queue[queIdx];\n\n  item.$displayLabel.find('[data-ax6ui-autocomplete-selected-label]').remove();\n  item.$displayLabelInput.before(getLabel.call(this, queIdx));\n};\nconst focusLabel = function (queIdx) {\n  if (this.queue[queIdx].disabled) return this;\n\n  this.queue[queIdx].$displayLabel.trigger(\"focus\");\n  this.queue[queIdx].$displayLabelInput.focus();\n};\nconst clearLabel = function (queIdx) {\n  this.queue[queIdx].$displayLabelInput.val('');\n};\nconst blurLabel = function (queIdx) {\n  this.queue[queIdx].$displayLabel.trigger(\"blur\");\n};\nconst onSearch = function (queIdx, searchWord) {\n  if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n  let regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n  searchWord = searchWord.replace(regExp, \"\");\n\n  this.queue[queIdx].waitOptions = true;\n  this.queue[queIdx].onSearch.call({\n    self: this,\n    item: this.queue[queIdx],\n    searchWord: searchWord\n  }, (function (O) {\n\n    let data = {};\n    let item = this.queue[this.activeautocompleteQueueIndex];\n    if (!item) return false;\n\n    /// 현재 selected 검증후 처리\n    (function (item, O) {\n      let optionsMap = {};\n      O.options.forEach(function (_O, _OIndex) {\n        _O[\"@index\"] = _OIndex;\n        _O[\"@findex\"] = _OIndex;\n        optionsMap[_O[item.columnKeys.optionValue]] = _O;\n      });\n      if (U.isArray(item.selected)) {\n        item.selected.forEach(function (_O) {\n          if (optionsMap[_O[item.columnKeys.optionValue]]) {\n            O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n          }\n        });\n      }\n    })(item, O);\n\n    item.options = O.options;\n\n    alignAutocompleteDisplay.call(this);\n\n    /// 템플릿에 전달할 오브젝트 선언\n    data.id = item.id;\n    data.theme = item.theme;\n    data.multiple = item.multiple;\n    data.lang = item.lang;\n    data.options = item.options;\n    this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').html(mustache.render(tmpl.options.call(this, item.columnKeys), data));\n\n    focusWord.call(this, this.activeautocompleteQueueIndex, searchWord);\n    alignAutocompleteOptionGroup.call(this);\n\n    setTimeout((function () {\n      alignAutocompleteOptionGroup.call(this);\n    }).bind(this));\n\n\n  }).bind(this));\n};\nconst focusWord = function (queIdx, searchWord) {\n  if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n  let collect_options = [], i = -1, l = this.queue[queIdx].options.length - 1, n;\n  if (searchWord != \"\") {\n    while (l - i++) {\n      n = this.queue[queIdx].options[i];\n\n      if (('' + n.text).toLowerCase() == searchWord.toLowerCase()) {\n        collect_options = [{'@findex': n['@findex'], optionsSort: 0}];\n        break;\n      } else {\n        let sort = ('' + n.text).toLowerCase().search(searchWord.toLowerCase());\n        if (sort > -1) {\n          collect_options.push({'@findex': n['@findex'], optionsSort: sort});\n          if (collect_options.length > 2) break;\n        }\n        sort = null;\n      }\n    }\n    collect_options.sort(function (a, b) {\n      return a.optionsSort - b.optionsSort;\n    });\n  }\n\n  if (collect_options && collect_options.length > 0) {\n    focusMove.call(this, queIdx, undefined, collect_options[0]['@findex']);\n  } else {\n    focusClear.call(this, queIdx);\n  }\n};\nconst focusClear = function (queIdx) {\n  if (this.activeautocompleteOptionGroup) {\n    this.activeautocompleteOptionGroup\n      .find('[data-option-focus-index]')\n      .removeClass(\"hover\")\n      .removeAttr(\"data-option-selected\");\n  }\n\n  this.queue[queIdx].optionFocusIndex = -1;\n};\nconst focusMove = function (queIdx, direction, findex) {\n  let _focusIndex, _prevFocusIndex, focusOptionEl, optionGroupScrollContainer;\n  let item = this.queue[queIdx];\n\n  if (this.activeautocompleteOptionGroup && item.options && item.options.length > 0) {\n\n    if (typeof findex !== \"undefined\") {\n      _focusIndex = findex\n    }\n    else {\n      _prevFocusIndex = (item.optionFocusIndex == -1) ? item.optionSelectedIndex || -1 : item.optionFocusIndex;\n      if (_prevFocusIndex == -1) {\n        _focusIndex = 0;\n        //_focusIndex = (direction > 0) ? 0 : item.optionItemLength - 1; // 맨 끝으로 보낼것인가 말 것인가.\n      }\n      else {\n        _focusIndex = _prevFocusIndex + direction;\n        if (_focusIndex < 0) _focusIndex = 0;\n        else if (_focusIndex > item.optionItemLength - 1) _focusIndex = item.optionItemLength - 1;\n      }\n    }\n\n    item.optionFocusIndex = _focusIndex;\n\n    // 포커스 인덱스가 hide아이템을 만나면 hide 아이템이 안나올 때까지 루프를 순회 합니다.\n    if (item.options[_focusIndex] && item.options[_focusIndex].hide) { // 옵션이 없는 값이 선택된 경우\n      if (typeof direction === \"undefined\") {\n        return this;\n      }\n      else {\n        let isStrop = false;\n        while (item.options[_focusIndex].hide) {\n          _focusIndex = _focusIndex + direction;\n          if (_focusIndex < 0) {\n            _focusIndex = 0;\n            break;\n          }\n          else if (_focusIndex > item.optionItemLength - 1) {\n            _focusIndex = item.optionItemLength - 1;\n            break;\n          }\n        }\n      }\n    }\n\n    if (typeof _focusIndex !== \"undefined\") {\n      this.activeautocompleteOptionGroup\n        .find('[data-option-focus-index]')\n        .removeClass(\"hover\");\n\n      focusOptionEl = this.activeautocompleteOptionGroup\n        .find('[data-option-focus-index=\"' + _focusIndex + '\"]')\n        .addClass(\"hover\");\n\n      optionGroupScrollContainer = this.activeautocompleteOptionGroup.find('[data-els=\"content\"]');\n\n      if (focusOptionEl.get(0)) {\n        let focusOptionElHeight = focusOptionEl.outerHeight(),\n          optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n          optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n          focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n        if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n          optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n        }\n        else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n          optionGroupScrollContainer.scrollTop(focusOptionElTop);\n        }\n        // optionGroup scroll check\n\n        if (typeof direction !== \"undefined\") {\n          item.$displayLabelInput.val(item.options[_focusIndex].text);\n        }\n      }\n    }\n  }\n};\nconst bindAutocompleteTarget = function (queIdx) {\n  let item = this.queue[queIdx], data = {};\n  const debouncedFocusWord = U.debounce(function (queIdx) {\n    if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n    onSearch.call(this, queIdx, this.queue[queIdx].$displayLabelInput.val());\n  }, 100).bind(this);\n  const autocompleteEvent = {\n    'click': function (queIdx, e) {\n      let clickEl = \"\";\n      let target = U.findParentNode(e.target, function (target) {\n        if (target.getAttribute(\"data-ax6ui-autocomplete-remove\")) {\n          clickEl = \"optionItemRemove\";\n          return true;\n        }\n        else if (target.getAttribute(\"data-selected-clear\")) {\n          clickEl = \"clear\";\n          return true;\n        }\n      });\n\n      if (target) {\n        if (clickEl === \"optionItemRemove\") {\n          let removeIndex = target.getAttribute(\"data-ax6ui-autocomplete-remove-index\");\n          this.queue[queIdx].selected.splice(removeIndex, 1);\n          syncLabel.call(this, queIdx);\n          printLabel.call(this, queIdx);\n          focusLabel.call(this, queIdx);\n          alignAutocompleteDisplay.call(this);\n          alignAutocompleteOptionGroup.call(this);\n          U.stopEvent(e);\n          return this;\n        } else if (clickEl === \"clear\") {\n          setSelected.call(this, queIdx, {clear: true});\n          alignAutocompleteDisplay.call(this);\n          alignAutocompleteOptionGroup.call(this);\n        }\n      }\n      else {\n        if (this.activeautocompleteQueueIndex == queIdx) {\n          if (this.queue[queIdx].optionFocusIndex == -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n            this.close();\n          }\n        }\n        else {\n          focusLabel.call(this, queIdx);\n        }\n      }\n    },\n    'keyUp': function (queIdx, e) {\n      /// 약속된 키 이벤트가 발생하면 stopEvent를 통해 keyUp 이벤트가 발생되지 않도록 막아주는 센스\n      if (e.which == info.eventKeys.ESC && this.activeautocompleteQueueIndex === -1) { // ESC키를 누르고 옵션그룹이 열려있지 않은 경우\n        U.stopEvent(e);\n        return this;\n      }\n      else if (e.which == info.eventKeys.TAB) {\n        // nothing\n        this.close();\n        return this;\n      }\n      else if (this.activeautocompleteQueueIndex != queIdx && e.which != info.eventKeys.BACKSPACE) { // 닫힌 상태 인경우\n        this.open(queIdx); // open and align\n        debouncedFocusWord(queIdx);\n      }\n\n      if (ctrlKeys[e.which]) {\n        U.stopEvent(e);\n      }\n      else {\n        // backspace 감지 하여 input 값이 없으면 스탑이벤트 처리 할 것\n        if (e.which == info.eventKeys.BACKSPACE && this.queue[queIdx].$displayLabelInput.val() == \"\") {\n          // 마지막 아이템을 제거.\n          this.queue[queIdx].selected.pop();\n          syncLabel.call(this, queIdx);\n          printLabel.call(this, queIdx);\n          focusLabel.call(this, queIdx);\n          alignAutocompleteDisplay.call(this);\n          alignAutocompleteOptionGroup.call(this);\n          U.stopEvent(e);\n        } else {\n          debouncedFocusWord(queIdx);\n        }\n      }\n    },\n    'keyDown': function (queIdx, e) {\n      let item = this.queue[queIdx];\n      if (e.which == info.eventKeys.ESC) {\n        clearLabel.call(this, queIdx);\n        this.close();\n        U.stopEvent(e);\n      }\n      else if (e.which == info.eventKeys.RETURN) {\n        let inputValue = item.$displayLabelInput.val();\n        if (item.optionFocusIndex > -1) {\n          setSelected.call(this, item.id, {\n            optionIndex: {\n              index: item.optionFocusIndex\n            }\n          }, undefined, \"optionItemClick\");\n        } else if (inputValue != \"\") {\n          setSelected.call(this, queIdx, inputValue, true);\n        }\n        clearLabel.call(this, queIdx);\n        alignAutocompleteDisplay.call(this);\n        this.close();\n\n        U.stopEvent(e);\n      }\n      else if (e.which == info.eventKeys.DOWN) {\n        focusMove.call(this, queIdx, 1);\n        U.stopEvent(e);\n      }\n      else if (e.which == info.eventKeys.UP) {\n        focusMove.call(this, queIdx, -1);\n        U.stopEvent(e);\n      }\n    },\n    'focus': function (queIdx, e) {\n      // console.log(e);\n    },\n    'blur': function (queIdx, e) {\n      blurLabel.call(this, queIdx);\n      U.stopEvent(e);\n    },\n    'selectChange': function (queIdx, e) {\n      setSelected.call(this, queIdx, {value: item.$select.val()}, true);\n    }\n  };\n  const blurLabel = function (queIdx) {\n    clearLabel.call(this, queIdx);\n  };\n\n\n\n  if (!item.$display) {\n    /// 템플릿에 전달할 오브젝트 선언\n    data.instanceId = this.instanceId;\n    data.id = item.id;\n    data.name = item.name;\n    data.theme = item.theme;\n    data.tabIndex = item.tabIndex;\n    data.multiple = item.multiple;\n    data.reset = item.reset;\n    data.height = item.height;\n    data.optionItemHeight = item.optionItemHeight;\n    data.paddingLeft = (item.height - item.optionItemHeight) / 2;\n    data.label = getLabel.call(this, queIdx);\n\n    item.$display = jQuery(mustache.render(tmpl.autocompleteDisplay.call(this, item.columnKeys), data));\n    item.$displayTable = item.$display.find('[data-els=\"display-table\"]');\n    item.$displayLabel = item.$display.find('[data-ax6ui-autocomplete-display=\"label\"]');\n    item.$displayLabelInput = item.$display.find('[data-ax6ui-autocomplete-display=\"input\"]');\n\n    if (item.$target.find(\"select\").get(0)) {\n      item.$select = item.$target.find(\"select\");\n      item.$select\n        .attr(\"tabindex\", \"-1\")\n        .attr(\"class\", \"form-control \" + data.formSize);\n\n      if (data.name) {\n        item.$select.attr(\"name\", \"name\");\n      }\n      item.$select.attr(\"multiple\", \"multiple\");\n    }\n    else {\n      item.$select = jQuery(mustache.render(tmpl.formSelect.call(this, item.columnKeys), data));\n      item.$target.append(item.$select);\n    }\n\n    item.$target.append(item.$display);\n\n  }\n  else {\n    printLabel.call(this, queIdx);\n  }\n\n  alignAutocompleteDisplay.call(this);\n\n\n  item.$display\n    .off('click.ax6ui-autocomplete')\n    .on('click.ax6ui-autocomplete', autocompleteEvent.click.bind(this, queIdx));\n\n  // autocomplete 태그에 대한 이벤트 감시\n\n  item.$displayLabelInput\n    .off(\"focus.ax6ui-autocomplete\")\n    .on(\"focus.ax6ui-autocomplete\", autocompleteEvent.focus.bind(this, queIdx))\n    .off(\"blur.ax6ui-autocomplete\")\n    .on(\"blur.ax6ui-autocomplete\", autocompleteEvent.blur.bind(this, queIdx))\n    .off(\"keydown.ax6ui-autocomplete\")\n    .on(\"keydown.ax6ui-autocomplete\", autocompleteEvent.keyDown.bind(this, queIdx))\n    .off(\"keyup.ax6ui-autocomplete\")\n    .on(\"keyup.ax6ui-autocomplete\", autocompleteEvent.keyUp.bind(this, queIdx));\n\n  // select 태그에 대한 change 이벤트 감시\n\n  /*\n    item.$select\n      .off('change.ax6ui-autocomplete')\n      .on('change.ax6ui-autocomplete', autocompleteEvent.selectChange.bind(this, queIdx));\n    */\n\n  data = null;\n  item = null;\n  queIdx = null;\n  return this;\n};\nconst getQueIdx = function (boundID) {\n  if (boundID instanceof jQuery) {\n    boundID = boundID.data(\"data-ax6ui-autocomplete-id\");\n  } else if (!U.isString(boundID)) {\n    boundID = jQuery(boundID).data(\"data-ax6ui-autocomplete-id\");\n  }\n  if (!U.isString(boundID)) {\n    console.log(info.getError(\"ax6ui-autocomplete\", \"402\", \"getQueIdx\"));\n    return;\n  }\n  return U.search(this.queue, function () {\n    return this.id == boundID;\n  });\n};\nconst getSelected = function (_item, o, selected) {\n  if (typeof selected === \"undefined\") {\n    return (_item.multiple) ? !o : true;\n  } else {\n    return selected;\n  }\n};\nconst clearSelected = function (queIdx) {\n  this.queue[queIdx].options.forEach(function (n) {\n    if (n.optgroup) {\n      n.options.forEach(function (nn) {\n        nn.selected = false;\n      });\n    }\n    else {\n      n.selected = false;\n    }\n  });\n\n  this.queue[queIdx].selected = [];\n  this.queue[queIdx].$select.html(\n    mustache.render(tmpl.formSelectOptions.call(this, this.queue[queIdx].columnKeys), {\n      selected: this.queue[queIdx].selected\n    })\n  );\n};\nconst setSelected = function (boundID, value, selected, _option) {\n  const processor = {\n    'selectedIndex': function (queIdx, value, selected, setValueType) {\n\n    },\n    'removeSelectedIndex': function (queIdx, value, selected, setValueType) {\n      var item = this.queue[queIdx], addOptions = {};\n      var newSelectedArray = [], optionIndex = 0;\n      for (var i = 0; i < item.selected.length; i++) {\n        if (item.selected[i]['@index'] != value.removeSelectedIndex.index) {\n          addOptions = {'@index': optionIndex, '@findex': optionIndex};\n          addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n          addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n          newSelectedArray.push(addOptions);\n          optionIndex++;\n        }\n      }\n      item.selected = newSelectedArray;\n    },\n    'optionIndex': function (queIdx, value, selected, setValueType) {\n      var item = this.queue[queIdx], addOptions = {};\n      var optionIndex = item.selected.length;\n      var pushOk = true;\n\n      addOptions = {\n        '@index': optionIndex, '@findex': optionIndex\n      };\n      addOptions[item.columnKeys.optionValue] = item.options[value.optionIndex.index][item.columnKeys.optionValue];\n      addOptions[item.columnKeys.optionText] = item.options[value.optionIndex.index][item.columnKeys.optionText];\n\n      for (var i = 0; i < item.selected.length; i++) {\n        if (item.selected[i][item.columnKeys.optionValue] == addOptions[item.columnKeys.optionValue]) {\n          pushOk = false;\n        }\n      }\n      if (pushOk) item.selected.push(addOptions);\n    },\n    'arr': function (queIdx, values, selected, setValueType) {\n      values.forEach(function (value) {\n        if (U.isString(value) || U.isNumber(value)) {\n          processor.text.call(self, queIdx, value, selected, \"justSetValue\");\n        }\n        else {\n          for (var key in processor) {\n            if (value[key]) {\n              processor[key].call(self, queIdx, value, selected, \"justSetValue\");\n              break;\n            }\n          }\n        }\n      });\n    },\n    'value': function (queIdx, value, selected, setValueType) {\n      var item = this.queue[queIdx];\n      var addOptions;\n      var optionIndex = U.search(item.options, function () {\n        return this[item.columnKeys.optionValue] == value.value[item.columnKeys.optionValue];\n      });\n\n      if (optionIndex > -1) {\n        item.options[optionIndex][item.columnKeys.optionSelected]\n          = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n\n        if (item.options[optionIndex][item.columnKeys.optionSelected]) {\n          var appendOk = true;\n          for (var i = 0; i < item.selected.length; i++) {\n            if (item.selected[i][this.config.columnKeys.optionValue] == item.options[optionIndex][this.config.columnKeys.optionValue]) {\n              appendOk = false;\n              break;\n            }\n          }\n          if (appendOk) {\n            addOptions = {};\n            addOptions[item.columnKeys.optionValue] = item.options[optionIndex][item.columnKeys.optionValue];\n            addOptions[item.columnKeys.optionText] = item.options[optionIndex][item.columnKeys.optionText];\n            item.selected.push(addOptions);\n          }\n        }\n        else {\n          var newSelectedArray = [];\n          for (var i = 0; i < item.selected.length; i++) {\n            if (item.selected[i][this.config.columnKeys.optionValue] == item.options[optionIndex][this.config.columnKeys.optionValue]) {\n\n            }\n            else {\n              addOptions = {};\n              addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n              addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n              newSelectedArray.push(addOptions);\n            }\n          }\n          item.selected = newSelectedArray;\n        }\n\n      }\n      else {\n        // 새로운 값 추가\n        var appendOk = true;\n        for (var i = 0; i < item.selected.length; i++) {\n          if (item.selected[i][this.config.columnKeys.optionValue] == value.value[this.config.columnKeys.optionValue]) {\n            appendOk = false;\n            break;\n          }\n        }\n\n        if (appendOk) {\n          addOptions = {};\n          addOptions[item.columnKeys.optionValue] = value.value[this.config.columnKeys.optionValue];\n          addOptions[item.columnKeys.optionText] = value.value[this.config.columnKeys.optionText];\n          item.selected.push(addOptions);\n        }\n      }\n    },\n    'text': function (queIdx, value, selected, setValueType) {\n      var item = this.queue[queIdx];\n      var addOptions;\n      var optionIndex = U.search(item.options, function () {\n        return this[item.columnKeys.optionText] == value;\n      });\n\n      if (optionIndex > -1) {\n        item.options[optionIndex][item.columnKeys.optionSelected]\n          = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n\n        if (item.options[optionIndex][item.columnKeys.optionSelected]) {\n          var appendOk = true;\n          for (var i = 0; i < item.selected.length; i++) {\n            if (item.selected[i][this.config.columnKeys.optionText] == item.options[optionIndex][this.config.columnKeys.optionText]) {\n              appendOk = false;\n              break;\n            }\n          }\n          if (appendOk) {\n            addOptions = {};\n            addOptions[item.columnKeys.optionValue] = item.options[optionIndex][item.columnKeys.optionValue];\n            addOptions[item.columnKeys.optionText] = item.options[optionIndex][item.columnKeys.optionText];\n            item.selected.push(addOptions);\n          }\n        }\n        else {\n          var newSelectedArray = [];\n          for (var i = 0; i < item.selected.length; i++) {\n            if (item.selected[i][this.config.columnKeys.optionText] == item.options[optionIndex][this.config.columnKeys.optionText]) {\n\n            }\n            else {\n              addOptions = {};\n              addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n              addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n              newSelectedArray.push(addOptions);\n            }\n          }\n          item.selected = newSelectedArray;\n        }\n      }\n      else {\n        // 새로운 값 추가\n        var appendOk = true;\n        for (var i = 0; i < item.selected.length; i++) {\n          if (item.selected[i][this.config.columnKeys.optionText] == value) {\n            appendOk = false;\n            break;\n          }\n        }\n\n        if (appendOk) {\n          addOptions = {};\n          addOptions[item.columnKeys.optionValue] = value;\n          addOptions[item.columnKeys.optionText] = value;\n          item.selected.push(addOptions);\n        }\n      }\n    },\n    'clear': function (queIdx) {\n      clearSelected.call(this, queIdx);\n      focusClear.call(this, queIdx);\n\n      if (this.activeautocompleteOptionGroup) {\n        this.activeautocompleteOptionGroup\n          .find('[data-option-index]')\n          .attr(\"data-option-Selected\", \"false\");\n      }\n      this.queue[queIdx].optionSelectedIndex = -1;\n    }\n  };\n\n  let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n  if (queIdx === -1) {\n    console.log(info.getError(\"ax6ui-autocomplete\", \"402\", \"val\"));\n    return;\n  }\n\n  if (typeof value == \"undefined\") {\n    throw \"error not found value\";\n  }\n  else if (U.isArray(value)) {\n    processor.clear.call(this, queIdx);\n    processor.arr.call(this, queIdx, (this.queue[queIdx].multiple || value.length == 0) ? value : [value[value.length - 1]], selected);\n  }\n  else if (U.isString(value) || U.isNumber(value)) {\n    if (typeof value !== \"undefined\" && value !== null && !this.queue[queIdx].multiple) {\n      clearSelected.call(this, queIdx);\n    }\n    processor.text.call(this, queIdx, value, selected);\n  }\n  else {\n    if (value === null) {\n      processor.clear.call(this, queIdx);\n    }\n    else {\n      if (!this.queue[queIdx].multiple) {\n        clearSelected.call(this, queIdx);\n      }\n      for (var key in processor) {\n        if (value[key]) {\n          processor[key].call(this, queIdx, value, selected);\n          break;\n        }\n      }\n    }\n  }\n\n  syncLabel.call(this, queIdx);\n  printLabel.call(this, queIdx);\n  focusLabel.call(this, queIdx);\n  alignAutocompleteOptionGroup.call(this);\n\n  if (typeof value !== \"undefined\") {\n    if (_option && !_option.noStateChange) {\n      onStateChanged.call(this, this.queue[queIdx], {\n        self: this,\n        item: this.queue[queIdx],\n        state: \"changeValue\",\n        value: this.queue[queIdx].selected\n      });\n    }\n  }\n\n  boundID = null;\n  return this;\n};\n\n/** ~~~~~~~~~~~~~~~~~~ end of private  ~~~~~~~~~~~~~~~~~~~~ **/\n\n/**\n * @class\n */\nclass AX6UIAutocomplete extends AX6UICore {\n  /**\n   * @constructor\n   * @param config\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @member {JSON}\n     * @param config\n     * @param [config.theme='default']\n     * @param [config.animateTime=250]\n     * @param [config.height=34]\n     * @param [config.lang] - 메세지들\n     * @param [config.lang.noSelected='']\n     * @param [config.lang.noOptions='no options']\n     * @param [config.lang.loading='now loading..']\n     * @param [config.columnKeys] - 내부에서 사용 JSON key 정의\n     * @param [config.columnKeys.optionValue='value']\n     * @param [config.columnKeys.optionText='text']\n     * @param [config.columnKeys.optionSelected='selected']\n     */\n    this.config = {\n      theme: 'default',\n      animateTime: 250,\n      height: 34,\n      optionItemHeight: 24,\n      borderWidth: 1,\n      removeIcon: 'U+00d7',\n      lang: {\n        noSelected: '',\n        noOptions: 'no options',\n        loading: 'Now Processing'\n      },\n      columnKeys: {\n        optionValue: 'value',\n        optionText: 'text',\n        optionSelected: 'selected'\n      }\n    };\n    jQuery.extend(true, this.config, config);\n\n    // 멤버 변수 초기화\n    /**\n     * bind를 통해 연결된 select가 저장되는 변수\n     * @member {Array}\n     */\n    this.queue = [];\n    /**\n     * @member {Object}\n     */\n    this.activeautocompleteOptionGroup = null;\n    /**\n     * @member {Number}\n     */\n    this.activeautocompleteQueueIndex = -1;\n    /**\n     * @member {Object}\n     */\n    this.openTimer = null;\n    /**\n     * @member {Object}\n     */\n    this.closeTimer = null;\n    /**\n     * @member {Function}\n     */\n    this.waitOptionsCallback = null;\n    /**\n     * @member {Object}\n     */\n    this.keyUpTimer = null;\n    /**\n     * @member {Object}\n     */\n    this.xvar = {};\n\n    this.init();\n  }\n\n  /**\n   * @method\n   * @param config\n   */\n  init() {\n    this.onStateChanged = this.config.onStateChanged;\n    delete this.config.onStateChanged;\n    this.onChange = this.config.onChange;\n    delete this.config.onChange;\n\n    // init 호출 여부\n    this.initOnce();\n  }\n\n  /**\n   * @method\n   */\n  initOnce() {\n    if (this.initialized) return this;\n    this.initialized = true;\n\n    // throttledResize\n    $(window).on(\"resize.ax6ui-autocomplete-display-\" + this.instanceId, U.throttle(function (e) {\n      alignAutocompleteDisplay.call(this, e || window.event);\n      alignAutocompleteOptionGroup.call(this);\n    }, 100).bind(this));\n  }\n\n  /**\n   * bind autocomplete\n   * @method\n   * @param {Object} item\n   * @param {String} [item.id]\n   * @param {String} [item.theme]\n   * @param {Boolean} [item.multiple]\n   * @param {Element} item.target\n   * @return {AX6UIAutocomplete}\n   */\n  bind(item) {\n    let queIdx;\n    item = jQuery.extend(true, {}, this.config, item);\n\n    if (!item.target) {\n      console.log(info.getError(\"ax6ui-autocomplete\", \"401\", \"bind\"));\n      return this;\n    }\n    item.$target = jQuery(item.target);\n\n    if (!item.id) item.id = item.$target.data(\"data-ax6ui-autocomplete-id\");\n    if (!item.id) {\n      item.id = 'ax6ui-autocomplete-' + AX6UICore.getInstanceId();\n      item.$target.data(\"data-ax6ui-autocomplete-id\", item.id);\n    }\n    item.name = item.$target.attr(\"data-ax6ui-autocomplete\");\n\n    item.options = [];\n    item.selected = [];\n\n    // target attribute data\n    (function (data) {\n      if (U.isObject(data) && !data.error) {\n        item = jQuery.extend(true, item, data);\n      }\n    })(U.parseJson(item.$target.attr(\"data-ax6ui-autocomplete-config\"), true));\n\n    queIdx = U.search(this.queue, function () {\n      return this.id == item.id;\n    });\n\n    if (queIdx === -1) {\n      this.queue.push(item);\n      bindAutocompleteTarget.call(this, this.queue.length - 1);\n    }\n    else {\n      this.queue[queIdx].selected = [];\n      this.queue[queIdx].options = item.options;\n      this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n      bindAutocompleteTarget.call(this, queIdx);\n    }\n\n    queIdx = null;\n    return this;\n  }\n\n  /**\n   * open the optionBox of autocomplete\n   * @method\n   * @param {(String|Number|Element)} boundID\n   * @param {Number} [tryCount]\n   * @return {AX6UIAutocomplete}\n   */\n  open(boundID, tryCount) {\n    this.waitOptionsCallback = null;\n\n    /**\n     * open autocomplete from the outside\n     */\n    let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID),\n      item = this.queue[queIdx],\n      data = {},\n      focusTop,\n      selectedOptionEl;\n\n    if (item.$display.attr(\"disabled\")) return this;\n\n    if (this.openTimer) clearTimeout(this.openTimer);\n    if (this.activeautocompleteOptionGroup) {\n      if (this.activeautocompleteQueueIndex == queIdx) {\n        return this;\n      }\n\n      if (tryCount > 2) return this;\n      this.close();\n      this.openTimer = setTimeout((function () {\n        this.open(queIdx, (tryCount || 0) + 1);\n      }).bind(this), this.config.animateTime);\n\n      return this;\n    }\n\n    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n    if (item.selected && item.selected.length > 0) {\n      item.optionSelectedIndex = item.selected[0][\"@findex\"];\n    }\n\n    /// 템플릿에 전달할 오브젝트 선언\n    data.id = item.id;\n    data.theme = item.theme;\n    data.multiple = item.multiple;\n\n    data.lang = item.lang;\n    item.$display.attr(\"data-autocomplete-option-group-opened\", \"true\");\n\n    data.waitOptions = true; // 타이핑값으로 options을 구해야 하므로 대기\n    data.options = [];\n\n    this.activeautocompleteOptionGroup = jQuery(mustache.render(tmpl.optionGroup.call(this, item.columnKeys), data));\n    this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').html(mustache.render(tmpl.options.call(this, item.columnKeys), data));\n    this.activeautocompleteQueueIndex = queIdx;\n\n    alignAutocompleteOptionGroup.call(this, \"append\"); // alignAutocompleteOptionGroup 에서 body append\n\n    if (item.selected && item.selected.length > 0) {\n      selectedOptionEl = this.activeautocompleteOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n      if (selectedOptionEl.get(0)) {\n        focusTop = selectedOptionEl.position().top - this.activeautocompleteOptionGroup.height() / 3;\n        this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').scrollTop(focusTop);\n      }\n    }\n\n    jQuery(window).on(\"click.ax6ui-autocomplete-\" + this.instanceId, (function (e) {\n      e = e || window.event;\n      onBodyClick.call(this, e);\n      U.stopEvent(e);\n    }).bind(this));\n\n    onStateChanged.call(this, item, {\n      self: this,\n      state: \"open\",\n      item: item\n    });\n\n    data = null;\n    focusTop = null;\n    selectedOptionEl = null;\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {(jQueryObject|Element|Number)} _boundID\n   * @param {(String|Array)} _value\n   * @return {AX6UIAutocomplete}\n   * @example\n   * ```js\n   * myAutocomplete.setValue($('[data-ax6ui-autocomplete=\"autocomplete1\"]'), {value:\"test\", text:\"test\"});\n   * myAutocomplete.setValue($('[data-ax6ui-autocomplete=\"autocomplete1\"]'), [{value:\"test1\", text:\"test1\"}, {value:\"test2\", text:\"test2\"}]);\n   * myAutocomplete.setValue($('[data-ax6ui-autocomplete=\"autocomplete1\"]'), null);\n   * ```\n   */\n  setValue(_boundID, _value) {\n    let queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n    if (queIdx === -1) {\n      console.log(info.getError(\"ax6ui-autocomplete\", \"402\", \"val\"));\n      return;\n    }\n\n    clearSelected.call(this, queIdx);\n\n    if (U.isArray(_value)) {\n      let _values = U.map(_value, function () {\n        return {value: this};\n      });\n      setSelected.call(this, queIdx, _values, true, {noStateChange: true});\n    }\n    else if (U.isObject(_value)) {\n      setSelected.call(this, queIdx, {value: _value}, true, {noStateChange: true});\n    } else {\n      printLabel.call(this, queIdx);\n    }\n\n    blurLabel.call(this, queIdx);\n    alignAutocompleteDisplay.call(this);\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {(jQueryObject|Element|Number)} _boundID\n   * @param {(String|Array)} _text\n   * @return {AX6UIAutocomplete}\n   * @example\n   * ```js\n   * myAutocomplete.setText($('[data-ax6ui-autocomplete=\"autocomplete1\"]'), \"string\");\n   * myAutocomplete.setText($('[data-ax6ui-autocomplete=\"autocomplete1\"]'), [\"substring\", \"search\"]);\n   * ```\n   */\n  setText(_boundID, _text) {\n    let queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n    if (queIdx === -1) {\n      console.log(info.getError(\"ax6ui-autocomplete\", \"402\", \"val\"));\n      return;\n    }\n\n    this.queue[queIdx].selected = [];\n    clearSelected.call(this, queIdx);\n    setSelected.call(this, queIdx, _text, true, {noStateChange: true});\n    blurLabel.call(this, queIdx);\n    alignAutocompleteDisplay.call(this);\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {(jQueryObject|Element|Number)} _boundID\n   * @returns {Array}\n   */\n  getSelectedOption(_boundID) {\n    let queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n    if (queIdx === -1) {\n      console.log(info.getError(\"ax6ui-autocomplete\", \"402\", \"val\"));\n      return;\n    }\n    return U.deepCopy(this.queue[queIdx].selected);\n  }\n\n  /**\n   * @method\n   * @return {AX6UIAutocomplete}\n   */\n  close(item) {\n    if (this.closeTimer) clearTimeout(this.closeTimer);\n    if (!this.activeautocompleteOptionGroup) return this;\n\n    item = this.queue[this.activeautocompleteQueueIndex];\n    item.optionFocusIndex = -1;\n    item.$display.removeAttr(\"data-autocomplete-option-group-opened\").trigger(\"focus\");\n\n    this.activeautocompleteOptionGroup.addClass(\"destroy\");\n\n    jQuery(window)\n      .off(\"resize.ax6ui-autocomplete-\" + this.instanceId)\n      .off(\"click.ax6ui-autocomplete-\" + this.instanceId)\n      .off(\"keyup.ax6ui-autocomplete-\" + this.instanceId);\n\n    this.closeTimer = setTimeout((function () {\n      if (this.activeautocompleteOptionGroup) this.activeautocompleteOptionGroup.remove();\n      this.activeautocompleteOptionGroup = null;\n      this.activeautocompleteQueueIndex = -1;\n\n      onStateChanged.call(this, item, {\n        self: this,\n        state: \"close\"\n      });\n\n    }).bind(this), this.config.animateTime);\n    this.waitOptionsCallback = null;\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {(jQueryObject|Element|Number)} _boundID\n   * @return {AX6UIAutocomplete}\n   */\n  blur(_boundID) {\n    let queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n    if (queIdx === -1) {\n      console.log(info.getError(\"ax6ui-autocomplete\", \"402\", \"val\"));\n      return;\n    }\n\n    blurLabel.call(this, queIdx);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {(jQueryObject|Element|Number)} _boundID\n   * @return {AX6UIAutocomplete}\n   */\n  enable(_boundID) {\n    let queIdx = getQueIdx.call(this, _boundID);\n\n    if (typeof queIdx !== \"undefined\") {\n      this.queue[queIdx].disable = false;\n      if (this.queue[queIdx].$display[0]) {\n        this.queue[queIdx].$display.removeAttr(\"disabled\");\n        this.queue[queIdx].$displayLabelInput.removeAttr(\"disabled\");\n      }\n      if (this.queue[queIdx].$select[0]) {\n        this.queue[queIdx].$select.removeAttr(\"disabled\");\n\n      }\n\n      onStateChanged.call(this, this.queue[queIdx], {\n        self: this,\n        state: \"enable\"\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {(jQueryObject|Element|Number)} _boundID\n   * @return {AX6UIAutocomplete}\n   */\n  disable(_boundID) {\n    let queIdx = getQueIdx.call(this, _boundID);\n\n    if (typeof queIdx !== \"undefined\") {\n      this.queue[queIdx].disable = true;\n      if (this.queue[queIdx].$display[0]) {\n        this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n        this.queue[queIdx].$displayLabelInput.attr(\"disabled\", \"disabled\");\n      }\n      if (this.queue[queIdx].$select[0]) {\n        this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n      }\n\n      onStateChanged.call(this, this.queue[queIdx], {\n        self: this,\n        state: \"disable\"\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @return {AX6UIAutocomplete}\n   */\n  align() {\n    alignAutocompleteDisplay.call(this);\n    return this;\n  }\n\n}\n\nexport default AX6UIAutocomplete;"]}