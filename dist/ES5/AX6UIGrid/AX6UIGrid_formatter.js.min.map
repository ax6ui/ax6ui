{"version":3,"sources":["AX6UIGrid_formatter.js"],"names":["_AX6Util","require","money","this","value","val","replace","regExpPattern","RegExp","arrNumber","split","test","_AX6Util2","default","left","returnValue"],"mappings":"4IAAA,IAAAA,SAAAC,QAAA,yDAEMC,MAAQ,WACZ,QAA0B,IAAfC,KAAKC,MAAuB,CACrC,IAAIC,GAAO,GAAKF,KAAKC,OAAOE,QAAQ,gBAAiB,IACnDC,EAAgB,IAAIC,OAAO,gCALjCC,EAAAJ,EAAAK,MAAA,KASID,EAAU,IAAM,IAEhB,GATEP,EAAQ,GAARA,EAAoB,GAAAI,QAAAC,EAAA,eACbA,EAAPI,KAAsBF,EAAa,KACrC,OACEF,EAAAA,OAAoBC,EAAOC,EAAA,GAAAG,UAAAC,QAAAC,KAAAL,EAD7B,GAAA,GAAAA,EAAA,GAAAC,MAAA,KAAA,GAAA,MAGEK,qBAKAN,MAAAA","file":"AX6UIGrid_formatter.js","sourcesContent":["import U from \"../AX6Util\";\n\nconst money = function () {\n  if (typeof this.value !== \"undefined\") {\n    let val = ('' + this.value).replace(/[^0-9^\\.^\\-]/g, \"\"),\n      regExpPattern = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n      arrNumber = val.split('.'),\n      returnValue;\n\n    arrNumber[0] += '.';\n\n    do {\n      arrNumber[0] = arrNumber[0].replace(regExpPattern, '$1,$2');\n    } while (regExpPattern.test(arrNumber[0]));\n\n    return (arrNumber.length > 1) ? arrNumber[0] + U.left(arrNumber[1], 2) : arrNumber[0].split('.')[0];\n  } else {\n    return \"\";\n  }\n};\n\nexport default {\n  money: money\n};"]}