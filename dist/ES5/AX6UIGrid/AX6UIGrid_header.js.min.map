{"version":3,"sources":["AX6UIGrid_header.js"],"names":["_jqmin","require","_AX6Util","_AX6UIGrid_util","_AX6UIGrid_body","_AX6UIGrid_data","columnResizerEvent","on","_columnResizer","_colIndex","self","this","columnResizerPositionLeft","$","offset","left","gridTargetOffsetLeft","xvar","columnResizerIndex","resizeRange","min","colGroup","_width","max","width","_jqmin2","default","document","body","_AX6UIGrid_util2","ENM","instanceId","e","mouseObj","getMousePosition","__da","clientX","mousePosition","addClass","$columnResizer","css","off","call","_AX6Util2","stopEvent","removeClass","columnResizerLived","setColumnWidth","attr","init","key","getAttribute","colIndex","col","selected","selectAll","isNothing","sortable","sortFixed","config","_AX6UIGrid_body2","blur","toggleSort","Number","resetFrozenColumn","cfg","divideTableByFrozenColumnIndex","headerTable","frozenColumnIndex","asideHeaderData","dataTable","dividedHeaderObj","rows","length","i","data","cols","label","_col","colspan","rowspan","lineNumberColumnWidth","push","columnAttr","extend","rowSelectorColumnWidth","asideColGroup","leftHeaderData","leftData","headerData","rightData","getFieldValue","_reset","repaint","undefined","virtualPaintStartRowIndex","paintStartRowIndex","headerAlign","header","align","slice","repaintHeader","_elTarget","_colGroup","_bodyRow","leftHeaderColGroup","headerColGroup","SS","tableWidth","cgl","cgi","tri","trl","ci","cl","trCSS_class","columnHeight","columnBorderWidth","colAlign","cellHeight","rowIndex","isFunction","tdCSS_class","headerStyleClass","column","lineHeight","_SS","sort","enableFilter","resizerHeight","resizerLeft","AS","asidePanelWidth","scrollContentWidth","panel","sortOrder","seq","rightSum","scrollTo","_key","sortInfo","k","fixed","l","multiSort","applySortStatus","_sortInfo","orderBy","setColumnSort","getHeader","select","_options","dindex","updateRowState","getExcelString","join"],"mappings":"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","file":"AX6UIGrid_header.js","sourcesContent":["import jQuery from \"jqmin\";\nimport U from \"../AX6Util\";\nimport UTIL from \"./AX6UIGrid_util\";\nimport BODY from \"./AX6UIGrid_body\";\nimport DATA from \"./AX6UIGrid_data\";\n\nconst columnResizerEvent = {\n    \"on\": function (_columnResizer, _colIndex) {\n        var self = this;\n        var $columnResizer = $(_columnResizer);\n        var columnResizerPositionLeft = $columnResizer.offset().left;\n        var gridTargetOffsetLeft = self.$[\"container\"][\"root\"].offset().left;\n        self.xvar.columnResizerIndex = _colIndex;\n        var resizeRange = {\n            min: -self.colGroup[_colIndex]._width + 2,\n            max: self.$[\"container\"][\"root\"].width() - self.colGroup[_colIndex]._width,\n        };\n\n        jQuery(document.body)\n            .on(UTIL.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                var mouseObj = UTIL.getMousePosition(e);\n                self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n\n                if (resizeRange.min > self.xvar.__da) {\n                    self.xvar.__da = resizeRange.min;\n                } else if (resizeRange.max < self.xvar.__da) {\n                    self.xvar.__da = resizeRange.max;\n                }\n\n                if (!self.xvar.columnResizerLived) {\n                    self.$[\"resizer\"][\"horizontal\"].addClass(\"live\");\n                }\n                self.xvar.columnResizerLived = true;\n                self.$[\"resizer\"][\"horizontal\"].css({\n                    left: columnResizerPositionLeft + self.xvar.__da - gridTargetOffsetLeft\n                });\n            })\n            .on(UTIL.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                columnResizerEvent.off.call(self);\n                U.stopEvent(e);\n            })\n            .on(\"mouseleave.ax5grid-\" + this.instanceId, function (e) {\n                columnResizerEvent.off.call(self);\n                U.stopEvent(e);\n            });\n\n        jQuery(document.body)\n            .attr('unselectable', 'on')\n            .css('user-select', 'none')\n            .on('selectstart', false);\n    },\n    \"off\": function () {\n        this.$[\"resizer\"][\"horizontal\"].removeClass(\"live\");\n        this.xvar.columnResizerLived = false;\n\n        if (typeof this.xvar.__da === \"undefined\") {\n\n        }\n        else {\n            this.setColumnWidth(this.colGroup[this.xvar.columnResizerIndex]._width + this.xvar.__da, this.xvar.columnResizerIndex);\n        }\n\n        jQuery(document.body)\n            .off(UTIL.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId)\n            .off(UTIL.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId)\n            .off(\"mouseleave.ax5grid-\" + this.instanceId);\n\n        jQuery(document.body)\n            .removeAttr('unselectable')\n            .css('user-select', 'auto')\n            .off('selectstart');\n    }\n};\n\nconst init = function () {\n    // 헤더 초기화\n    const self = this;\n\n    this.$[\"container\"][\"header\"].on(\"click\", '[data-ax6grid-column-attr]', function (e) {\n        let key = this.getAttribute(\"data-ax6grid-column-key\"),\n            colIndex = this.getAttribute(\"data-ax6grid-column-colindex\"),\n            //rowIndex = this.getAttribute(\"data-ax6grid-column-rowindex\"),\n            col = self.colGroup[colIndex];\n\n        if (key === \"__checkbox_header__\") {\n            let selected = this.getAttribute(\"data-ax6grid-selected\");\n            selected = (U.isNothing(selected)) ? true : (selected !== \"true\");\n\n            $(this).attr(\"data-ax6grid-selected\", selected);\n            self.selectAll({selected: selected});\n\n            selected = null;\n        }\n        else {\n            if (key && col && col.sortable !== false && !col.sortFixed) {\n                if (col.sortable === true || self.config.sortable === true) {\n                    toggleSort.call(self, col.key);\n                }\n            }\n        }\n\n        BODY.blur.call(self);\n\n        key = null;\n        colIndex = null;\n        col = null;\n    });\n    this.$[\"container\"][\"header\"]\n        .on(\"mousedown\", '[data-ax6grid-column-resizer]', function (e) {\n            let colIndex = this.getAttribute(\"data-ax6grid-column-resizer\");\n\n            self.xvar.mousePosition = UTIL.getMousePosition(e);\n            columnResizerEvent.on.call(self, this, Number(colIndex));\n            U.stopEvent(e);\n\n            colIndex = null;\n        })\n        .on(\"dragstart\", function (e) {\n            U.stopEvent(e);\n            return false;\n        });\n\n    resetFrozenColumn.call(this);\n};\n\nconst resetFrozenColumn = function () {\n    let cfg = this.config,\n        dividedHeaderObj = UTIL.divideTableByFrozenColumnIndex(this.headerTable, this.xvar.frozenColumnIndex);\n\n    this.asideHeaderData = (function (dataTable) {\n        let colGroup = [];\n        let data = {rows: []};\n        for (let i = 0, l = dataTable.rows.length; i < l; i++) {\n            data.rows[i] = {cols: []};\n            if (i === 0) {\n                let col = {\n                    label: \"\",\n                    colspan: 1,\n                    rowspan: dataTable.rows.length,\n                    colIndex: null\n                }, _col = {};\n\n                if (cfg.showLineNumber) {\n                    _col = jQuery.extend({}, col, {\n                        width: cfg.lineNumberColumnWidth,\n                        _width: cfg.lineNumberColumnWidth,\n                        columnAttr: \"lineNumber\",\n                        key: \"__index_header__\", label: \"&nbsp;\"\n                    });\n                    colGroup.push(_col);\n                    data.rows[i].cols.push(_col);\n                }\n                if (cfg.showRowSelector) {\n                    _col = jQuery.extend({}, col, {\n                        width: cfg.rowSelectorColumnWidth,\n                        _width: cfg.rowSelectorColumnWidth,\n                        columnAttr: \"rowSelector\",\n                        key: \"__checkbox_header__\", label: \"\"\n                    });\n                    colGroup.push(_col);\n                    data.rows[i].cols.push(_col);\n                }\n\n                col = null;\n            }\n        }\n\n        this.asideColGroup = colGroup;\n        return data;\n    }).call(this, this.headerTable);\n\n    this.leftHeaderData = dividedHeaderObj.leftData;\n    this.headerData = dividedHeaderObj.rightData;\n};\n\nconst getFieldValue = function (_col) {\n    return (_col.key === \"__checkbox_header__\")\n        ? `<div class=\"checkBox\" style=\"max-height: ${_col.width - 10}px;min-height: ${_col.width - 10}px;\"></div>`\n        : (_col.label || \"&nbsp;\");\n};\n\nconst repaint = function (_reset) {\n    let cfg = this.config,\n        colGroup = this.colGroup;\n\n    if (_reset) {\n        resetFrozenColumn.call(this);\n        this.xvar.paintStartRowIndex = undefined;\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n    }\n    let asideHeaderData = this.asideHeaderData,\n        leftHeaderData = this.leftHeaderData,\n        headerData = this.headerData,\n        headerAlign = cfg.header.align;\n\n    // this.asideColGroup : asideHeaderData에서 처리 함.\n    this.leftHeaderColGroup = colGroup.slice(0, this.config.frozenColumnIndex);\n    this.headerColGroup = colGroup.slice(this.config.frozenColumnIndex);\n\n    var repaintHeader = function (_elTarget, _colGroup, _bodyRow) {\n        let tableWidth = 0,\n            SS = [];\n        SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n        SS.push('<colgroup>');\n        for (var cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n            SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            tableWidth += _colGroup[cgi]._width;\n        }\n        SS.push('<col  />');\n        SS.push('</colgroup>');\n\n        for (var tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n            var trCSS_class = \"\";\n            SS.push('<tr class=\"' + trCSS_class + '\">');\n            for (var ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                var col = _bodyRow.rows[tri].cols[ci];\n                var cellHeight = cfg.header.columnHeight * col.rowspan - cfg.header.columnBorderWidth;\n                var colAlign = headerAlign || col.align;\n                SS.push('<td ',\n                    'data-ax6grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                    'data-ax6grid-column-row=\"' + tri + '\" ',\n                    'data-ax6grid-column-col=\"' + ci + '\" ',\n                    (function () {\n                        return (typeof col.key !== \"undefined\") ? 'data-ax6grid-column-key=\"' + col.key + '\" ' : '';\n                    })(),\n                    'data-ax6grid-column-colindex=\"' + col.colIndex + '\" ',\n                    'data-ax6grid-column-rowindex=\"' + col.rowIndex + '\" ',\n                    'colspan=\"' + col.colspan + '\" ',\n                    'rowspan=\"' + col.rowspan + '\" ',\n                    'class=\"' + (function (_col) {\n                        var tdCSS_class = \"\";\n                        if (_col.headerStyleClass) {\n                            if (U.isFunction(_col.headerStyleClass)) {\n                                tdCSS_class += _col.headerStyleClass.call({\n                                    column: _col,\n                                    key: _col.key\n                                }) + \" \";\n                            } else {\n                                tdCSS_class += _col.headerStyleClass + \" \";\n                            }\n                        }\n                        if (cfg.header.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                        if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                        return tdCSS_class;\n                    }).call(this, col) + '\" ',\n                    'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                SS.push((function () {\n                    var lineHeight = (cfg.header.columnHeight - cfg.header.columnPadding * 2 - cfg.header.columnBorderWidth);\n                    return '<span data-ax6grid-cellHolder=\"\" ' +\n                        ((colAlign) ? 'data-ax6grid-text-align=\"' + colAlign + '\"' : '') +\n                        ' style=\"height: ' + (cfg.header.columnHeight - cfg.header.columnBorderWidth) + 'px;line-height: ' + lineHeight + 'px;\">';\n                })(), (function () {\n                    var _SS = \"\";\n\n                    if (!U.isNothing(col.key) && !U.isNothing(col.colIndex) && (cfg.sortable === true || col.sortable === true) && col.sortable !== false) {\n                        _SS += '<span data-ax6grid-column-sort=\"' + col.colIndex + '\" data-ax6grid-column-sort-order=\"' + (colGroup[col.colIndex].sort || \"\") + '\" />';\n                    }\n                    return _SS;\n                })(), getFieldValue.call(this, col), '</span>');\n\n                if (!U.isNothing(col.colIndex)) {\n                    if (cfg.enableFilter) {\n                        SS.push('<span data-ax6grid-column-filter=\"' + col.colIndex + '\" data-ax6grid-column-filter-value=\"\"  />');\n                    }\n                }\n\n                SS.push('</td>');\n            }\n            SS.push('<td ',\n                'data-ax6grid-column-row=\"null\" ',\n                'data-ax6grid-column-col=\"null\" ',\n                'style=\"height: ' + (cfg.header.columnHeight) + 'px;min-height: 1px;\" ',\n                '></td>');\n            SS.push('</tr>');\n        }\n        SS.push('</table>');\n        _elTarget.html(SS.join(''));\n\n        /// append column-resizer\n        (function () {\n            let resizerHeight = cfg.header.columnHeight * _bodyRow.rows.length - cfg.header.columnBorderWidth,\n                resizerLeft = 0,\n                AS = [];\n\n            for (var cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                var col = _colGroup[cgi];\n                if (!U.isNothing(col.colIndex)) {\n                    //_colGroup[cgi]._width\n                    resizerLeft += col._width;\n                    AS.push('<div data-ax6grid-column-resizer=\"' + col.colIndex + '\" style=\"height:' + resizerHeight + 'px;left: ' + (resizerLeft - 4) + 'px;\"  />');\n                }\n            }\n            _elTarget.append(AS);\n        }).call(this);\n\n\n        return tableWidth;\n    };\n\n    if (cfg.asidePanelWidth > 0) {\n        repaintHeader.call(this, this.$.panel[\"aside-header\"], this.asideColGroup, asideHeaderData);\n    }\n    if (cfg.frozenColumnIndex > 0) {\n        repaintHeader.call(this, this.$.panel[\"left-header\"], this.leftHeaderColGroup, leftHeaderData);\n    }\n    this.xvar.scrollContentWidth = repaintHeader.call(this, this.$.panel[\"header-scroll\"], this.headerColGroup, headerData);\n\n    if (cfg.rightSum) {\n\n    }\n};\n\nconst scrollTo = function (css) {\n    this.$.panel[\"header-scroll\"].css(css);\n    return this;\n};\n\nconst toggleSort = function (_key) {\n    let sortOrder = \"\",\n        sortInfo = {},\n        seq = 0;\n\n    for (var k in this.sortInfo) {\n        if (this.sortInfo[k].fixed) {\n            sortInfo[k] = this.sortInfo[k];\n            seq++;\n        }\n    }\n\n    for (var i = 0, l = this.colGroup.length; i < l; i++) {\n        if (this.colGroup[i].key == _key) {\n            if (sortOrder == \"\") {\n                if (typeof this.colGroup[i].sort === \"undefined\") {\n                    sortOrder = \"desc\";\n                }\n                else if (this.colGroup[i].sort === \"desc\") {\n                    sortOrder = \"asc\";\n                }\n                else {\n                    sortOrder = undefined;\n                }\n            }\n            this.colGroup[i].sort = sortOrder;\n        } else if (!this.config.multiSort) {\n            this.colGroup[i].sort = undefined;\n        }\n\n        if (typeof this.colGroup[i].sort !== \"undefined\") {\n            if (!sortInfo[this.colGroup[i].key]) {\n                sortInfo[this.colGroup[i].key] = {\n                    seq: seq++,\n                    orderBy: this.colGroup[i].sort\n                };\n            }\n        }\n    }\n\n    this.setColumnSort(sortInfo);\n    return this;\n};\n\nconst applySortStatus = function (_sortInfo) {\n    for (var i = 0, l = this.colGroup.length; i < l; i++) {\n        for (var _key in _sortInfo) {\n            if (this.colGroup[i].key == _key) {\n                this.colGroup[i].sort = _sortInfo[_key].orderBy;\n            }\n        }\n    }\n    return this;\n};\n\nconst select = function (_options) {\n    DATA.select.call(this, dindex, _options && _options.selected);\n    BODY.updateRowState.call(this, [\"selected\"], dindex);\n};\n\nconst getExcelString = function () {\n    let cfg = this.config,\n        colGroup = this.colGroup,\n        headerData = this.headerTable,\n        getHeader = function (_colGroup, _bodyRow) {\n            var SS = [];\n            //SS.push('<table border=\"1\">');\n            for (var tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr>');\n                for (var ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    var col = _bodyRow.rows[tri].cols[ci];\n                    SS.push('<td ',\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        '>', getFieldValue.call(this, col), '</td>');\n                }\n                SS.push('</tr>');\n            }\n            //SS.push('</table>');\n\n            return SS.join('');\n        };\n\n    return getHeader.call(this, colGroup, headerData);\n};\n\nexport default {\n    init: init,\n    repaint: repaint,\n    scrollTo: scrollTo,\n    toggleSort: toggleSort,\n    applySortStatus: applySortStatus,\n    getExcelString: getExcelString\n};"]}