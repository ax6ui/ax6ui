{"version":3,"sources":["AX6UIPalette.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Info","_AX6Util","_AX6Mustache","frameTmpl","columnKeys","colorsTmpl","mousedown","_AX6Info2","default","supportTouch","mousemove","onStateChanged","opts","that","ENM","call","this","getMousePosition","mouseObj","originalEvent","e","changedTouches","pageX","pageY","bindHandle","item","_this","originalTrackWidth","$track","width","clientX","config","colors","slider","handleWidth","clientY","trackWidth","amount","handleLeft","$handle","css","left","off","handleLeftToAmount","updatePreviewColor","amountToColor","_originalHandleLeft","position","handleMoveEvent","on","_originalHandleClientX","_selectedColor","toUpperCase","onClick","getAttribute","newHandleLeft","offset","color","event","$preview","background-color","onUpdateColor","processor","_amount","lighten","darken","getHexValue","white","_color","normal","_uniqColor","colorToAmount","black","_diffColor","getHsl","l","color1","amountToHandleLeft","_this2","body","instanceId","da","document","stopEvent","_jqmin2","attr","xvar","resizerLived","repaint","selectedColor","box","innerWidth","height","_this3","$target","innerHeight","html","_AX6Mustache2","$","root","find","controls","list","forEach","c","_color1value","_color2value","value","r","b","_color0value","g","handleTop","idx","handleHeight","render","el","each","elIdx","$item","extend","_index","$label","setSelectedColor","push","AX6UIPalette","_classCallCheck","_this4","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","animateTime","preview","cellWidth","label","trackHeight","init","_this5","console","target","setTimeout","getError","initOnce","trim","initialized","sColor","_AX6Util2","minDiffColor","minDiffColorIndex","diffColor","Math","abs","c1hsl","h","c2hsl","s","cidx"],"mappings":"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","file":"AX6UIPalette.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore\";\nimport info from \"./AX6Info\";\nimport U from \"./AX6Util\";\nimport mustache from \"./AX6Mustache\";\nimport \"./AX6UIPalette/index.scss\";\n\nconst frameTmpl = function (columnKeys) {\n    return `\n<div data-ax6ui-palette=\"\">\n<div data-ax6palette-container=\"root\">\n    <div data-ax6palette-container=\"colors\"></div>\n    <div data-ax6palette-container=\"controls\"></div>\n</div>\n</div>\n`;\n};\nconst colorsTmpl = function (columnKeys) {\n    return `\n{{#colors}}\n{{#list}}\n<div data-ax6palette-color=\"{{label}}\" data-ax6palette-color-index=\"{{@i}}\">\n    <div data-panel=\"color-preview\" style=\"padding:{{preview.cellPadding}}px;width:{{preview.cellWidth}}px;\">\n        <div data-panel=\"color-box\" style=\"width:{{preview.width}}px;height:{{preview.height}}px;\"><div data-panel=\"color\" style=\"background-color:{{value}};\"></div></div>\n    </div>\n    <div data-panel=\"color-label\" style=\"width:{{label.width}}px;\">{{label}}</div>\n    <div data-panel=\"color-slider\">\n        <div data-panel=\"color-track\" style=\"height:{{slider.trackHeight}}px;background: linear-gradient(90deg, {{_color0value}}, {{_color1value}}, {{_color2value}}); \">\n            <div data-panel=\"color-handle\">\n                <div data-panel=\"color-handle-after\" style=\"width:{{slider.handleWidth}}px;height:{{slider.handleWidth}}px;left:{{slider.handleLeft}}px;top:{{slider.handleLeft}}px;\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n{{/list}}\n{{/colors}}\n`;\n};\nconst ENM = {\n    \"mousedown\": (info.supportTouch) ? \"touchstart\" : \"mousedown\",\n    \"mousemove\": (info.supportTouch) ? \"touchmove\" : \"mousemove\",\n    \"mouseup\": (info.supportTouch) ? \"touchend\" : \"mouseup\"\n};\nconst onStateChanged = function (opts, that) {\n    if (opts && opts.onStateChanged) {\n        opts.onStateChanged.call(that, that);\n    }\n    else if (this.onStateChanged) {\n        this.onStateChanged.call(that, that);\n    }\n\n    that = null;\n};\nconst getMousePosition = function (e) {\n    let mouseObj, originalEvent = (e.originalEvent) ? e.originalEvent : e;\n    mouseObj = ('changedTouches' in originalEvent && originalEvent.changedTouches) ? originalEvent.changedTouches[0] : originalEvent;\n    // clientX, Y 쓰면 스크롤에서 문제 발생\n    return {\n        clientX: mouseObj.pageX,\n        clientY: mouseObj.pageY\n    }\n};\nconst bindHandle = function (item) {\n    item.originalTrackWidth = item.$track.width();\n    item.trackWidth = item.originalTrackWidth - (this.config.colors.slider.handleWidth / 5);\n    let handleLeft = amountToHandleLeft.call(this, item, item._amount);\n\n    // handleLeft 가 범위를 벗어나면?\n    if (handleLeft < 0 || handleLeft > item.trackWidth) {\n        let amount;\n        handleLeft = handleLeft < 0 ? 0 : handleLeft > item.trackWidth ? item.trackWidth : handleLeft;\n        amount = handleLeftToAmount.call(this, item, handleLeft);\n        updatePreviewColor.call(this, item, amountToColor.call(this, item, amount));\n    }\n\n    item.$handle.css({left: handleLeft});\n    item.$item\n        .off(ENM[\"mousedown\"])\n        .on(ENM[\"mousedown\"], '[data-panel=\"color-handle\"]', (e) => {\n            let mouseObj = getMousePosition(e);\n            item._originalHandleClientX = mouseObj.clientX;\n            item._originalHandleLeft = item.$handle.position().left;\n            handleMoveEvent.on.call(this, item);\n            U.stopEvent(e.originalEvent);\n        })\n        .off(\"click\")\n        .on(\"click\", '[data-panel=\"color-label\"], [data-panel=\"color-preview\"]', (e) => {\n            if (this.onClick) {\n                this.onClick.call(item, '#' + item._selectedColor.toUpperCase(), e);\n            }\n        })\n        .on(\"click\", '[data-panel=\"color-track\"]', (e) => {\n            if (e.target.getAttribute(\"data-panel\") == \"color-track\") {\n                let mouseObj = getMousePosition(e),\n                    newHandleLeft = mouseObj.clientX - item.$track.offset().left,\n                    amount = handleLeftToAmount(item, newHandleLeft);\n\n                item.$handle.css({left: newHandleLeft});\n                updatePreviewColor.call(this, item, amountToColor.call(this, item, amount), e);\n\n                mouseObj = null;\n                newHandleLeft = null;\n                amount = null;\n            }\n        });\n};\nconst updatePreviewColor = function (item, color, event) {\n    item.$preview\n        .css({\"background-color\": '#' + color});\n    item.$label.html('#' + color.toUpperCase());\n    item._selectedColor = color;\n\n    if (event && this.onUpdateColor) {\n        this.onUpdateColor.call(item, '#' + item._selectedColor.toUpperCase());\n    }\n};\nconst amountToColor = function (item, amount) {\n    const processor = {\n        \"black\"(_color, _amount) {\n            return _color.lighten(this.config.colors.slider.amount / 2).darken(_amount).getHexValue();\n        },\n        \"white\"(_color, _amount) {\n            return _color.darken(this.config.colors.slider.amount / 2).darken(_amount).getHexValue();\n        },\n        \"normal\"(_color, _amount) {\n            return _color.darken(_amount).getHexValue();\n        }\n    };\n\n    if (item._uniqColor in processor) {\n        return processor[item._uniqColor].call(this, item._color, amount);\n    } else {\n        return processor[\"normal\"].call(this, item._color, amount);\n    }\n};\nconst colorToAmount = function (item, color) {\n    /// todo : 색상에 가까운 색 표현.\n    const processor = {\n        \"black\"(_color, _diffColor) {\n            let color1 = _color.lighten(this.config.colors.slider.amount / 2);\n            return (color1.getHsl().l - _diffColor.getHsl().l) * 100;\n        },\n        \"white\"(_color, _diffColor) {\n            let color1 = _color.darken(this.config.colors.slider.amount / 2);\n            return (color1.getHsl().l - _diffColor.getHsl().l) * 100;\n        },\n        \"normal\"(_color, _diffColor) {\n            return (_color.getHsl().l - _diffColor.getHsl().l) * 100;\n        }\n    };\n\n    if (item._uniqColor in processor) {\n        return processor[item._uniqColor].call(this, item._color, color);\n    } else {\n        return processor[\"normal\"].call(this, item._color, color);\n    }\n};\nconst handleLeftToAmount = function (item, handleLeft) {\n    return this.config.colors.slider.amount * (handleLeft - (item.trackWidth / 2)) / (item.originalTrackWidth / 2)\n};\nconst amountToHandleLeft = function (item, amount) {\n    return (amount * (item.originalTrackWidth / 2) / this.config.colors.slider.amount) + (item.trackWidth / 2)\n};\nconst handleMoveEvent = {\n    \"on\"(item) {\n        jQuery(document.body)\n            .on(ENM[\"mousemove\"] + \".ax6palette-\" + this.instanceId, (e) => {\n                let mouseObj = getMousePosition(e),\n                    da = mouseObj.clientX - item._originalHandleClientX,\n                    newHandleLeft = item._originalHandleLeft + da,\n                    amount;\n\n                newHandleLeft = newHandleLeft < 0 ? 0 : newHandleLeft > item.trackWidth ? item.trackWidth : newHandleLeft;\n                item.$handle.css({left: newHandleLeft});\n                amount = handleLeftToAmount.call(this, item, newHandleLeft);\n\n                updatePreviewColor.call(this, item, amountToColor.call(this, item, amount), e);\n\n                mouseObj = null;\n                da = null;\n            })\n            .on(ENM[\"mouseup\"] + \".ax6palette-\" + this.instanceId, (e) => {\n                handleMoveEvent.off.call(this);\n                U.stopEvent(e);\n            })\n            .on(\"mouseleave.ax6palette-\" + this.instanceId, (e) => {\n                handleMoveEvent.off.call(this);\n                U.stopEvent(e);\n            });\n\n        jQuery(document.body)\n            .attr('unselectable', 'on')\n            .css('user-select', 'none')\n            .on('selectstart', false);\n    },\n    \"off\"() {\n        this.xvar.resizerLived = false;\n\n        jQuery(document.body)\n            .off(ENM[\"mousemove\"] + \".ax6palette-\" + this.instanceId)\n            .off(ENM[\"mouseup\"] + \".ax6palette-\" + this.instanceId)\n            .off(\"mouseleave.ax6palette-\" + this.instanceId);\n\n        jQuery(document.body)\n            .removeAttr('unselectable')\n            .css('user-select', 'auto')\n            .off('selectstart');\n    }\n};\nconst repaint = function (selectedColor) {\n    let box = {\n        width: this.$target.innerWidth(),\n        height: this.$target.innerHeight(),\n    };\n\n    // 패널 프레임 초기화\n    this.$target.html(mustache.render(frameTmpl.call(this), {}, this.config.columnKeys));\n\n\n    // 각 패널들을 캐싱~\n    this.$ = {\n        \"root\": this.$target.find('[data-ax6palette-container=\"root\"]'),\n        \"colors\": this.$target.find('[data-ax6palette-container=\"colors\"]'),\n        \"controls\": this.$target.find('[data-ax6palette-container=\"controls\"]'),\n    };\n\n    // todo : controls 나중에 고민하여 구현\n    // this.$[\"controls\"].css({height: this.config.controls.height});\n\n    /// colors.list 색상 범위 결정 / 초기화\n    this.config.colors.list.forEach((c) => {\n        c._color = U.color(c.value);\n        c._selectedColor = c._color.getHexValue();\n        if (c._color.r == 0 && c._color.g == 0 && c._color.b == 0) {\n            c._amount = this.config.colors.slider.amount;\n            c._uniqColor = \"black\";\n            c._color0value = \"#\" + c._color.lighten(this.config.colors.slider.amount).getHexValue();\n            c._color1value = \"#\" + c._color.lighten(this.config.colors.slider.amount / 2).getHexValue();\n            c._color2value = \"#\" + c._color.getHexValue();\n        } else if (c._color.r == 255 && c._color.g == 255 && c._color.b == 255) {\n            c._amount = -this.config.colors.slider.amount;\n            c._uniqColor = \"white\";\n            c._color0value = \"#\" + c._color.getHexValue();\n            c._color1value = \"#\" + c._color.darken(this.config.colors.slider.amount / 2).getHexValue();\n            c._color2value = \"#\" + c._color.darken(this.config.colors.slider.amount).getHexValue();\n        } else {\n            c._amount = 0;\n            c._color0value = \"#\" + c._color.lighten(this.config.colors.slider.amount).getHexValue();\n            c._color1value = \"#\" + c._color.getHexValue();\n            c._color2value = \"#\" + c._color.darken(this.config.colors.slider.amount).getHexValue();\n        }\n    });\n\n    // 색생조절 핸들의 위치 조정this.config.colors.list[minDiffColorIndex]\n    this.config.colors.slider.handleLeft = -this.config.colors.slider.handleWidth / 2;\n    this.config.colors.slider.handleTop = -this.config.colors.slider.handleHeight / 2;\n\n    // 팔렛트 컬러 패널 초기화\n    this.$[\"colors\"].html(mustache.render(colorsTmpl.call(this), this.config, this.config.columnKeys));\n\n    this.$[\"colors\"].find('[data-ax6palette-color-index]').each((elIdx, el) => {\n        let idx = el.getAttribute(\"data-ax6palette-color-index\");\n        let color = this.config.colors.list[idx];\n        let item = jQuery.extend({}, color);\n        item._index = idx;\n        item.$item = jQuery(el);\n        item.$preview = item.$item.find('[data-panel=\"color\"]');\n        item.$label = item.$item.find('[data-panel=\"color-label\"]');\n        item.$track = item.$item.find('[data-panel=\"color-track\"]');\n        item.$handle = item.$item.find('[data-panel=\"color-handle\"]');\n        bindHandle.call(this, item);\n        /////\n        this.colors.push(item);\n    });\n\n    if (selectedColor) {\n        this.setSelectedColor(selectedColor);\n    }\n};\n\n\n/**\n * @class\n */\nclass AX6UIPalette extends AX6UICore {\n    /**\n     * @constructor\n     * @param config\n     * @param [config.theme]\n     * @param config.target\n     * @param [config.animateTime]\n     * @param {String} [config.selectedColor]\n     * @param {Object} [config.colors]\n     * @param {Object} [config.colors.preview]\n     * @param {Number} [config.colors.preview.width=24]\n     * @param {Number} [config.colors.preview.height=24]\n     * @param {Number} [config.colors.preview.cellWidth=30]\n     * @param {Object} [config.colors.label]\n     * @param {Number} [config.colors.label.width=80]\n     * @param {Object} [config.colors.slider]\n     * @param {Number} [config.colors.slider.trackHeight=8]\n     * @param {Number} [config.colors.slider.amount=32]\n     * @param {Number} [config.colors.slider.handleWidth=18]\n     * @param {Number} [config.colors.slider.handleHeight=18]\n     * @param {Object[]} [config.colors.list=[red,orange,yellow,green,blue,purple,black,white]]\n     * @param {String} config.colors.list[].label\n     * @param {String} config.colors.list[].value\n     * @param {Object} [config.controls]\n     * @param {Number} [config.controls.height=0]\n     * @param [config.onStateChanged]\n     * @param [config.onClick]\n     * @param [config.onUpdateColor]\n     * @example\n     * ```js\n     * myPalette = new Palette({\n     *  target: $('[data-ax5palette=\"01\"]'),\n     *  onClick: function (hexColor) {\n     *      alert(hexColor);\n     *  }\n     * });\n     *\n     * myPalette = new Palette({\n     *  target: $('[data-ax5palette=\"01\"]'),\n     *  colors: {\n     *      list: [\n     *          {label: \"red\", value: \"#ff0000\"},\n     *          {label: \"orange\", value: \"#ff9802\"},\n     *          {label: \"yellow\", value: \"#ffff00\"},\n     *          {label: \"skyblue\", value: \"#84e4ff\"},\n     *          {label: \"white\", value: \"#ffffff\"}\n     *      ]\n     *  }\n     *  onClick: function (hexColor) {\n     *\n     *  }\n     * });\n     * ```\n     */\n    constructor(config) {\n        super();\n\n        /**\n         * @member {JSON}\n         * @param config\n         * @param config.target\n         * @param [config.theme=default]\n         * @param [config.clickEventName=\"click\"]\n         * @param [config.animateTime=100]\n         * @param [config.colors]\n         * @param [config.colors.preview]\n         * @param [config.colors.preview.width=24]\n         * @param [config.colors.preview,height=24]\n         * @param [config.colors.preview.cellWidth=30]\n         * @param [config.colors.label]\n         * @param [config.colors.label.width=80]\n         * @param [config.colors.slider]\n         * @param [config.colors.slider.trackHeight=8]\n         * @param [config.colors.slider.amount=32]\n         * @param [config.colors.slider.handleWidth=18]\n         * @param [config.colors.slider.handleHeight=18]\n         * @param [config.colors.list]\n         * @param [config.colors.list[].label]\n         * @param [config.colors.list[].value]\n         * @param [config.controls]\n         * @param [config.controls.height=0]\n         * @param [config.columnKeys={}]\n         * @param [config.onStateChanged]\n         * @param [config.onClick]\n         */\n        this.config = {\n            clickEventName: \"click\",\n            theme: 'default',\n            animateTime: 100,\n            colors: {\n                preview: {\n                    width: 24,\n                    height: 24,\n                    cellWidth: 30\n                },\n                label: {\n                    width: 80\n                },\n                slider: {\n                    trackHeight: 8,\n                    amount: 32,\n                    handleWidth: 18,\n                    handleHeight: 18,\n                },\n                list: [\n                    {label: \"red\", value: \"#ff0000\"},\n                    {label: \"orange\", value: \"#ff9802\"},\n                    {label: \"yellow\", value: \"#ffff00\"},\n                    {label: \"green\", value: \"#00ff36\"},\n                    {label: \"blue\", value: \"#0000ff\"},\n                    {label: \"purple\", value: \"#ba00ff\"},\n                    //{label: \"skyblue\", value: \"#84e4ff\"},\n                    //{label: \"pink\", value: \"#ff77c4\"},\n                    {label: \"black\", value: \"#000000\"},\n                    {label: \"white\", value: \"#ffffff\"},\n                ],\n            },\n            controls: {\n                height: 0,\n            },\n            columnKeys: {}\n        };\n        jQuery.extend(true, this.config, config);\n\n        // 멤버 변수 초기화\n        /**\n         * @member {Object}\n         */\n        this.$target = null;\n        /**\n         * @member {Object}\n         */\n        this.xvar = {};\n        /**\n         * @member {Array}\n         */\n        this.colors = [];\n\n        this.init();\n    }\n\n    /**\n     * @method\n     * @param config\n     * @param [config.theme]\n     * @param config.target\n     * @param [config.animateTime]\n     * @param {String} [config.selectedColor]\n     * @param {Object} [config.colors]\n     * @param {Object} [config.colors.preview]\n     * @param {Number} [config.colors.preview.width=24]\n     * @param {Number} [config.colors.preview.height=24]\n     * @param {Number} [config.colors.preview.cellWidth=30]\n     * @param {Object} [config.colors.label]\n     * @param {Number} [config.colors.label.width=80]\n     * @param {Object} [config.colors.slider]\n     * @param {Number} [config.colors.slider.trackHeight=8]\n     * @param {Number} [config.colors.slider.amount=32]\n     * @param {Number} [config.colors.slider.handleWidth=18]\n     * @param {Number} [config.colors.slider.handleHeight=18]\n     * @param {Object[]} [config.colors.list=[red,orange,yellow,green,blue,purple,black,white]]\n     * @param {String} config.colors.list[].label\n     * @param {String} config.colors.list[].value\n     * @param {Object} [config.controls]\n     * @param {Number} [config.controls.height=0]\n     * @param [config.onStateChanged]\n     * @param [config.onClick]\n     * @param [config.onUpdateColor]\n     */\n    init() {\n        this.onStateChanged = this.config.onStateChanged;\n        delete this.config.onStateChanged;\n        this.onClick = this.config.onClick;\n        delete this.config.onClick;\n        this.onUpdateColor = this.config.onUpdateColor;\n        delete this.config.onUpdateColor;\n\n        if (!this.config.target) {\n            console.log(info.getError(\"ax6palette\", \"401\", \"setConfig\"));\n        }\n        this.$target = jQuery(this.config.target);\n\n        setTimeout(() => {\n            repaint.call(this, (this.config.selectedColor || \"\").trim()); // 팔렛트 그리기.\n        });\n\n        // init 호출 여부\n        this.initOnce();\n    }\n\n    /**\n     * @method\n     * @return {AX6UIMask}\n     */\n    initOnce() {\n        if (this.initialized) return this;\n        this.initialized = true;\n    }\n\n    /**\n     * @method\n     * @return {AX6UIPalette}\n     */\n    repaint() {\n        repaint.call(this);\n        return this;\n    }\n\n    /**\n     * @method\n     * @param selectedColor\n     * @return {AX6UIPalette}\n     */\n    setSelectedColor(selectedColor) {\n        let sColor = U.color(selectedColor.trim());\n        // 지정된 색이 가장 가까운 파렛 검색\n        let minDiffColor = 255 * 3, minDiffColorIndex = -1;\n\n        this.colors.forEach(function (c, cidx) {\n            let c1hsl = c._color.getHsl(), c2hsl = sColor.getHsl();\n            let diffColor = Math.abs(c1hsl.h - c2hsl.h) + Math.abs(c1hsl.s - c2hsl.s) + Math.abs(c1hsl.l - c2hsl.l);\n            if (diffColor < minDiffColor) {\n                minDiffColor = diffColor;\n                minDiffColorIndex = cidx;\n            }\n        });\n\n        if (minDiffColorIndex > -1) {\n            let amount, handleLeft,\n                item = this.colors[minDiffColorIndex];\n\n            item._amount = colorToAmount.call(this, item, sColor);\n            handleLeft = amountToHandleLeft.call(this, item, item._amount);\n            //handleLeft = handleLeft < 0 ? 0 : handleLeft > item.trackWidth ? item.trackWidth : handleLeft;\n            item.$handle.css({left: handleLeft});\n\n            amount = handleLeftToAmount.call(this, item, handleLeft);\n            updatePreviewColor.call(this, item, amountToColor.call(this, item, amount));\n        }\n\n        return this;\n    }\n}\n\nexport default AX6UIPalette;"]}