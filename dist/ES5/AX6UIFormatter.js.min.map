{"version":3,"sources":["AX6UIFormatter.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Info","_AX6Util","_AX6UIFormatter_formatter","setSelectionRange","input","pos","value","length","focus","createTextRange","range","collapse","moveEnd","moveStart","select","selectionStart","selectionEnd","formatterEvent","opts","optIdx","e","$input","data","val","keydown","isStop","enterableKeyCodes","which","ctrlKey","shiftKey","get","elemFocusPosition","elem","document","selection","createRange","selectionLength","text","beforeValue","pattern","_AX6UIFormatter_formatter2","default","getPatternValue","call","this","newValue","trigger","blur","_force","bindFormatterTarget","removeData","tagName","$target","attr","console","log","target","re","matched","match","patternArgument","getEnterableKeyCodes","config","formatter","off","on","bind","queue","keyup","getQueIdx","boundID","_AX6Util2","isString","_jqmin2","search","id","AX6UIFormatter","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","animateTime","extend","openTimer","closeTimer","init","initOnce","initialized","self","formatterConfig","_AX6Info2","getError","find","getInstanceId","each","push","queIdx","i","unbind","unbindFormatterTarget"],"mappings":"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","file":"AX6UIFormatter.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore\";\nimport info from \"./AX6Info\";\nimport U from \"./AX6Util\";\nimport FORMATTER from \"./AX6UIFormatter_formatter\";\n\nconst setSelectionRange = function (input, pos) {\n    if (typeof pos == \"undefined\") {\n        pos = input.value.length;\n    }\n    if (input.setSelectionRange) {\n        input.focus();\n        input.setSelectionRange(pos, pos);\n    }\n    else if (input.createTextRange) {\n        var range = input.createTextRange();\n        range.collapse(true);\n        range.moveEnd('character', pos);\n        range.moveStart('character', pos);\n        range.select();\n    }\n    else if (input.selectionStart) {\n        input.focus();\n        input.selectionStart = pos;\n        input.selectionEnd = pos;\n    }\n};\nconst formatterEvent = {\n    'focus': function (opts, optIdx, e) {\n        if (!opts.$input.data(\"__originValue__\")) opts.$input.data(\"__originValue__\", opts.$input.val());\n    },\n    /* 키 다운 이벤트에서 입력할 수 없는 키 입력을 방어 */\n    'keydown': function (opts, optIdx, e) {\n        let isStop = false;\n        if (!opts.enterableKeyCodes) {\n\n        }\n        else if (e.which && opts.enterableKeyCodes[e.which]) {\n\n        }\n        else if (!e.metaKey && !e.ctrlKey && !e.shiftKey) {\n            //console.log(e.which, opts.enterableKeyCodes);\n            isStop = true;\n        }\n        if (isStop) U.stopEvent(e);\n    },\n    /* 키 업 이벤트에서 패턴을 적용 */\n    'keyup': function (opts, optIdx, e) {\n        let elem = opts.$input.get(0),\n            elemFocusPosition,\n            beforeValue,\n            newValue,\n            selection, selectionLength\n        ;\n\n        if ('selectionStart' in elem) {\n            // Standard-compliant browsers\n            elemFocusPosition = elem.selectionStart;\n        }\n        else if (document.selection) {\n            // IE\n            //elem.focus();\n            selection = document.selection.createRange();\n            selectionLength = document.selection.createRange().text.length;\n            selection.moveStart('character', -elem.value.length);\n            elemFocusPosition = selection.text.length - selectionLength;\n        }\n\n        beforeValue = elem.value;\n        if (opts.pattern in FORMATTER) {\n            newValue = FORMATTER[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value);\n        } else {\n            newValue = beforeValue\n        }\n\n        if (newValue != beforeValue) {\n            opts.$input.val(newValue).trigger(\"change\");\n            setSelectionRange(elem, elemFocusPosition + newValue.length - beforeValue.length);\n        }\n    },\n    'blur': function (opts, optIdx, e, _force) {\n        let elem = opts.$input.get(0),\n            beforeValue,\n            newValue\n        ;\n\n        opts.$input.removeData(\"__originValue__\");\n\n        beforeValue = elem.value;\n        if (opts.pattern in FORMATTER) {\n            newValue = FORMATTER[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value, 'blur');\n        } else {\n            newValue = beforeValue\n        }\n\n        if (_force) {\n            opts.$input.val(newValue);\n        } else {\n            if (newValue != beforeValue) {\n                opts.$input.val(newValue).trigger(\"change\");\n            }\n        }\n    }\n};\nconst bindFormatterTarget = function (opts, optIdx) {\n    if (!opts.pattern) {\n        if (opts.$target.get(0).tagName == \"INPUT\") {\n            opts.pattern = opts.$target\n                .attr('data-ax6formatter');\n        }\n        else {\n            opts.pattern = opts.$target\n                .find('input[type=\"text\"]')\n                .attr('data-ax6formatter');\n        }\n        if (!opts.pattern) {\n            console.log(info.getError(\"ax6formatter\", \"501\", \"bind\"));\n            console.log(opts.target);\n            return this;\n        }\n    }\n\n    let re = /[^\\(^\\))]+/gi,\n        matched = opts.pattern.match(re);\n\n    opts.pattern = matched[0];\n    opts.patternArgument = matched[1] || \"\";\n\n    // 함수타입\n    if (opts.pattern in FORMATTER) {\n        opts.enterableKeyCodes = FORMATTER[opts.pattern].getEnterableKeyCodes.call(this, opts, optIdx);\n    } else if(opts.pattern in this.config.formatter) {\n\n    }\n\n    opts.$input\n        .off('focus.ax6formatter')\n        .on('focus.ax6formatter', formatterEvent.focus.bind(this, this.queue[optIdx], optIdx))\n        .off('keydown.ax6formatter')\n        .on('keydown.ax6formatter', formatterEvent.keydown.bind(this, this.queue[optIdx], optIdx))\n        .off('keyup.ax6formatter')\n        .on('keyup.ax6formatter', formatterEvent.keyup.bind(this, this.queue[optIdx], optIdx))\n        .off('blur.ax6formatter')\n        .on('blur.ax6formatter', formatterEvent.blur.bind(this, this.queue[optIdx], optIdx));\n\n    formatterEvent.blur.call(this, this.queue[optIdx], optIdx);\n\n    return this;\n};\nconst unbindFormatterTarget = function (opts, optIdx) {\n    opts.$input\n        .off('focus.ax6formatter')\n        .off('keydown.ax6formatter')\n        .off('keyup.ax6formatter')\n        .off('blur.ax6formatter');\n\n    return this;\n};\n\nconst getQueIdx = function (boundID) {\n    if (!U.isString(boundID)) {\n        boundID = jQuery(boundID).data(\"data-formatter\");\n    }\n    /*\n     if (!U.isString(boundID)) {\n     console.log(info.getError(\"ax6formatter\", \"402\", \"getQueIdx\"));\n     return;\n     }\n     */\n    return U.search(this.queue, function () {\n        return this.id == boundID;\n    });\n};\n\n/**\n * @class\n */\nclass AX6UIFormatter extends AX6UICore {\n    /**\n     * @constructor\n     * @param config\n     * @param {Object} [config.formatter]\n     * @example\n     * ```js\n     * var formatter = new Formatter();\n     *\n     * // Extend formatter\n     * var myFormatter = new Formatter({\n     *  formatter: {\n     *      \"mystyle\": {\n     *          getEnterableKeyCodes: function (_opts) {\n     *              var enterableKeyCodes = {\n     *                  '189': '-' // eventKeyCode\n     *              };\n     *              return jQuery.extend(enterableKeyCodes, {});\n     *          }\n     *          getPatternValue: function (_opts, optIdx, e, val, eType) {\n     *              val = val.replace(/\\D/g, \"\");\n     *              var regExpPattern = /^([0-9]{2})\\-?([0-9]{2})?\\-?([0-9]{2})?\\-?([0-9]{2})?/;\n     *              return val.replace(regExpPattern, function (a, b) {\n     *                  var nval = [arguments[1]];\n     *                  if (arguments[2]) nval.push(arguments[2]);\n     *                  if (arguments[3]) nval.push(arguments[3]);\n     *                  if (arguments[4]) nval.push(arguments[4]);\n     *                  return nval.join(\"-\");\n     *              });\n     *          }\n     *      }\n     *  }\n     * });\n     * ```\n     */\n    constructor(config) {\n        super();\n\n        /**\n         * @member {JSON}\n         * @param config\n         * @param [config.animateTime=250]\n         */\n        this.config = {\n            animateTime: 250\n        };\n        jQuery.extend(true, this.config, config);\n\n        // 멤버 변수 초기화\n        /**\n         * @member\n         * @type {Array}\n         */\n        this.queue = [];\n        this.openTimer = null;\n        this.closeTimer = null;\n\n        this.init();\n    }\n\n    /**\n     * @method\n     */\n    init() {\n\n        // init 호출 여부\n        this.initOnce();\n    }\n\n    /**\n     * @method\n     * @return {AX6UIFormatter}\n     */\n    initOnce() {\n        if (this.initialized) return this;\n        this.initialized = true;\n    }\n\n    /**\n     * @method\n     * @param {Object} opts\n     * @param {Element} opts.target\n     * @return {AX6UIFormatter}\n     */\n    bind(opts) {\n        let self = this;\n        let formatterConfig = {},\n            optIdx;\n\n        jQuery.extend(true, formatterConfig, this.config);\n        if (opts) jQuery.extend(true, formatterConfig, opts);\n        opts = formatterConfig;\n\n        if (!opts.target) {\n            console.log(info.getError(\"ax6formatter\", \"401\", \"bind\"));\n            return this;\n        }\n        opts.$target = jQuery(opts.target);\n\n        if (opts.$target.get(0).tagName == \"INPUT\") {\n            opts.$input = opts.$target;\n        }\n        else {\n            opts.$input = opts.$target.find('input[type=\"text\"]');\n            if (opts.$input.length > 1) {\n                opts.$input.each(function () {\n                    opts.target = this;\n                    self.bind(opts);\n                });\n                return this;\n            }\n        }\n\n        opts.$input = (opts.$target.get(0).tagName == \"INPUT\") ? opts.$target : opts.$target.find('input[type=\"text\"]');\n\n        if (!opts.id) opts.id = opts.$input.data(\"ax6-formatter\");\n\n        if (!opts.id) {\n            opts.id = 'ax6-formatter-' + AX6UICore.getInstanceId();\n            opts.$input.data(\"ax6-formatter\", opts.id);\n        }\n        optIdx = U.search(this.queue, function () {\n            return this.id == opts.id;\n        });\n\n        if (optIdx === -1) {\n            this.queue.push(opts);\n            bindFormatterTarget.call(this, this.queue[this.queue.length - 1], this.queue.length - 1);\n        }\n        else {\n            this.queue[optIdx] = opts;\n            bindFormatterTarget.call(this, this.queue[optIdx], optIdx);\n        }\n\n        return this;\n    }\n\n    /**\n     * @method\n     * @return {AX6UIFormatter}\n     */\n    formatting() {\n        let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n        if (queIdx === -1) {\n            let i = this.queue.length;\n            while (i--) {\n                formatterEvent.blur.call(this, this.queue[i], i, null, true);\n            }\n        } else {\n            formatterEvent.blur.call(this, this.queue[queIdx], queIdx, null, true);\n        }\n        return this;\n    }\n\n    /**\n     * @method\n     * @param opts\n     * @return {AX6UIFormatter}\n     */\n    unbind(opts) {\n        let self = this;\n        let optIdx;\n\n        if (!opts.target) {\n            console.log(info.getError(\"ax6formatter\", \"401\", \"unbind\"));\n            return this;\n        }\n        opts.$target = jQuery(opts.target);\n\n        if (opts.$target.get(0).tagName == \"INPUT\") {\n            opts.$input = opts.$target;\n        }\n        else {\n            opts.$input = opts.$target.find('input[type=\"text\"]');\n            if (opts.$input.length > 1) {\n                opts.$input.each(function () {\n                    opts.target = this;\n                    self.unbind(opts);\n                });\n                return this;\n            }\n        }\n\n        opts.$input = (opts.$target.get(0).tagName == \"INPUT\") ? opts.$target : opts.$target.find('input[type=\"text\"]');\n        opts.id = opts.$input.data(\"ax6-formatter\");\n\n        if (opts.id) {\n            optIdx = U.search(this.queue, function () {\n                return this.id == opts.id;\n            });\n\n            unbindFormatterTarget.call(this, this.queue[optIdx]);\n            this.queue.splice(optIdx, 1);\n        }\n        \n        return this;\n    }\n}\n\nexport default AX6UIFormatter;"]}