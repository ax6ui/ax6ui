{"version":3,"sources":["AX6UIFormatter.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Info","_AX6Util","_AX6UIFormatter_formatter","formatter","setSelectionRange","input","pos","value","length","focus","createTextRange","range","collapse","moveEnd","moveStart","select","selectionStart","selectionEnd","formatterEvent","opts","optIdx","e","$input","data","val","keydown","isStop","enterableKeyCodes","which","ctrlKey","shiftKey","get","elemFocusPosition","elem","document","selection","createRange","selectionLength","text","beforeValue","newValue","pattern","this","customFormatter","getPatternValue","call","trigger","blur","_force","removeData","_AX6UIFormatter_formatter2","default","bindFormatterTarget","$target","tagName","find","console","log","_AX6Info2","getError","re","matched","match","attr","getEnterableKeyCodes","off","on","bind","queue","keyup","patternArgument","unbindFormatterTarget","boundID","_jqmin2","_AX6Util2","search","id","AX6UIFormatter","config","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","animateTime","extend","closeTimer","init","initOnce","initialized","formatterConfig","getFormatter","target","self","_AX6UICore3","getInstanceId","each","isNumber","getQueIdx","queIdx","i","unbind","splice","assign","_formatter","ctrlKeys","numKeys"],"mappings":"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","file":"AX6UIFormatter.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore\";\nimport info from \"./AX6Info\";\nimport U from \"./AX6Util\";\nimport FORMATTER from \"./AX6UIFormatter/AX6UIFormatter_formatter\";\n\nlet formatter = {};\n\nconst setSelectionRange = function (input, pos) {\n  if (typeof pos == \"undefined\") {\n    pos = input.value.length;\n  }\n  if (input.setSelectionRange) {\n    input.focus();\n    input.setSelectionRange(pos, pos);\n  }\n  else if (input.createTextRange) {\n    var range = input.createTextRange();\n    range.collapse(true);\n    range.moveEnd('character', pos);\n    range.moveStart('character', pos);\n    range.select();\n  }\n  else if (input.selectionStart) {\n    input.focus();\n    input.selectionStart = pos;\n    input.selectionEnd = pos;\n  }\n};\nconst formatterEvent = {\n  'focus': function (opts, optIdx, e) {\n    if (!opts.$input.data(\"__originValue__\")) opts.$input.data(\"__originValue__\", opts.$input.val());\n  },\n  /* 키 다운 이벤트에서 입력할 수 없는 키 입력을 방어 */\n  'keydown': function (opts, optIdx, e) {\n    let isStop = false;\n    if (!opts.enterableKeyCodes) {\n\n    }\n    else if (e.which && opts.enterableKeyCodes[e.which]) {\n\n    }\n    else if (!e.metaKey && !e.ctrlKey && !e.shiftKey) {\n      //console.log(e.which, opts.enterableKeyCodes);\n      isStop = true;\n    }\n    if (isStop) U.stopEvent(e);\n  },\n  /* 키 업 이벤트에서 패턴을 적용 */\n  'keyup': function (opts, optIdx, e) {\n    let elem = opts.$input.get(0),\n      elemFocusPosition,\n      beforeValue,\n      newValue,\n      selection, selectionLength;\n\n    if ('selectionStart' in elem) {\n      // Standard-compliant browsers\n      elemFocusPosition = elem.selectionStart;\n    }\n    else if (document.selection) {\n      // IE\n      //elem.focus();\n      selection = document.selection.createRange();\n      selectionLength = document.selection.createRange().text.length;\n      selection.moveStart('character', -elem.value.length);\n      elemFocusPosition = selection.text.length - selectionLength;\n    }\n\n    beforeValue = elem.value;\n    if (opts.pattern in this.customFormatter) {\n      newValue = this.customFormatter[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value);\n    } else if (opts.pattern in FORMATTER) {\n      newValue = FORMATTER[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value);\n    } else {\n      newValue = beforeValue\n    }\n\n    if (newValue != beforeValue) {\n      opts.$input.val(newValue).trigger(\"change\");\n      setSelectionRange(elem, elemFocusPosition + newValue.length - beforeValue.length);\n    }\n  },\n  'blur': function (opts, optIdx, e, _force) {\n    let elem = opts.$input.get(0),\n      beforeValue,\n      newValue\n    ;\n\n    opts.$input.removeData(\"__originValue__\");\n\n    beforeValue = elem.value;\n    if (opts.pattern in this.customFormatter) {\n      newValue = this.customFormatter[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value, 'blur');\n    } else if (opts.pattern in FORMATTER) {\n      newValue = FORMATTER[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value, 'blur');\n    } else {\n      newValue = beforeValue\n    }\n\n    if (_force) {\n      opts.$input.val(newValue);\n    } else {\n      if (newValue != beforeValue) {\n        opts.$input.val(newValue).trigger(\"change\");\n      }\n    }\n  }\n};\nconst bindFormatterTarget = function (opts, optIdx) {\n  if (!opts.pattern) {\n    if (opts.$target.get(0).tagName == \"INPUT\") {\n      opts.pattern = opts.$target\n        .attr('data-ax6formatter');\n    }\n    else {\n      opts.pattern = opts.$target\n        .find('input[type=\"text\"]')\n        .attr('data-ax6formatter');\n    }\n    if (!opts.pattern) {\n      console.log(info.getError(\"ax6formatter\", \"501\", \"bind\"));\n      console.log(opts.target);\n      return this;\n    }\n  }\n\n  let re = /[^\\(^\\))]+/gi,\n    matched = opts.pattern.match(re);\n\n  opts.pattern = matched[0];\n  opts.patternArgument = matched[1] || \"\";\n\n  // 함수타입\n  if (opts.pattern in this.customFormatter) {\n    opts.enterableKeyCodes = this.customFormatter[opts.pattern].getEnterableKeyCodes.call(this, opts, optIdx);\n  } else if (opts.pattern in FORMATTER) {\n    opts.enterableKeyCodes = FORMATTER[opts.pattern].getEnterableKeyCodes.call(this, opts, optIdx);\n  }\n\n  opts.$input\n    .off('focus.ax6formatter')\n    .on('focus.ax6formatter', formatterEvent.focus.bind(this, this.queue[optIdx], optIdx))\n    .off('keydown.ax6formatter')\n    .on('keydown.ax6formatter', formatterEvent.keydown.bind(this, this.queue[optIdx], optIdx))\n    .off('keyup.ax6formatter')\n    .on('keyup.ax6formatter', formatterEvent.keyup.bind(this, this.queue[optIdx], optIdx))\n    .off('blur.ax6formatter')\n    .on('blur.ax6formatter', formatterEvent.blur.bind(this, this.queue[optIdx], optIdx));\n\n  formatterEvent.blur.call(this, this.queue[optIdx], optIdx);\n\n  return this;\n};\nconst unbindFormatterTarget = function (opts, optIdx) {\n  opts.$input\n    .off('focus.ax6formatter')\n    .off('keydown.ax6formatter')\n    .off('keyup.ax6formatter')\n    .off('blur.ax6formatter');\n\n  return this;\n};\nconst getQueIdx = function (boundID) {\n  if (!U.isString(boundID)) {\n    boundID = jQuery(boundID).data(\"data-formatter\");\n  }\n  /*\n   if (!U.isString(boundID)) {\n   console.log(info.getError(\"ax6formatter\", \"402\", \"getQueIdx\"));\n   return;\n   }\n   */\n  return U.search(this.queue, function () {\n    return this.id == boundID;\n  });\n};\n\n/**\n * @class\n */\nclass AX6UIFormatter extends AX6UICore {\n  /**\n   * @constructor\n   * @param config\n   * @param {Object} [config.formatter]\n   * @example\n   * ```js\n   * var formatter = new Formatter();\n   *\n   * // Extend formatter\n   * var myFormatter = new Formatter({\n     *  formatter: {\n     *      \"mystyle\": {\n     *          getEnterableKeyCodes: function (_opts) {\n     *              var enterableKeyCodes = {\n     *                  '189': '-' // eventKeyCode\n     *              };\n     *              return jQuery.extend(enterableKeyCodes, {});\n     *          }\n     *          getPatternValue: function (_opts, optIdx, e, val, eType) {\n     *              val = val.replace(/\\D/g, \"\");\n     *              var regExpPattern = /^([0-9]{2})\\-?([0-9]{2})?\\-?([0-9]{2})?\\-?([0-9]{2})?/;\n     *              return val.replace(regExpPattern, function (a, b) {\n     *                  var nval = [arguments[1]];\n     *                  if (arguments[2]) nval.push(arguments[2]);\n     *                  if (arguments[3]) nval.push(arguments[3]);\n     *                  if (arguments[4]) nval.push(arguments[4]);\n     *                  return nval.join(\"-\");\n     *              });\n     *          }\n     *      }\n     *  }\n     * });\n   * ```\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @member {JSON}\n     * @param config\n     * @param [config.animateTime=250]\n     */\n    this.config = {\n      animateTime: 250\n    };\n    jQuery.extend(true, this.config, config);\n\n    // 멤버 변수 초기화\n    /**\n     * @member\n     * @type {Array}\n     */\n    this.queue = [];\n    this.openTimer = null;\n    this.closeTimer = null;\n\n    this.init();\n  }\n\n  /**\n   * @method\n   */\n  init() {\n\n    // init 호출 여부\n    this.initOnce();\n  }\n\n  /**\n   * @method\n   * @return {AX6UIFormatter}\n   */\n  initOnce() {\n    if (this.initialized) return this;\n    this.initialized = true;\n  }\n\n  /**\n   * @method\n   * @param {Object} opts\n   * @param {Element} opts.target\n   * @return {AX6UIFormatter}\n   */\n  bind(opts) {\n    let formatterConfig = {}, optIdx;\n\n    // 사용자 포메터 체크\n    this.customFormatter = AX6UIFormatter.getFormatter();\n\n    jQuery.extend(true, formatterConfig, this.config);\n    if (opts) jQuery.extend(true, formatterConfig, opts);\n    opts = formatterConfig;\n\n    if (!opts.target) {\n      console.log(info.getError(\"ax6formatter\", \"401\", \"bind\"));\n      return this;\n    }\n    opts.$target = jQuery(opts.target);\n    if(!opts.$target.get(0)){\n      console.log(info.getError(\"ax6formatter\", \"401\", \"can't found target element\"));\n      return this;\n    }\n\n    if (opts.$target.get(0).tagName == \"INPUT\") {\n      opts.$input = opts.$target;\n    }\n    else {\n      opts.$input = opts.$target.find('input[type=\"text\"]');\n      if (opts.$input.length > 1) {\n        opts.$input.each(function () {\n          opts.target = this;\n          self.bind(opts);\n        });\n        return this;\n      }\n    }\n\n    opts.$input = (opts.$target.get(0).tagName == \"INPUT\") ? opts.$target : opts.$target.find('input[type=\"text\"]');\n\n    if (!opts.id) opts.id = opts.$input.data(\"ax6-formatter\");\n\n    if (!opts.id) {\n      opts.id = 'ax6-formatter-' + AX6UICore.getInstanceId();\n      opts.$input.data(\"ax6-formatter\", opts.id);\n    }\n    optIdx = U.search(this.queue, function () {\n      return this.id == opts.id;\n    });\n\n    if (optIdx === -1) {\n      this.queue.push(opts);\n      bindFormatterTarget.call(this, this.queue[this.queue.length - 1], this.queue.length - 1);\n    }\n    else {\n      this.queue[optIdx] = opts;\n      bindFormatterTarget.call(this, this.queue[optIdx], optIdx);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @return {AX6UIFormatter}\n   */\n  formatting() {\n    let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n    if (queIdx === -1) {\n      let i = this.queue.length;\n      while (i--) {\n        formatterEvent.blur.call(this, this.queue[i], i, null, true);\n      }\n    } else {\n      formatterEvent.blur.call(this, this.queue[queIdx], queIdx, null, true);\n    }\n    return this;\n  }\n\n  /**\n   * @method\n   * @param opts\n   * @return {AX6UIFormatter}\n   */\n  unbind(opts) {\n    let self = this;\n    let optIdx;\n\n    if (!opts.target) {\n      console.log(info.getError(\"ax6formatter\", \"401\", \"unbind\"));\n      return this;\n    }\n    opts.$target = jQuery(opts.target);\n\n    if (opts.$target.get(0).tagName == \"INPUT\") {\n      opts.$input = opts.$target;\n    }\n    else {\n      opts.$input = opts.$target.find('input[type=\"text\"]');\n      if (opts.$input.length > 1) {\n        opts.$input.each(function () {\n          opts.target = this;\n          self.unbind(opts);\n        });\n        return this;\n      }\n    }\n\n    opts.$input = (opts.$target.get(0).tagName == \"INPUT\") ? opts.$target : opts.$target.find('input[type=\"text\"]');\n    opts.id = opts.$input.data(\"ax6-formatter\");\n\n    if (opts.id) {\n      optIdx = U.search(this.queue, function () {\n        return this.id == opts.id;\n      });\n\n      unbindFormatterTarget.call(this, this.queue[optIdx]);\n      this.queue.splice(optIdx, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * @static\n   * @param _formatter\n   */\n  static setFormatter(_formatter) {\n    return formatter = Object.assign(formatter, _formatter);\n  }\n\n  /**\n   * @static\n   * @return {{}}\n   */\n  static getFormatter() {\n    return formatter || {};\n  }\n\n  /**\n   * @static\n   * @return {{}}\n   */\n  static getCtrlKeys(){\n    return FORMATTER.ctrlKeys;\n  }\n\n  /**\n   * @static\n   * @return {{}}\n   */\n  static getNumKeys(){\n    return FORMATTER.numKeys;\n  }\n}\n\nexport default AX6UIFormatter;"]}