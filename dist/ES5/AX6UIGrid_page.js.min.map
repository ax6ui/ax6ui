{"version":3,"sources":["AX6UIGrid_page.js"],"names":["_AX6Util","require","_AX6Mustache","_AX6UIGrid_tmpl","onclickPageMove","_act","callback","_pageNo","this","page","currentPage","selectPage","config","onChange","call","self","data","processor","first","pageNo","last","totalPages","navigationUpdate","pageSize","totalElements","firstIcon","prevIcon","nextIcon","lastIcon","navigationItemCount","startI","endI","hasPage","Math","floor","l","p","selected","$","html","_AX6Mustache2","default","render","_AX6UIGrid_tmpl2","page_navigation","find","on","empty","statusUpdate","returns","statusDisplay","fromRowIndex","xvar","virtualPaintStartRowIndex","toRowIndex","virtualPaintRowCount","dataRowCount","page_status","_AX6Util2","number","money","dataRealRowCount","progress","appendProgress","appendProgressIcon"],"mappings":"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","file":"AX6UIGrid_page.js","sourcesContent":["import U from \"./AX6Util\";\nimport mustache from \"./AX6Mustache\";\nimport TMPL from \"./AX6UIGrid_tmpl\";\n\nconst onclickPageMove = function (_act) {\n    var callback = function (_pageNo) {\n        if (this.page.currentPage != _pageNo) {\n            this.page.selectPage = _pageNo;\n            if (this.config.page.onChange) {\n                this.config.page.onChange.call({\n                    self: this,\n                    page: this.page,\n                    data: this.data\n                });\n            }\n        }\n    };\n    var processor = {\n        \"first\": function () {\n            callback.call(this, 0);\n        },\n        \"prev\": function () {\n            var pageNo = this.page.currentPage - 1;\n            if (pageNo < 0) pageNo = 0;\n            callback.call(this, pageNo);\n        },\n        \"next\": function () {\n            var pageNo = this.page.currentPage + 1;\n            if (pageNo > this.page.totalPages - 1) pageNo = this.page.totalPages - 1;\n            callback.call(this, pageNo);\n        },\n        \"last\": function () {\n            callback.call(this, this.page.totalPages - 1);\n        }\n    };\n\n    if (_act in processor) {\n        processor[_act].call(this);\n    }\n    else {\n        callback.call(this, _act-1);\n    }\n};\n\nconst navigationUpdate = function () {\n    let self = this;\n    if (this.page) {\n        let page = {\n            hasPage: false,\n            currentPage: this.page.currentPage,\n            pageSize: this.page.pageSize,\n            totalElements: this.page.totalElements,\n            totalPages: this.page.totalPages,\n            firstIcon: this.config.page.firstIcon,\n            prevIcon: this.config.page.prevIcon || \"«\",\n            nextIcon: this.config.page.nextIcon || \"»\",\n            lastIcon: this.config.page.lastIcon,\n        };\n        let navigationItemCount = this.config.page.navigationItemCount;\n\n        page[\"@paging\"] = (function () {\n            let returns = [], startI, endI;\n\n            startI = page.currentPage - Math.floor(navigationItemCount / 2);\n            if (startI < 0) startI = 0;\n            endI = page.currentPage + navigationItemCount;\n            if (endI > page.totalPages) endI = page.totalPages;\n\n            if (endI - startI > navigationItemCount) {\n                endI = startI + navigationItemCount;\n            }\n\n            if(endI - startI < navigationItemCount){\n                startI = endI - navigationItemCount;\n            }\n            if (startI < 0) startI = 0;\n\n            for (let p = startI, l = endI; p < l; p++) {\n                returns.push({'pageNo': (p + 1), 'selected': page.currentPage == p});\n            }\n            return returns;\n        })();\n\n        if(page[\"@paging\"].length > 0){\n            page.hasPage = true;\n        }\n\n        this.$[\"page\"][\"navigation\"].html(mustache.render(TMPL.page_navigation.call(this), page));\n        this.$[\"page\"][\"navigation\"].find(\"[data-ax6grid-page-move]\").on(\"click\", function () {\n            onclickPageMove.call(self, this.getAttribute(\"data-ax6grid-page-move\"));\n        });\n\n    } else {\n        this.$[\"page\"][\"navigation\"].empty();\n    }\n};\n\nconst statusUpdate = function () {\n    if(!this.config.page.statusDisplay){\n        return;\n    }\n\n    let fromRowIndex = this.xvar.virtualPaintStartRowIndex;\n    let toRowIndex = this.xvar.virtualPaintStartRowIndex + this.xvar.virtualPaintRowCount;\n    //var totalElements = (this.page && this.page.totalElements) ? this.page.totalElements : this.xvar.dataRowCount;\n    let totalElements = this.xvar.dataRowCount;\n\n    if (toRowIndex > totalElements) {\n        toRowIndex = totalElements;\n    }\n\n    this.$[\"page\"][\"status\"].html(mustache.render(TMPL.page_status.call(this), {\n            fromRowIndex: U.number(fromRowIndex + 1, {\"money\": true}),\n            toRowIndex: U.number(toRowIndex, {\"money\": true}),\n            totalElements: U.number(totalElements, {\"money\": true}),\n            dataRowCount: (totalElements !== this.xvar.dataRealRowCount) ? U.number(this.xvar.dataRealRowCount, {\"money\": true}) : false,\n            progress: (this.appendProgress) ? this.config.appendProgressIcon : \"\"\n        }));\n};\n\nexport default {\n    navigationUpdate: navigationUpdate,\n    statusUpdate: statusUpdate\n};"]}