{"version":3,"sources":["AX6UIGrid_page.js"],"names":["_AX6Util","require","_AX6Mustache","onclickPageMove","_act","callback","_pageNo","this","page","currentPage","selectPage","config","onChange","call","self","data","prev","pageNo","next","totalPages","last","navigationUpdate","hasPage","processor","pageSize","totalElements","firstIcon","prevIcon","nextIcon","navigationItemCount","startI","lastIcon","endI","returns","Math","floor","p","selected","render","__tmpl","page_navigation","$","find","on","getAttribute","empty","statusUpdate","statusDisplay","fromRowIndex","xvar","virtualPaintStartRowIndex","virtualPaintRowCount","toRowIndex","page_status","money","_AX6Util2","default","number","dataRealRowCount","dataRowCount","appendProgress"],"mappings":"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","file":"AX6UIGrid_page.js","sourcesContent":["import U from \"./AX6Util\";\nimport mustache from \"./AX6Mustache\";\n\nconst onclickPageMove = function (_act) {\n    const callback = function (_pageNo) {\n        if (this.page.currentPage != _pageNo) {\n            this.page.selectPage = _pageNo;\n            if (this.config.page.onChange) {\n                this.config.page.onChange.call({\n                    self: this,\n                    page: this.page,\n                    data: this.data\n                });\n            }\n        }\n    };\n    const processor = {\n        \"first\": function () {\n            callback.call(this, 0);\n        },\n        \"prev\": function () {\n            let pageNo = this.page.currentPage - 1;\n            if (pageNo < 0) pageNo = 0;\n            callback.call(this, pageNo);\n        },\n        \"next\": function () {\n            let pageNo = this.page.currentPage + 1;\n            if (pageNo > this.page.totalPages - 1) pageNo = this.page.totalPages - 1;\n            callback.call(this, pageNo);\n        },\n        \"last\": function () {\n            callback.call(this, this.page.totalPages - 1);\n        }\n    };\n\n    if (_act in processor) {\n        processor[_act].call(this);\n    }\n    else {\n        callback.call(this, _act-1);\n    }\n};\n\nconst navigationUpdate = function () {\n    let self = this;\n    if (this.page) {\n        let page = {\n            hasPage: false,\n            currentPage: this.page.currentPage,\n            pageSize: this.page.pageSize,\n            totalElements: this.page.totalElements,\n            totalPages: this.page.totalPages,\n            firstIcon: this.config.page.firstIcon,\n            prevIcon: this.config.page.prevIcon || \"«\",\n            nextIcon: this.config.page.nextIcon || \"»\",\n            lastIcon: this.config.page.lastIcon,\n        };\n        let navigationItemCount = this.config.page.navigationItemCount;\n\n        page[\"@paging\"] = (function () {\n            let returns = [], startI, endI;\n\n            startI = page.currentPage - Math.floor(navigationItemCount / 2);\n            if (startI < 0) startI = 0;\n            endI = page.currentPage + navigationItemCount;\n            if (endI > page.totalPages) endI = page.totalPages;\n\n            if (endI - startI > navigationItemCount) {\n                endI = startI + navigationItemCount;\n            }\n\n            if(endI - startI < navigationItemCount){\n                startI = endI - navigationItemCount;\n            }\n            if (startI < 0) startI = 0;\n\n            for (let p = startI, l = endI; p < l; p++) {\n                returns.push({'pageNo': (p + 1), 'selected': page.currentPage == p});\n            }\n            return returns;\n        })();\n\n        if(page[\"@paging\"].length > 0){\n            page.hasPage = true;\n        }\n\n        this.$[\"page\"][\"navigation\"].html(mustache.render(this.__tmpl.page_navigation.call(this), page));\n        this.$[\"page\"][\"navigation\"].find(\"[data-ax6grid-page-move]\").on(\"click\", function () {\n            onclickPageMove.call(self, this.getAttribute(\"data-ax6grid-page-move\"));\n        });\n\n    } else {\n        this.$[\"page\"][\"navigation\"].empty();\n    }\n};\n\nconst statusUpdate = function () {\n    if(!this.config.page.statusDisplay){\n        return;\n    }\n\n    let fromRowIndex = this.xvar.virtualPaintStartRowIndex;\n    let toRowIndex = this.xvar.virtualPaintStartRowIndex + this.xvar.virtualPaintRowCount;\n    let totalElements = (this.page && this.page.totalElements) ? this.page.totalElements : false;\n\n    if (toRowIndex > totalElements) {\n        toRowIndex = totalElements;\n    }\n\n    this.$[\"page\"][\"status\"].html(mustache.render(this.__tmpl.page_status.call(this), {\n        fromRowIndex: U.number(fromRowIndex + 1, {\"money\": true}),\n        toRowIndex: U.number(toRowIndex, {\"money\": true}),\n        totalElements: totalElements ? U.number(totalElements, {\"money\": true}) : false,\n        dataRealRowCount: (this.xvar.dataRowCount !== this.xvar.dataRealRowCount) ? U.number(this.xvar.dataRealRowCount, {\"money\": true}) : false,\n        dataRowCount: U.number(this.xvar.dataRowCount, {\"money\": true}),\n        progress: (this.appendProgress) ? this.config.appendProgressIcon : \"\"\n    }));\n};\n\nexport default {\n    navigationUpdate: navigationUpdate,\n    statusUpdate: statusUpdate\n};"]}