{"version":3,"sources":["AX6UIGrid.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Util","_AX6Info","_AX6Mustache","_AX6UIGrid_data","_AX6UIGrid_header","_AX6UIGrid_body","_AX6UIGrid_scroller","_AX6UIGrid_page","_AX6UIGrid_tmpl","_AX6UIGrid_util","formatter","collector","ctrlKeys","33","34","35","36","37","38","39","40","tmpl","initGrid","data","instanceId","this","id","$target","html","_AX6Mustache2","default","render","__tmpl","main","call","$","container","hidden","find","root","header","body","page","scroller","panel","aside-header","left-header","header-scroll","right-header","top-aside-body","top-left-body","top-body","top-body-scroll","top-right-body","aside-body","aside-body-scroll","left-body","left-body-scroll","body-scroll","right-body","right-body-scroll","bottom-body-scroll","bottom-right-body","livePanelKeys","vertical","vertical-bar","horizontal","horizontal-bar","navigation","status","clipboard","resizer","height","config","_height","initColumns","_columns","_AX6Util2","isArray","columns","deepCopy","headerTable","_AX6UIGrid_util2","makeHeaderTable","xvar","frozenColumnIndex","bodyRowTable","makeBodyRowTable","bodyRowMap","makeBodyRowMap","bodyTrHeight","rows","length","columnHeight","colGroupMap","r","rl","row","c","cl","cols","_jqmin2","extend","colGroup","k","push","onResetColumns","resetColGroupWidth","footSum","initFootSum","needToPaintSum","initBodyGroup","grouping","alignGrid","_AX6UIGrid_header2","repaint","_AX6UIGrid_body2","_AX6UIGrid_scroller2","resize","_this","CT_WIDTH","width","showLineNumber","lineNumberColumnWidth","showRowSelector","rowSelectorColumnWidth","size","totalWidth","computedWidth","autoWidthColgroupIndexs","i","l","isNumber","_width","right","_footSum","footSumTable","makeFootSumTable","footSumColumns","_grouping","makeBodyGroupingTable","bodyGrouping","sortInfo","kl","by","orderBy","seq","fixed","key","sort","sortFixed","_this2","innerWidth","innerHeight","css","CT_HEIGHT","CT_INNER_WIDTH","CT_INNER_HEIGHT","endIndex","verticalScrollerWidth","horizontalScrollerHeight","bodyHeight","frozenRowHeight","frozenRowIndex","pageHeight","display","headerHeight","footSumHeight","list","bodyWidth","asidePanelWidth","totalColGroupWidth","panelDisplayProcess","vPosition","hPosition","containerType","isHide","frozenPanelWidth","rightPanelWidth","scrollerWidth","scrollerHeight","scrollerDisplayProcess","sortColumns","_sortInfo","that","a","b","remoteSort","_AX6UIGrid_data2","initData","clearGroupingData","resetLineNumber","AX6UIGrid","_ret","_classCallCheck","_this3","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","theme","animateTime","debounceTime","appendDebouncer","appendDebounceTimes","appendProgressIcon","appendProgress","multipleSelect","virtualScrollY","virtualScrollX","virtualScrollYCountMargin","virtualScrollAccelerated","virtualScrollAcceleratedDelayTime","columnMinWidth","sortable","undefined","align","columnPadding","columnBorderWidth","mergeCells","rightSum","statusDisplay","navigationItemCount","barMinSize","trackPadding","columnKeys","selected","modified","deleted","disableSelection","tree","use","hashDigit","indentWidth","arrowWidth","iconWidth","icons","openedArrow","collapsedArrow","collapse","itemIcon","isInlineEditing","children","contextMenu","scrollContentHeight","headerData","rightHeaderData","leftBodyRowData","bodyRowData","rightBodyRowData","bodyGroupingTable","leftBodyGroupingData","bodyGroupingData","rightBodyGroupingData","bodyGroupingMap","leftFootSumData","footSumData","customFormatter","getFormatter","customCollector","getCollector","assign","_AX6UIGrid_tmpl2","getTmpl","init","_formatter","_collector","_tmpl","_this4","onStateChanged","onLoad","initOnce","target","isObject","error","attr","selfHash","window","on","throttle","e","bind","focused","which","_AX6Info2","eventKeys","ESC","keyDown","originalEvent","RETURN","TAB","UP","shiftKey","DOWN","metaKey","ctrlKey","self","copySelect","stopEvent","SPACE","keys","focusedColumn","document","_target","isPickerClick","getAttribute","blur","setTimeout","initialized","_act","_data","processor","KEY_UP","moveFocus","KEY_DOWN","KEY_LEFT","KEY_RIGHT","KEY_HOME","KEY_END","INLINE_EDIT","_e","inlineEdit","active","keydown","activeEditLength","columnKey","inlineEditing","copysuccess","$clipBoard","copyTextArray","copyText","_rowIndex","selectedColumn","_column","_dindex","dindex","rowIndex","_di","originalColumn","colIndex","test","forEach","join","get","select","execCommand","isFirstPaint","paintStartRowIndex","set","scrollTo","top","_AX6UIGrid_page2","navigationUpdate","_colIndex","_type","getList","offsetParent","_row","_options","add","focus","_list","append","remove","update","repaintRow","_updateData","updateChild","paintStartColumnIndex","deleteRow","_key","_value","setValue","doindex","repaintCell","_panelName","_rows","__dindex","__doindex","__key","__value","_cindex","first","concat","last","_i","_l","splice","columnResizerIndex","applySortStatus","_selectObject","clearSelect","updateRowState","click","dblClick","selectAll","updateRowStateAll","_fileName","table","getExcelString","EXCEL","export","_pos","selectedClear","selectedDataIndexs","selectedIndex","HOME","END","empty"],"mappings":"2/BAAAA,OAAAC,QAAA,gDACAC,YAAAD,QAAA,kEACAE,SAAAF,QAAA,wDACAG,SAAAH,QAAA,wDACAI,aAAAJ,QAAA,oEACAK,gBAAAL,QAAA,uFACAM,kBAAAN,QAAA,6FACAO,gBAAAP,QAAA,uFAPAQ,oBAAAR,QAAA,mGASAS,gBAAAT,QAAA,uFACAU,gBAAAV,QAAA,uFACAW,gBAAAX,QAAA,uFAGIY,aACAC,aAbJC,UAeEC,GAAM,aACNC,GAAM,eACNC,GAAM,UAhBRC,GAAA,WAkBEC,GAAM,WACNC,GAAM,SACNC,GAAM,YAnBRC,GAAA,YAsBIC,QArBJC,SAAA,WA0BE,IAAIC,GAzBNC,WAAAC,KAAAC,IAqCM,OARJD,KAAKE,QAAQC,KAAKC,cAAAC,QAASC,OAAON,KAAKO,OAAOC,KAAKC,KAAKT,MAAOF,IAG/DE,KAAKU,GACHC,WA/BJC,OAAAZ,KAAAE,QAAAW,KAAA,qCAiCMC,KAAQd,KAAKE,QAAQW,KAAK,mCAC1BE,OAAUf,KAAKE,QAAQW,KAAK,qCAC5BG,KAAQhB,KAAKE,QAAQW,KAAK,mCAlChCI,KAAAjB,KAAAE,QAAAW,KAAA,mCAoCMK,SAAYlB,KAAKE,QAAQW,KAAK,wCAEhCM,OArCJC,eAAApB,KAAAE,QAAAW,KAAA,uCAuCMQ,cAAerB,KAAKE,QAAQW,KAAK,sCACjCE,OAAUf,KAAKE,QAAQW,KAAK,iCAC5BS,gBAAiBtB,KAAKE,QAAQW,KAAK,wCAxCzCU,eAAAvB,KAAAE,QAAAW,KAAA,uCA0CMW,iBAAkBxB,KAAKE,QAAQW,KAAK,yCACpCY,gBAAiBzB,KAAKE,QAAQW,KAAK,wCACnCa,WAAY1B,KAAKE,QAAQW,KAAK,mCAC9Bc,kBAAmB3B,KAAKE,QAAQW,KAAK,0CACrCe,iBAAkB5B,KAAKE,QAAQW,KAAK,yCACpCgB,aAAc7B,KAAKE,QAAQW,KAAK,qCAChCiB,oBAAqB9B,KAAKE,QAAQW,KAAK,4CACvCkB,YAAa/B,KAAKE,QAAQW,KAAK,oCAC/BmB,mBAAoBhC,KAAKE,QAAQW,KAAK,2CACtCG,KAAQhB,KAAKE,QAAQW,KAAK,+BAC1BoB,cAAejC,KAAKE,QAAQW,KAAK,sCAnDvCqB,aAAAlC,KAAAE,QAAAW,KAAA,qCAqDMsB,oBAAqBnC,KAAKE,QAAQW,KAAK,4CAnDzC5B,oBAAJe,KAAAE,QAAAW,KAAA,4CACI3B,mBAAJc,KAAAE,QAAAW,KAAA,2CACI1B,cAAWa,KAAAE,QAAAW,KAAA,sCACbuB,qBADapC,KAAAE,QAAAW,KAAA,6CAEbwB,oBAFarC,KAAAE,QAAAW,KAAA,6CAIbyB,iBACApB,UACAqB,SANavC,KAAAE,QAAAW,KAAA,sCAOb2B,eAPaxC,KAAAE,QAAAW,KAAA,0CAQb4B,WAAMzC,KAAAE,QAAAW,KAAA,wCARR6B,iBAAA1C,KAAAE,QAAAW,KAAA,4CAUIjB,OAAJI,KAAAE,QAAAW,KAAA,qCAEMhB,MACJ8C,WAAA3C,KAAAE,QAAAW,KAAA,oCAqDI+B,OAAU5C,KAAKE,QAAQW,KAAK,iCAlD9Bd,MADF8C,UAAA7C,KAAAE,QAAAW,KAAA,oCAIAiC,SAqDIP,SAAYvC,KAAKE,QAAQW,KAAK,qCAnDlC4B,WAAAzC,KAAAE,QAAAW,KAAA,yCAIIb,KAAAU,EAAA,UAAA,KAAqBG,KAAKkC,OAAA/C,KAAAgD,OAAAD,QAAlB/C,KAFGgD,OAAAC,UAIXjD,MAEAkD,YAAY,SAAAC,GAPPC,UAAA/C,QAAAgD,QAAAF,KAAAA,MASPnD,KAAAsD,QAASF,UAAA/C,QAAAkD,SAAAJ,GACPnD,KAAAwD,YAAAC,iBAAApD,QAAgBqD,gBAAkBjD,KAAAT,KAAAA,KAAAsD,SAClCtD,KAAA2D,KAAAC,kBAAoB1D,KAAQW,OAAK+C,mBAAA,EAEjC5D,KAAA6D,aAAAJ,iBAAApD,QAAiByD,iBAAkBrD,KAAAT,KAAAA,KAAAsD,SACnCtD,KAAA+D,WAAAN,iBAAApD,QAAgB2D,eAAkBvD,KAAAT,KAAAA,KAAA6D,cAElC7D,KAAA2D,KAAAM,aAAiBjE,KAAKE,aAAagE,KAAAC,OAAAnE,KAAAgD,OAAAhC,KAAAoD,aAGnC,IAAA,IADAC,KACAC,EAAA,EAAAC,EAAAvE,KAAkBwD,YAAa3C,KAAKsD,OAAAG,EAAAC,EAAAD,IAEpC,IAAA,IADAE,EAAAxE,KAAAwD,YAAmBtD,KAAQW,GAC3B4D,EAAA,EAAAC,EAAAF,EAAqBG,KAAKzE,OAAQW,EAAK6D,EAAAD,IACvCJ,EAAAG,EAAaG,KAAKzE,GAAAA,UAAa0E,QAAAvE,QAAAwE,UAAAL,EAAAG,KAAAF,IAI/BzE,KAAA8E,YACA,IAAA,IAAAC,KAAAV,EACArE,KAAA8E,SAAAE,KAAAX,EAA0BnE,IAG1B,OAAAF,MA/BKiF,eAAA,WAkCP/B,YAAAzC,KAAAT,KAAqBA,KAAAgD,OAAAM,SACrB4B,mBAAYzE,KAAAT,MACVA,KAAAgD,OAAYmC,UACZC,YAAA3E,KAAAT,KAAqBE,KAAAA,OAALiF,SAChBnF,KAAAqF,gBAAmBnF,GAEnBF,KAAAgD,OAAUhC,KAAKd,UAALoF,cAAkB7E,KAAAT,KAAAA,KAAAgD,OAAlBhC,KAAAuE,UALAC,UAnCL/E,KAAAT,MAAA,GA0CPyF,mBAAApF,QAAAqF,QAAQjF,KAAAT,MAAA,GACN2F,iBAAAtF,QAAAqF,QAAAjF,KAAcT,MAAKE,GACnB0F,qBAAAvF,QAAAwF,OAAUpF,KAAKP,OAEjBgF,mBAAQ,WAAA,IAAAY,EAAA9F,KA9CD+F,EAAA/F,KAAAU,EAAA,UAAA,KAAAsF,QAAA,WAiDP,IAAAA,EAAW,EAjDb,OAkDIF,EAAA9C,OAAYiD,iBAAkBD,GAAAF,EAAA9C,OAAAkD,uBAC9BJ,EAAA9C,OAAcmD,kBAAkBH,GAAAF,EAAA9C,OAAAoD,wBAFvBJ,GAAAF,EAAA9C,OAAA9B,SAAAmF,KAjDJ,GAuDTC,EAAO,EAAPC,OAAAA,EAAgCC,KAqD9B1B,EAAW9E,KAAK8E,SAnDlB2B,OAAAA,EAAAC,OAAAA,EAEF,IAAMxD,EAAAA,EAAAA,EAAc4B,EAAd5B,OAAAA,EAAwBC,EAAAA,IACvBC,UAAA/C,QAAAsG,SAAA7B,EAAEzB,GAAAA,OACPiD,GAAexB,EAAA2B,GAAAG,OAAErD,EAASJ,GAA1B6C,MACmB,MAAdxC,EAAciD,GAAAT,MACnBQ,EAAAxB,KAA8ByB,GAqDiB,MAAlCrD,UAAA/C,QAAEwG,MAAM/B,EAAS2B,GAAGT,MAAO,KAnDxCM,GAAAxB,EAAoB2B,GAAAG,OAAAb,EAAKjC,UAAAA,QAAAA,KAAAA,EAAL2C,GAA2BT,MAAM,KAAK1C,KAG1D,GAAAkD,EAAyBrC,OAAKN,EAE9B,IAmDE0C,GAAiBR,EAAWO,GAAcE,EAAwBrC,OAnDhEE,EAAAA,EAAAA,EAAcmC,EAAlBrC,OAAAsC,EAAAC,EAAAD,IACA3B,EAAa0B,EAAQC,IAAiBvC,OAAtCqC,GAIGnB,YAAA,SAAA0B,GACF1D,UAAA/C,QAAAgD,QAAAyD,GAqDC9G,KAAK+G,aAAetD,iBAAApD,QAAK2G,iBAAiBvG,KAAKT,KAAMA,KAAKiH,eAAiBH,IAlD7E9G,KAAKiH,kBACHjH,KAAK8E,kBAGPQ,cAAA,SAAA4B,GAxBF,IAAA3B,EAAAX,QAAAvE,QAAAwE,UAAAqC,GA0BMjC,OAAAA,GAAiB,YAAjBA,GACJ/B,KAAAA,cACAgC,GAAAA,EAAAA,GACI5B,QAAKN,EAAOmC,SAEdnF,KAAKqF,kBAAiB5B,iBAAApD,QAAtB8G,sBAAA1G,KAAAT,KAAAA,KAAAoH,aAAA9D,SACDtD,KAAAqH,SAAA,WAED7B,IAAAA,IADI6B,KACM5G,EAAK,EAAf6G,EAAAtH,KAAAoH,aAAAG,GAAApD,OAAAY,EAAAuC,EAAAvC,IAAA,CACAsC,EAAArH,KAAAoH,aAAO1B,GAAQjF,KACf+G,QAAA,MACAC,IAAA1C,EAXF2C,OAAA,GAauC,IAAA,IAAAjD,EAAA,EAAAC,EAAA1E,KAAA8E,SAAAX,OAAAM,EAAAC,EAAAD,IAsDzBzE,KAAK8E,SAASL,GAAGkD,MAAQ3H,KAAKoH,aAAaG,GAAGxC,KArD1D/E,KAAA8E,SAAAL,GAAAmD,KAAA,MACI7B,KAAWjB,SAAOL,GAAAoD,WAAa,GAI/B7B,OAASqB,GACT5G,KAAOuF,OALXhG,KAOEsG,OAAAA,KAPFf,UAAA,GAQET,UAAW,SAAKA,GARlB,IAAAgD,EAAA9H,KAAA,GASK0G,KAAAA,IAAAA,KATLxG,QAAA6H,aAAA/H,KAAAE,QAAA8H,eAAA,EAmEE,OAAO,EAtDL1B,KAAAA,OAAAA,QACDtG,KAFDU,EAEC,UAAA,KAAUuH,KAAsBlF,OAAK/C,KAAAgD,OAAAC,QAAAjD,KAAAE,QAAA6C,WAGpCuD,IAAAA,EAAAA,KAAcxB,EAAdwB,UAAAA,KAAmCP,QACpCmC,EAAAlI,KAAAU,EAAA,UAAA,KAAAqC,SACFoF,EAAApC,EACDqC,EAAI5B,EACFD,EAAiBR,KAAAA,OAAWO,gBAAcE,WAC1C,IAAKC,EAAOC,EAGb,OAFG5B,EAAS0B,OAAAA,iBAAAA,GAA4BI,EAASL,OAAAA,uBAC/CuB,EAAA9E,OAAAmD,kBAAAH,GAAA8B,EAAA9E,OAAAoD,wBACFJ,EAJ2CQ,GAMxCpB,EAAcpF,KAAdoF,OAAAA,iBAAkC,SAAAN,EAAAuD,GAEpC,IAAKtB,IADHf,EAAA,EACGe,EAAAA,EAALL,EAAoB2B,EAAA5B,EAAAC,EAAAD,IADtBT,GAEOlB,EAAA2B,GAAAG,OAEL,OAAKG,EAL+B,CAMrC/G,KAAA8E,SAAA9E,KAAAgD,OAAAY,mBANH0E,OAAAA,EAAAC,OAAAA,EAAAC,OAAAA,EAWIC,EAAAzI,KAAoBgD,OAAA0F,eAAA1I,KAAA2D,KAAAM,aAClBsD,EAAaA,KADKN,eAAA9C,OAAAnE,KAAA2D,KAAAM,aAElBX,EAASiC,KAASjC,OAAAA,OAAAA,QAAAA,KAAAA,YAAAA,KAAAA,OAAAA,KAAAA,OAAAA,OAAAA,aAAAA,EAFAqF,EAApB3I,KAAAgD,OAAA/B,KAAA2H,QAAA5I,KAAAgD,OAAA/B,KAAA8B,OAAA,EAMEuF,EAAAJ,EAAAW,EAAAF,EAAAG,EAAA9I,KAAA+I,KAAA5E,OAAAnE,KAAA2D,KAAAM,aAAAjE,KAAAgD,OAAA9B,SAAAmF,KAAA,GAEEgB,EAAcD,WAKd,IAAA,IAJEI,EADkC,EAApCwB,EAAAjD,EAAAkD,EAAAX,EAKK7B,EAAIhC,EAAJiC,EAAWhC,EAAKI,SAAKA,OAASX,EAAQM,EAAIC,IAC7CwE,GAAIpB,EAAAhD,SAA8BsC,GAAAA,OAEhC,OAAA8B,EAAiBrB,EAAjBC,EAAA9E,OAAA9B,SAAAmF,KAAA,EARUe,IAWf,IACDkB,EAAAJ,EAAAW,EAAAF,EAAAG,EAAAP,EAAAvI,KAAA+I,KAAA5E,OAAAnE,KAAA2D,KAAAM,aAAAjE,KAAAgD,OAAA9B,SAAAmF,KAAA,GAvBN8B,EAAApC,EAAAuC,EA8BEE,GADoCJ,EAAAF,EAAAS,EAAAJ,GACpCM,EAEE,IAAAM,EAAA,SAAAhI,EAAAiI,EAAAC,EAAAC,GACD,IAAArB,GA4DKW,QAAS,SAzDbW,GAAO,EA6DP,OAAQF,GA1DNtD,IAAAA,QACiB,IAAnBmC,EACAC,GAAAA,GAEAc,EAAAA,KAAkB,EACZjD,EAAAA,MAAJiD,GAEI,MACJ,IAAOjD,OARX,IAAAhG,KAAAgD,OAAAY,kBAUE4F,GAAAA,GAEOvB,EAAA,KAAeI,EAClBrC,EAAAA,MAASwD,GAEX,MACC,IAAK1E,QACRwD,KAAAA,OAAAA,WAAuBC,GAAAA,GAGrBkB,MACFhB,QACqBxB,SAArB6B,IACe,IAAfD,KAAAA,OAAqB7F,kBACrB2F,EAAAA,KAAmB3F,EAErBiF,EAAA,KAAAuB,EAAAP,EAEEhB,EAAA,MAAAE,EAAAc,EAAAO,EAjEE,GAsEA,GAAAD,EAGC,OAFDpI,EAAK8G,KAAIxB,QAAW,SAEnBzG,KAgEH,GAAsB,SAAlBsJ,EA5DJ,OAAIf,GACFD,IAAAA,MACD,GAAAtI,KAAAgD,OAAA0F,eACFa,GAAA,GAEDtB,EAAA,IAAA,EACAE,EAAAA,OAAiBpC,GAEjBqC,MA8DM,IAAK,SA5DEA,KAAAA,OAAAA,SAGPH,EAAAA,IAAMO,EAAAM,EACNF,EAAAA,OAASE,GA0DLS,GAAS,EAxDfA,MA8DE,QA5DJtB,EAAA,IAAAQ,EACER,EAAA,OAAAO,EAAAC,EAAAK,MAII,WAAIQ,EACJrB,EAAAA,OAAAY,EACD,SAAAS,IACD,GAAAX,EACFY,GAAA,EAEIA,EAAAA,OAAAZ,GAKF,OAAAY,GACFpI,EAAK8G,KAAAW,QAAL,SAEIW,OAKJpI,EAAA8G,IAAAA,GACEjI,OAEIiI,EAAcgB,SAAd9H,EAAAuI,EAAAC,EAAAL,GACD,IAAArB,GACCA,QAAI,SAENA,GAAI,EAEN,OAAAqB,GAjCJ,IAAA,WA8FQI,EAAgB,GA1DpBH,EAAAA,MAAQG,EACVvI,EAAAA,OAAWyH,EACXX,EAAA,OAAA0B,EAAAhB,GAEDY,GAAA,EAEGD,MACF,IAAA,aACEK,EAAA,GACE1B,EAAA,MAAIE,EACFoB,EAAAA,OAAAI,EACD1B,EAAA,MAAMyB,EACLzB,EAAAA,OAAAU,GAEDY,GAAA,EAEH,MACE,IAAA,SACEA,EAAA,GAAAI,EAAA,GACD1B,EAAA,MAAMyB,EACLzB,EAAAA,OAAaO,EACbP,EAAAA,OAAAU,GAEFY,GAAA,EAKA,GAAAA,EAGJtB,OAxBA9G,EAAA8G,KAAAW,QAAA,SAwBI5I,KAGFuJ,EAAAA,IAAAA,IAyCA,OArCDvJ,KAAAU,EAAA,UAAA,OAAAuH,KAAAlF,OAAA8F,IACF7I,KAAAU,EAAA,UAAA,KAAAuH,KAAAlF,OAAAyF,IAGCrH,EAAWyH,KAAS5I,KAAVA,KAAVU,EAAU,MAAV,gBAAA,GAAA,QAAA,UACAyI,EAAA1I,KAAAT,KAAAA,KAAAU,EAAA,MAAA,eAAA,GAAA,OAAA,UACAyI,EAAA1I,KAAAT,KAAAA,KAAAU,EAAA,MAAA,OAAA,GAAA,GAAA,UACDyI,EAAA1I,KAAAT,KAAAA,KAAAU,EAAA,MAAA,gBAAA,GAAA,QAAA,UAEDS,EAAAV,KAAAT,KAAAA,KAAAU,EAAA,MAAA,kBAAA,MAAA,QAAA,QACAyI,EAAA1I,KAAAT,KAAAA,KAAAU,EAAA,MAAA,iBAAA,MAAA,OAAA,QACDyI,EA3FD1I,KAAAT,KAAAA,KAAAU,EAAA,MAAA,YAAA,MAAA,GAAA,QA4FAyI,EAAMS,KAAAA,KAAyB5J,KAAAU,EAAA,MAAzBkJ,kBAAyB,MAAiBF,QAAjB,QAEzBd,EAASnI,KAAAT,KAAAA,KAAAU,EAAA,MAAA,cAAA,GAAA,QAAA,QADHyI,EAAV1I,KAAAT,KAAAA,KAAAU,EAAA,MAAA,aAAA,GAAA,OAAA,QAAAyI,EAAA1I,KAAAT,KAAAA,KAAAU,EAAA,MAAA,KAAA,GAAA,GAAA,QA8DFyI,EAAoB1I,KAAKT,KAAMA,KAAKU,EAAL,MAAgB,cAAe,GAAI,QAAS,QAxDvEyI,EAAA1I,KAAAT,KAAAA,KAAAU,EAAA,MAAA,qBAAA,SAAA,QAAA,QACEyI,EAAIO,KAAAA,KAAmB1J,KAAAU,EAAA,MAAA,oBAAA,SAAA,OAAA,QACrBuH,EAAAxH,KAAeiJ,KAAAA,KAAfhJ,EAAegJ,MAAf,eAAA,SAAA,GAAA,QACAzB,EAAAxH,KAAgB2H,KAAAA,KAAAA,EAAAA,MAAhB,qBAAA,SAAA,QAAA,QAGAmB,EAAA9I,KAAAT,KAAAA,KAAAU,EAAA,SAAA,SAAA4H,EAAAC,EAAA,YACDqB,EAAAnJ,KAAAT,KAAAA,KAAAU,EAAA,SAAA,WAAA4H,EAAAC,EAAA,cACDqB,EAAAnJ,KAAAT,KAAAA,KAAAU,EAAA,SAAA,OAAA4H,EAAAC,EAAA,UAEAY,EAAIQ,KAAAA,KAAoB3J,KAAAU,EAAA,UAAA,KAAA,GAAA,GAAA,QAItBuH,KAAAA,KAAAA,WAAAjI,KAAgB2I,EAAAA,MAAhB,KAAA5F,SACD/C,KAAA2D,KALDqF,UAKOhJ,KAAAU,EAAAS,MAAA,KAAA6E,SAGP,GAEA6D,YAAIH,SAAAI,GAGF7B,GAFAA,mBAAAA,QAAAA,QAAIxH,KAAJT,MAEAiI,UAAAA,QAAAA,WAAIjI,KAAJgD,OAAgB2F,YAAhB,CACD,IAAAoB,GAAM1C,aACLkC,IAAAA,IAAAA,KAAAA,EACDQ,EAAA1C,SAAArC,MACD2C,IAAA5C,EA5BJyC,QAAAsC,EAAA/E,GAAAyC,QAwFIC,IAAKqC,EAAU/E,GAAG0C,MAvDpBsC,EAAA1C,SAAAO,KAAA,SAAAoC,EAAAC,GACA,OAAOD,EAAAvC,IAAPwC,EAAAxC,MA4DFzH,KAAKgD,OAAOkH,WAAWzJ,KAAKsJ,EAAMA,QApGpC/J,KAAAgD,OAAAhC,KAAAuE,SAuGIvF,KAAK+I,KAAOoB,iBAAA9J,QAAK+J,SAAS3J,KAAKT,KAzDnCmK,iBAAA9J,QAAOuH,KAAAnH,KAAaT,KACb8J,EA2DCK,iBAAA9J,QAAKgK,kBAAkB5J,KAAKT,KAzDpCA,KAAA+I,QAMAI,KAAAA,KAAAA,iBAAAA,QAAoB1I,KAAKA,KAAMT,KAAA8J,EAC/BX,iBAAAA,QAAAA,kBAAA1I,KAA+BT,KAC/BmJ,KAAAA,OA4DOmB,iBAAiB,IAvDxBnB,iBAAAA,QAAAA,QAAAA,KAAoB1I,MAAK,GACzB0I,qBAAAA,QAAAA,OAAAA,KAAoB1I,OASpBmJ,sBAiHA,SAAAW,EAAYvH,GAAQ,IAAAwH,EAAAC,gBAAAzK,KAAAuK,GAAA,IAAAG,EAAAC,2BAAA3K,MAAAuK,EAAAK,WAAAC,OAAAC,eAAAP,IAAA9J,KAAAT,OAiRlB,OAzLA0K,EAAK1H,QACH+H,MAAO,UACPC,YAAa,IACbC,aAAc,IACdC,gBAAiB,KACjBC,oBAAqB,EACrBC,mBAAoB,MACpBC,gBAAgB,EAGhBzH,kBAAmB,EACnB8E,eAAgB,EAChBzC,gBAAgB,EAChBE,iBAAiB,EACjBmF,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAGhBC,0BAA2B,EAC3BC,0BAA0B,EAC1BC,kCAAmC,GAEnC5I,OAAQ,EACR6I,eAAgB,IAChB1F,sBAAuB,GACvBE,uBAAwB,GACxByF,cAAUC,EACV5B,YAAY,EAEZnJ,QACE6H,SAAS,EACTmD,OAAO,EACP3H,aAAc,GACd4H,cAAe,EACfC,kBAAmB,GAErBjL,MACE+K,OAAO,EACP3H,aAAc,GACd4H,cAAe,EACfC,kBAAmB,EACnB1G,UAAU,EACV2G,YAAY,GAEdC,UAAU,EACVhH,SAAS,EACTlE,MACE8B,OAAQ,GACR6F,SAAS,EACTwD,eAAe,EACfC,oBAAqB,GAEvBnL,UACEmF,KAAM,GACNiG,WAAY,GACZC,aAAc,GAEhBC,YACEC,SAAU,eACVC,SAAU,eACVC,QAAS,cACTC,iBAAkB,yBAEpBC,MACEC,KAAK,EACLC,UAAW,EACXC,YAAa,GACbC,WAAY,GACZC,UAAW,GA7JGC,OA+JZC,YAAa,IAvEnBC,eAAc,IACZtC,UAAO,IACPC,mBAFY,IAGZC,SAAc,KAEdE,YACAC,UAAAA,MACAC,QAAAA,KAyEIiC,SAAU,WAvEd1M,OAAA,SACAgD,WAAAA,SACA8E,SAAAA,SACAzC,SAAAA,eACAE,MAAAA,eA4EFvB,QAAAvE,QAAOwE,QAAO,EAAM6F,EAAK1H,OAAQA,GAlE/BD,EAAAA,MACA6I,aAAAA,EACA1F,mBAAAA,EACAE,oBAAAA,EACAyF,YAAUC,MAORE,EAAAA,WAIAD,EAAAA,YAIAxG,EAAAA,kBAIFJ,EAAAA,gBAIEiH,EAAAA,QAIA/F,EAAAA,UADQ,KAKVmG,EAAAA,KAAAA,KAEEE,EAAAA,sBACAC,EAAAA,eAKAI,EAAAA,YACAC,EAAAA,SAAAA,EAIEI,EAAAA,iBAIAG,EAAAA,kBALK7C,EANH8C,iBAAA,EAgBFF,EAAAA,iBAIAG,EAAAA,gBApFQ/C,EAAdgD,YAAA,KAsKAhD,EAAKlH,eApEHmK,EAAAA,kBAIFjD,EAAAkD,cAIAlD,EAAAmD,mBA8EAnD,EAAK7G,gBAIL6G,EAAKoD,mBAILpD,EAAKqD,eAILrD,EAAKsD,oBAILtD,EAAK3G,cAnEL2G,EAAAuD,qBA4EAvD,EAAKwD,wBAILxD,EAAKyD,oBAILzD,EAAK0D,yBApEL1D,EAAA2D,mBA8EA3D,EAAK3D,gBAIL2D,EAAK4D,mBApEL5D,EAAA6D,eAIA7D,EAAArF,gBAAA,EA8EAqF,EAAK8D,gBAAkBjE,EAAUkE,eAMjC/D,EAAKgE,gBAAkBnE,EAAUoE,eAtEjCjE,EAAAnK,OAAAsK,OAAA+D,OAAAC,iBAAAxO,QAAAkK,EAAAuE,gBA0EsB,IAAX9L,GAAwB0H,EAAKqE,OAtExCvE,EAAAE,EAAAC,2BAAAD,EAAAF,mGA5XFwE,GACA,OAAA/P,UAAA4L,OAA4BnK,OAALzB,UAAqB8D,0CAiE1C,OAAO9D,mDArDLgQ,GAKD,OAAA/P,UAAA2L,OAAA+D,OAAA1P,UAAA+P,0CAeA,OACI/P,8CAyDQgQ,GA3CjB,OAAAtP,KAAAiL,OAAA+D,OAAAhP,KAAAsP,qCAoDI,OAAOtP,0DA+RP,IAAAuP,EAAAnP,KA0EAA,KAAKoP,eAAiBpP,KAAKgD,OAAOoM,eAClCpP,KAAKqP,OAASrP,KAAKgD,OAAOqM,OAG1BrP,KAAKsP,gBAtEL,IAAKvL,KAAAA,OAALwL,SAEAvP,KAAAE,SAAA,EAAA0E,QAAAvE,SAAAL,KAAAgD,OAAAuM,QAGA,SAAKtB,GACL7K,UAAA/C,QAAAmP,SAAA1P,KAAAA,EAAA2P,QAyEMzP,KAAKgD,OAAS4B,QAAAvE,QAAOwE,QAAO,KAAU7E,KAAKgD,OAAQlD,KAtEzDW,KAAKyN,KAAAA,UAAAA,QAAAA,UAALlO,KAAAE,QAAAwP,KAAA,2BAAA,IA0EO1P,KAAKgD,OAAOD,SACf/C,KAAKgD,OAAOC,QAAUjD,KAAKE,QAAQ6C,UAGhC/C,KAAKC,KAAID,KAAKC,GAAKD,KAAKE,QAAQJ,KAAK,kBACrCE,KAAKC,KAvEZD,KAAKoO,GAAAA,cAALpO,KAAAD,WACAC,KAAAE,QAAAJ,KAAA,gBAAAE,KAAAC,KAGAkK,iBAAA9J,QAAKgO,KAAAA,KAAAA,MAELrO,KAAAgD,OAAA6J,KAAAC,MACA9M,KAAAqH,YAyEIrH,KAAKqH,SAASrH,KAAKgD,OAAO6J,KAAKL,WAAWmD,WAAanI,QAAS,MAAOC,IAAK,EAAGC,OAAO,IAKxF7H,SAASY,KAAKT,MAGdkD,YAAYzC,KAAKT,KAAMA,KAAKgD,OAAOM,SACnC4B,mBAAmBzE,KAAKT,MAGpBA,KAAKgD,OAAOmC,SAASC,YAAY3E,KAAKT,KAAMA,KAAKgD,OAAOmC,SAGxDnF,KAAKgD,OAAOhC,KAAKuE,UAAUD,cAAc7E,KAAKT,KAAMA,KAAKgD,OAAOhC,KAAKuE,UAGzEC,UAAU/E,KAAKT,MAAM,GAGrByF,mBAAApF,QAAO0O,KAAKtO,KAAKT,MAEjByF,mBAAApF,QAAOqF,QAAQjF,KAAKT,MArEtB2F,iBAAAtF,QAAKqO,KAAAA,KAAAA,MAEL/I,iBAAAtF,QAAKE,QAALE,KAAcoK,MA2EZjF,qBAAAvF,QAAS0O,KAAKtO,KAAKT,MAvErB4F,qBAAAvF,QAAAwF,OAAApF,KAAAT,OA0EE,EAAA4E,QAAAvE,SAAOuP,QAvEXC,GAAA,kBAAA7P,KAAAC,GAAAmD,UAAA/C,QAAAyP,SAAA,SAAAC,GAyEQvK,UAAU/E,KAAKT,MACf4F,qBAAAvF,QAASwF,OAAOpF,KAAKT,MACrB2F,iBAAAtF,QAAKqF,QAAQjF,KAAKT,OACjB,IAAIgQ,KAAKhQ,OACX6P,GAAG,mBAAqB7P,KAAKD,WAAY,SAACgQ,GACrCZ,EAAKc,UACHd,EAAK3B,gBACHuC,EAAEG,OA5EXC,UAAA9P,QAAA+P,UAAAC,IAAAlB,EAAAmB,QAAA,MAAAP,EAAAQ,eACLR,EAAAG,OAAAC,UAAA9P,QAAA+P,UAAAI,OACKpB,EAAAA,QAAiB,SAAAW,EAAYX,eAgFfW,EAAEG,OAASC,UAAA9P,QAAK+P,UAAUK,KA7E7CtB,EAAAmB,QAAA,MAAAP,EAAAQ,eACKjB,UAAAA,QAAAA,UAALS,IAEgB/M,EAAAA,OAAOuM,UAAAA,QAAnBa,UAA8BM,GA+EtBvB,EAAKmB,QAAQ,UAAWK,UAAU,IAE3BZ,EAAEG,OAASC,UAAA9P,QAAK+P,UAAUQ,MA7E3CzB,EAAAmB,QAAA,aAIGP,EAAAc,SAAAd,EAAAe,QACW,IAJdf,EAIcG,OA+EFa,KAAKC,aA3EhB7R,SAAA4Q,EAAAG,QA+EWf,EAAKmB,QAAQnR,SAAS4Q,EAAEG,OAAQH,EAAEQ,eA7EpCtQ,UAAAA,QAAVgR,UAAclB,IACAA,EAAAG,OAAAC,UAAA9P,QAAA+P,UAAAC,IACFlB,EAAAc,SACL/P,iBAAAA,QAAQJ,KAAKW,KAAAsQ,MAgFChB,EAAEG,OAASC,UAAA9P,QAAK+P,UAAUI,QAAUT,EAAEG,OAASC,UAAA9P,QAAK+P,UAAUc,MA7EnF/B,EAAAmB,QAAA,SAAU7P,EAAK8P,eA+EMR,EAAEG,OAASC,UAAA9P,QAAK+P,UAAUK,IA7EnBrN,UAAA/C,QAAA4Q,UAAAlB,GACVlF,OAAhBsG,KAAAhC,EAAAiC,eAAAjN,QACKkD,EAALiJ,QAAmBtN,cAAYwJ,EAAAA,mBAOjC,EAAA5H,QAAAvE,SAAAgR,SAAArQ,MAAA6O,GAAA,iBAAA7P,KAAAC,GAAA,SAAA8P,GACA7M,IAAAA,GAAiB,EACjBgC,EAAAA,UAAAA,QAAAA,eAAA6K,EAAAR,OAAA,SAAA+B,GAgFM,SAAIC,EAAgBD,EAAQE,aAAa,qCAGiB,SAAnDF,EAAQE,aAAa,4BAG5BjC,GAAUA,EAAOiC,aAAa,2BAA6BrC,EAAKlP,GA9EtEkP,EAAAc,SAAA,GAiFId,EAAKc,SAAU,EA9EnBtK,iBAAAtF,QAAAoR,KAAAhR,KAAA0O,MAMAuC,WAAA,WACAvC,EAAAE,QACAF,EAAAE,OAAA5O,MAgFMsQ,KAAAA,0CAlEA,GAAA/Q,KAAA2R,YAASnE,OAAAA,KACPxN,KAAA2R,aAAMzB,kCAkBN,OANC1K,UAFI/E,KAGAT,QACH2F,iBAAAtF,QAAAqF,QAAAjF,KAAK6P,MACN1K,qBAAAvF,QAAAwF,OAAApF,KAAAT,OAGDA,qCASI4R,EAAAC,GACE,IAAAC,GACDC,OAAA,WACFpM,iBAAAtF,QAAA2R,UAAMvR,KAAIsP,KAAA,OAEVkC,SAFM,WAGLtM,iBAAAtF,QAAA2R,UAAAvR,KAAAT,KAAA,SAEDkS,SAHM,WAILvM,iBAAAtF,QAAA2R,UAAAvR,KAAK6P,KAAQ,SAEhB6B,UAAA,WACFxM,iBAAAtF,QAAA2R,UAAAvR,KAAAT,KAAA,UAEJoS,SAlDH,WA4HEzM,iBAAAtF,QAAK2R,UAAUvR,KAAKT,KAAM,SAvE1BqS,QAAId,WAAJ5L,iBAAAtF,QAAA2R,UACWvR,KAAAT,KAAA,QAELsS,YAAO,SAAPC,GACD5M,iBAAAtF,QAAAmS,WAAAC,OAAAhS,KAAAT,KAAAA,KAAAoR,cAAAmB,GACD,cAAef,KAAAA,EAAAA,MAChBpO,UAAA/C,QANH4Q,UAAAsB,IASElC,IAAA,SAAKJ,GACNtK,iBAAAtF,QAFDmS,WAEOE,QAAAjS,KAAAT,KAAA,QAELwQ,OAAA,SAAA+B,GACD,IAAAI,EAAA,EACF,IAfD,IAAAC,KAAA5S,KAAA6S,cAAA,CAmBAnB,GAsEIiB,KAtEJjB,iBAAAA,QAAWc,WAAME,QAAAjS,KAAAT,KAAA,SAAA4S,GACf,OAAI,EAIH,GAAAD,GALHhN,iBAAAtF,QAAA2R,UAAAvR,KAAAT,KAAAuS,EAAA5B,SAAA,KAAA,SAODhL,iBAAAtF,QAAAmS,WAAAE,QAAAjS,KAAAT,KAAA,UA4E2B,GAApB2S,IACFhN,iBAAAtF,QAAKmS,WAAWE,QAAQjS,KAAKT,KAAM,UACnCoD,UAAA/C,QAAE4Q,UAAUsB,KAtElB9B,IAAKkB,SAALY,GA6EI,IAAII,EAAmB,EA1E7B,IAAA,IAAAC,KAAA5S,KAAA6S,cA4EQF,IAEAhN,iBAAAtF,QAAKmS,WAAWE,QAAQjS,KAAKT,KAAM,SAAU4S,GAAYZ,WAAW,IAE5C,GAApBW,GACEhN,iBAAAtF,QAAK2R,UAAUvR,KAAKT,KAAOuS,EAAG5B,SAAY,OAAS,UACrDhL,iBAAAtF,QAAKmS,WAAWE,QAAQjS,KAAKT,KAAM,cAAU8L,GAAYkG,WAAW,MAvE/E,OADCJ,KAAOE,GAAPA,EAAAF,GAAAnR,KAAAT,KAAA6R,GACD7R,0CAuFC,IAAI8S,OAAAA,EACFC,EAAa/S,KAAKU,EAAL,KAAA,UACbsS,KAAoBC,EAAW,GAC/BC,OAAAA,EAjFItB,OAAAA,EAAMC,EAAO,EAEjB,IAAA,IAAApN,KAAUzE,KAAAmT,eAAY,CACpB,IAAAC,EAAApT,KAAAmT,eAAKnB,GAEP,GAAAoB,EAAA,MACE,IAAAC,IALcA,EAAAD,EAAAE,OAOhBJ,EAAYE,EAAAG,SACVH,EAAAG,UAGAF,GAAAD,EAAAE,QAAKtB,GAALoB,EAA0BG,UAXZC,IAAAR,EAAAQ,KAgBhBR,EAAWQ,OAEV,IAlBeC,EAAAzT,KAAA+D,WAAAqP,EAAAG,SAAA,IAAAH,EAAAM,UAmBhBD,EACEzT,KAAA+I,KAAAqK,EAAAE,QAAKd,aACLQ,EAAKQ,GAAcG,KAAKpB,KAAxBxJ,KAAiCqK,EAAAE,QAAAF,EAAAM,WAEhCV,EAAAQ,GAAAxO,KAAAhF,KAAA+I,KAAAqK,EAAAE,QAAAG,EAAA9L,MAGDqL,EAAAQ,GAAAxO,KAAA,IAGAqO,EAAIV,EAAAA,OACJO,EAASN,EAATW,UAIIP,EAAAY,QAAA,SAAAtP,GACA2O,GAAA3O,EAAAuP,KAAA,MAAE5C,OAGJ8B,EAAAe,IAAInB,GAAAA,UAAAA,EACFI,EAAAgB,SAEC,IACFjB,EAAAzB,SAAA2C,YAAA,QAEH,MAAAjE,GACE+C,GAAA,EAED,OAHDA,kCA+GEjB,GACN,IAAIoC,OAAwD,IAAjCjU,KAAK2D,KAAKuQ,mBAWrC,OATA/J,iBAAA9J,QAAK8T,IAAI1T,KAAKT,KAAM6R,GAjFpBrM,UAAIsN,KAAAA,MAAJnN,iBAAAtF,QAAAqF,QACEqN,KAAAA,MADFkB,GAEEjB,iBAAAA,QAFFoB,SAAA3T,KAAAT,MAAAqU,IAAA,IAAAzO,qBAAAvF,QAGE6S,OAAAA,KAAAA,MAHFoB,iBAAAjU,QAAAkU,iBAGaC,KAHbxU,MAAAiU,EAAA,KA0FOjU,qCAnEHyU,GACE,OAAAtK,iBAAA9J,QAAIqU,QAAK3L,KAAKqK,KAAQE,qCAY3BrQ,GASD,MA8Ee,QAAXA,IArFJ+P,EAAAA,KAAcY,QAAQe,eAAa3M,eAElChI,KAFDE,QAAA+H,KAAAlF,OAAAE,IAyFAjD,KAAKU,EAAL,UAAA,KAA4BuH,KAAKlF,OAAQE,IArFzC8P,UAAAA,KAAWe,MACXf,iBAAAA,QAAAA,QAAWgB,KAAAA,KAAX,SAuFAnO,qBAAAvF,QAASwF,OAAOpF,KAAKT,MArFjBA,oCAyGC4U,EAAMvB,EAASwB,GAQpB,OAPA1K,iBAAA9J,QAAKyU,IAAIrU,KAAKT,KAAM4U,EAAMvB,EAASwB,GACnCrP,UAAU/E,KAAKT,MACf2F,iBAAAtF,QAAKqF,QAAQjF,KAAKT,KAAM,SACpB6U,GAAYA,EAASE,OACvBpP,iBAAAtF,QAAK2R,UAAUvR,KAAKT,KAAM6U,EAASE,OAErCnP,qBAAAvF,QAASwF,OAAOpF,KAAKT,MACdA,0CA3EPgV,GAMAf,OALA9J,iBAAA9J,QAAA4U,OAAKhB,KAAAA,KAAce,EAAA,WAyFjBxP,UAAU/E,KAAKT,MAvFjB2F,iBAAAtF,QAAAqF,QAAAjF,KAAAT,MACA4F,qBAAAvF,QAAAwF,OAAApF,KAAAT,OAyFGgQ,KAAKhQ,OAvFRiU,uCAwGQZ,GAMR,OALAlJ,iBAAA9J,QAAK6U,OAAOzU,KAAKT,KAAMqT,GACvB7N,UAAU/E,KAAKT,MACf2F,iBAAAtF,QAAKqF,QAAQjF,KAAKT,KAAM,SACxB2F,iBAAAtF,QAAK2R,UAAUvR,KAAKT,KAAOA,KAAKgD,OAAOhC,KAAKuE,SAAY,QAAU,OAClEK,qBAAAvF,QAASwF,OAAOpF,KAAKT,MACdA,uCAaC4U,EAAMvB,GAId,OAHAlJ,iBAAA9J,QAAK8U,OAAO1U,KAAKT,KAAM4U,EAAMvB,GAE7B1N,iBAAAtF,QAAK+U,WAAW3U,KAAKT,KAAMqT,GACpBrT,6CAuBOqT,EAASgC,EAAaR,GAKpC,OAJA1K,iBAAA9J,QAAKiV,YAAY7U,KAAKT,KAAMqT,EAASgC,EAAaR,GAClD7U,KAAK2D,KAAKuQ,wBAAqBpI,EAC/B9L,KAAK2D,KAAK4R,2BAAwBzJ,EAClCnG,iBAAAtF,QAAKqF,QAAQjF,KAAKT,MACXA,uCAeCqT,GAMR,OALAlJ,iBAAA9J,QAAKmV,UAAU/U,KAAKT,KAAMqT,GAC1B7N,UAAU/E,KAAKT,MACf2F,iBAAAtF,QAAKqF,QAAQjF,KAAKT,KAAM,SAExB4F,qBAAAvF,QAASwF,OAAOpF,KAAKT,MACdA,sCAcAqT,EAASoC,EAAMC,GAGtB,GAAIvL,iBAAA9J,QAAKsV,SAASlV,KAAKT,KAAMqT,OAtG/BuC,EAsGiDH,EAAMC,GAAS,CAC5D,IAAIG,EAAc,SAAUC,EAAYC,EAAOC,EAAUC,EAAWC,EAAOC,GACzE,IAAK,IAAI7R,EAAI,EAAGC,EAAKwR,EAAM5R,OAAQG,EAAIC,EAAID,IACzC,IAAK,IAAIG,EAAI,EAAGC,EAAKqR,EAAMzR,GAAGK,KAAKR,OAAQM,EAAIC,EAAID,IAC7CsR,EAAMzR,GAAGK,KAAKF,GAAGkD,KAAOuO,IACtBlW,KAAK2D,KAAK+E,eAAiBsN,EAC7BrQ,iBAAAtF,QAAKwV,YAAYpV,KAAKT,KAAM,OAAS8V,EAAYE,EAAUC,EAAW3R,EAAGG,EAAG0R,GAE5ExQ,iBAAAtF,QAAKwV,YAAYpV,KAAKT,KAAM8V,EAAa,UAAWE,EAAUC,EAAW3R,EAAGG,EAAG0R,KAhG3FN,EAAApV,KAAAT,KAAA,YAAAA,KAAA8N,gBAAA5J,KAAAmP,OAdFuC,EAcEH,EAAAC,GACAlQ,EAAU/E,KAAKT,KAAf,OAAAA,KAAA+N,YAAA7J,KAAAmP,OAfFuC,EAeEH,EAAAC,GAGA,OAAA1V,uCAgHQoT,EAASgD,GACjB,IAAMtE,GACJuE,MAAS,SAAUjD,GACjBpT,KAAKgD,OAAOM,WAAagT,OAAOlD,GAASkD,OAAOtW,KAAKgD,OAAOM,UAE9DiT,KAAQ,SAAUnD,GAChBpT,KAAKgD,OAAOM,QAAUtD,KAAKgD,OAAOM,QAAQgT,UAAUA,OAAOlD,MAtG/D,QAAA,IAAAA,EAAA,KAAA,2BAEA,QADA,IAAAgD,IAAKhB,EAAgB,QACrBgB,KAAAtE,EACDA,EAAAsE,GAAA3V,KAAAT,KAAAoT,OA2GQ,CAzGT,IAAAhQ,UAAA/C,QAAAsG,SAAAyP,GA2GM,KAAM,2BAER,GAAIhT,UAAA/C,QAAEgD,QAAQ+P,GACZ,IAAK,IAAIoD,EAAK,EAAGC,EAAKrD,EAAQjP,OAAQqS,EAAKC,EAAID,IAC7CxW,KAAKgD,OAAOM,QAAQoT,OAAON,EAAUI,EAAI,EAAGpD,EAAQoD,SAGtDxW,KAAKgD,OAAOM,QAAQoT,OAAON,EAAS,EAAGhD,GAI3C,OADAnO,eAAexE,KAAKT,MACbA,0CAQIoW,GACX,IAAMtE,GACJuE,MAAS,SAAUD,GACjBpW,KAAKgD,OAAOM,QAAQoT,OAAON,EAAS,IA3GxCG,KAAK5S,WACL3D,KAAK2D,OAAK4R,QAAAA,OAAAA,KAAwBzJ,OAAAA,QAAlC3H,OAAA,EAAA,KAiHA,QA9GD,IAAAiS,IAAAA,EAAA,QA8GKA,KAAWtE,EA5GjBA,EAAAsE,GAAA3V,KAAAT,KAAAoW,OA8GS,CACL,IAAKhT,UAAA/C,QAAEsG,SAASyP,GACd,KAAM,2BAGRpW,KAAKgD,OAAOM,QAAQoT,OAAON,EAAS,GAGtC,OADAnR,eAAexE,KAAKT,MACbA,0CAvGPoT,EAAAgD,GAiHA,IAAKhT,UAAA/C,QAAEsG,SAASyP,GA/GhB,KAAA,2BAqHA,OAFApW,KAAKgD,OAAOM,QAAQoT,OAAON,EAAS,EAAGhD,GA/GzCnO,eAAAxE,KAAAT,MAiHSA,4CASM4G,EAAQwP,GAzGf,OA0GNpW,KAAK8E,SAAS9E,KAAK2D,KAAKgT,oBAAoB/P,OAASA,EACrD5G,KAAKqF,gBAAiB,EAhHtBI,mBAAApF,QAAIuV,QAAAA,KAAAA,MAoHJjQ,iBAAAtF,QAAKqF,QAAQjF,KAAKT,MAAM,GAlHxB4F,qBAAAvF,QAAIwF,OAAApF,KAAAT,MAEAwF,UAAA/E,KAAS6D,MACPtE,iDAQC,IAAA+J,GAAA1C,aACF,IAAA,IAAAtC,KAAA/E,KAAAqH,SACF0C,EAZD1C,SAAArC,MAgIE2C,IAAK5C,EAlHP8Q,QAAAA,KAAYpV,SAAWsE,GAAAyC,QACvBqO,IAAAA,KAAAA,SAAiB9Q,GAAjB0C,MAMJ,OAHEsC,EAAA1C,SAAAO,KAAA,SAAAoC,EAAAC,GACD,OAAAD,EAAAvC,IAAAwC,EAAAxC,MAEDsC,EAAA1C,+CAYWrE,GAOP8O,YANC,IAAAhI,IANe9J,KAAlBqH,SAAAyC,EA8HErE,mBAAApF,QAAOuW,gBAAgBnW,KAAKT,KAAM8J,IAnHpCD,YAAIuM,KAAWtE,KAAAA,GAAW9R,KAAAqH,UACxByK,oCA2IG+E,EAAehC,GACpB,GAAIzR,UAAA/C,QAAEsG,SAASkQ,GAAgB,CAC7B,IAAIvD,EAASuD,EAER7W,KAAKgD,OAAOsI,eAtHfuJ,GAAYvR,EAAQoT,eAFN1W,KAAA8W,cAAlB9W,KAAM8R,cAAY3H,iBAAA9J,QAAlB0T,OAAAtT,KAAAT,KAAAsT,OAAAxH,EAAA+I,GAAAA,EAAApI,UAQA9G,iBAAAtF,QAAI0W,eAAAtW,KAAmBT,MAAA,YAAaoW,OAAAtK,GAElCgG,OAAAA,uCAQF7M,GAED,OADCU,iBAAAtF,QAAA2W,MAAOvW,KAAPT,KAAAqT,GACDrT,0CAiIYqT,GAEX,OADA1N,iBAAAtF,QAAK4W,SAASxW,KAAKT,KAAMqT,GAClBrT,2CAUP,OA9HA2F,iBAAAtF,QAAA0W,eAAAtW,KAAAT,MAAA,kBACDmK,iBAAA9J,QAAAyW,YAAArW,KAAAT,MA6HQA,uCAsBC6U,GAGR,OAjIF1K,iBAAA9J,QAAA6W,UAAAzW,KAAAT,KAAA6U,GAAAA,EAAApI,SAAAoI,GAgIElP,iBAAAtF,QAAK8W,kBAAkB1W,KAAKT,MAAO,aAC5BA,yCArHNoX,GACDrN,IAAAA,KAMF,OALIsN,EAAArS,KAAOgF,sBACRqN,EAFDrS,KAAAS,mBAAApF,QAAAiX,eAAA7W,KAAAT,OAGAqX,EAAArS,KAAO+E,iBAAAA,QAAK1C,eAAZ5G,KAAAT,OACDqX,EAAArS,KAAA,iBAED,IAAAoS,EAmIWC,EAAMxD,KAAK,KAGlB0D,MAAMC,OAAO/W,KAAKT,MAAOqX,EAAMxD,KAAK,KAAMuD,GAGrCpX,oCAtHPyX,GAuIA,GAAI9R,iBAAAtF,QAAK2R,UAAUvR,KAAKT,KAAMyX,GAAO,CApIvC,IAAArG,OAAAA,EAsII,IAAK,IAAI3M,KAAKzE,KAAKoR,cAAe,CAChCA,EAAgBxM,QAAAvE,QAAOwE,UAAW7E,KAAKoR,cAAc3M,IAAI,GACzD,MAEE2M,GACFpR,KAAK+T,OAAO3C,EAAckC,QAASoE,eAAe,SAIpD,QAA0C,IAA/B1X,KAAK2X,mBAAmB,GACjC3X,KAAK+T,OAAO,OACP,CACL,IAAI6D,EAAgB5X,KAAK2X,mBAAmB,GACtC7F,GACJpB,GAAM,WACAkH,EAAgB,IAClB5X,KAAK+T,OAAO6D,EAAgB,GAAIF,eAAe,IAC/C/R,iBAAAtF,QAAK2R,UAAUvR,KAAKT,KAAM4X,EAAgB,KAG9ChH,KAAQ,WAvIVgH,EAAEjR,KAASkQ,KAAAA,OAAf,IACMvD,KAAAA,OAASuD,EAAb,GAAAa,eAAA,IAyIQ/R,iBAAAtF,QAAK2R,UAAUvR,KAAKT,KAAM4X,EAAgB,KAvIlDC,KAEO,WACL7X,KAAI6U,OAAAA,GAAYA,eAAS6C,IACvB/R,iBAAAtF,QAAKyW,UAAAA,KAAL9W,KAAA,IAEH8X,IAAA,WAyIK9X,KAAK+T,OAAO/T,KAAK+I,KAAK5E,OAAS,GAAIuT,eAAe,IAvIxD/R,iBAAAtF,QAAA2R,UAAAvR,KAAAT,KAAK+T,KAAOtT,KAAK0D,OAAjB,KAIHsT,KAAA3F,GAyIOA,EAAU2F,GAAMhX,KAAKT,MAI3B,OAAOA,uCAWP,OA9IDA,KAAAE,QAAA6X,QA4IC/X,KAAK+I,QAEE,8BAIIwB","file":"AX6UIGrid.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport U from \"./AX6Util\";\nimport info from \"./AX6Info\";\nimport mustache from \"./AX6Mustache\";\nimport DATA from \"./AX6UIGrid/AX6UIGrid_data\";\nimport HEADER from \"./AX6UIGrid/AX6UIGrid_header\";\nimport BODY from \"./AX6UIGrid/AX6UIGrid_body\";\nimport SCROLLER from \"./AX6UIGrid/AX6UIGrid_scroller\";\nimport PAGE from \"./AX6UIGrid/AX6UIGrid_page\";\nimport TMPL from \"./AX6UIGrid/AX6UIGrid_tmpl\";\nimport UTIL from \"./AX6UIGrid/AX6UIGrid_util\";\n/** ~~~~~~~~~~~~~~~~~~ end of import  ~~~~~~~~~~~~~~~~~~~~ **/\n\nlet formatter = {};\nlet collector = {};\nlet ctrlKeys = {\n  \"33\": \"KEY_PAGEUP\",\n  \"34\": \"KEY_PAGEDOWN\",\n  \"35\": \"KEY_END\",\n  \"36\": \"KEY_HOME\",\n  \"37\": \"KEY_LEFT\",\n  \"38\": \"KEY_UP\",\n  \"39\": \"KEY_RIGHT\",\n  \"40\": \"KEY_DOWN\"\n};\nlet tmpl = {};\n\nconst initGrid = function () {\n  // 그리드 템플릿에 전달하고자 하는 데이터를 정리합시다.\n\n  let data = {\n    instanceId: this.id\n  };\n\n  this.$target.html(mustache.render(this.__tmpl.main.call(this), data));\n\n  // 그리드 패널 프레임의 각 엘리먼트를 캐쉬합시다.\n  this.$ = {\n    \"container\": {\n      \"hidden\": this.$target.find('[data-ax6grid-container=\"hidden\"]'),\n      \"root\": this.$target.find('[data-ax6grid-container=\"root\"]'),\n      \"header\": this.$target.find('[data-ax6grid-container=\"header\"]'),\n      \"body\": this.$target.find('[data-ax6grid-container=\"body\"]'),\n      \"page\": this.$target.find('[data-ax6grid-container=\"page\"]'),\n      \"scroller\": this.$target.find('[data-ax6grid-container=\"scroller\"]')\n    },\n    \"panel\": {\n      \"aside-header\": this.$target.find('[data-ax6grid-panel=\"aside-header\"]'),\n      \"left-header\": this.$target.find('[data-ax6grid-panel=\"left-header\"]'),\n      \"header\": this.$target.find('[data-ax6grid-panel=\"header\"]'),\n      \"header-scroll\": this.$target.find('[data-ax6grid-panel-scroll=\"header\"]'),\n      \"right-header\": this.$target.find('[data-ax6grid-panel=\"right-header\"]'),\n      \"top-aside-body\": this.$target.find('[data-ax6grid-panel=\"top-aside-body\"]'),\n      \"top-left-body\": this.$target.find('[data-ax6grid-panel=\"top-left-body\"]'),\n      \"top-body\": this.$target.find('[data-ax6grid-panel=\"top-body\"]'),\n      \"top-body-scroll\": this.$target.find('[data-ax6grid-panel-scroll=\"top-body\"]'),\n      \"top-right-body\": this.$target.find('[data-ax6grid-panel=\"top-right-body\"]'),\n      \"aside-body\": this.$target.find('[data-ax6grid-panel=\"aside-body\"]'),\n      \"aside-body-scroll\": this.$target.find('[data-ax6grid-panel-scroll=\"aside-body\"]'),\n      \"left-body\": this.$target.find('[data-ax6grid-panel=\"left-body\"]'),\n      \"left-body-scroll\": this.$target.find('[data-ax6grid-panel-scroll=\"left-body\"]'),\n      \"body\": this.$target.find('[data-ax6grid-panel=\"body\"]'),\n      \"body-scroll\": this.$target.find('[data-ax6grid-panel-scroll=\"body\"]'),\n      \"right-body\": this.$target.find('[data-ax6grid-panel=\"right-body\"]'),\n      \"right-body-scroll\": this.$target.find('[data-ax6grid-panel-scroll=\"right-body\"]'),\n      \"bottom-aside-body\": this.$target.find('[data-ax6grid-panel=\"bottom-aside-body\"]'),\n      \"bottom-left-body\": this.$target.find('[data-ax6grid-panel=\"bottom-left-body\"]'),\n      \"bottom-body\": this.$target.find('[data-ax6grid-panel=\"bottom-body\"]'),\n      \"bottom-body-scroll\": this.$target.find('[data-ax6grid-panel-scroll=\"bottom-body\"]'),\n      \"bottom-right-body\": this.$target.find('[data-ax6grid-panel=\"bottom-right-body\"]')\n    },\n    \"livePanelKeys\": [], // 현재 사용중인 패널들 (grid-body repaint에서 수집하여 처리)\n    \"scroller\": {\n      \"vertical\": this.$target.find('[data-ax6grid-scroller=\"vertical\"]'),\n      \"vertical-bar\": this.$target.find('[data-ax6grid-scroller=\"vertical-bar\"]'),\n      \"horizontal\": this.$target.find('[data-ax6grid-scroller=\"horizontal\"]'),\n      \"horizontal-bar\": this.$target.find('[data-ax6grid-scroller=\"horizontal-bar\"]'),\n      \"corner\": this.$target.find('[data-ax6grid-scroller=\"corner\"]')\n    },\n    \"page\": {\n      \"navigation\": this.$target.find('[data-ax6grid-page=\"navigation\"]'),\n      \"status\": this.$target.find('[data-ax6grid-page=\"status\"]')\n    },\n    \"form\": {\n      \"clipboard\": this.$target.find('[data-ax6grid-form=\"clipboard\"]')\n    },\n    \"resizer\": {\n      \"vertical\": this.$target.find('[data-ax6grid-resizer=\"vertical\"]'),\n      \"horizontal\": this.$target.find('[data-ax6grid-resizer=\"horizontal\"]')\n    }\n  };\n\n  this.$[\"container\"][\"root\"].css({height: this.config.height || this.config._height});\n\n  return this;\n};\nconst initColumns = function (_columns) {\n  if (!U.isArray(_columns)) _columns = [];\n  this.columns = U.deepCopy(_columns);\n  this.headerTable = UTIL.makeHeaderTable.call(this, this.columns);\n  this.xvar.frozenColumnIndex = this.config.frozenColumnIndex || 0;\n\n  this.bodyRowTable = UTIL.makeBodyRowTable.call(this, this.columns);\n  this.bodyRowMap = UTIL.makeBodyRowMap.call(this, this.bodyRowTable);\n  // 바디에 표현될 한줄의 높이를 계산합니다.\n  this.xvar.bodyTrHeight = this.bodyRowTable.rows.length * this.config.body.columnHeight;\n\n  let colGroupMap = {};\n  for (let r = 0, rl = this.headerTable.rows.length; r < rl; r++) {\n    let row = this.headerTable.rows[r];\n    for (let c = 0, cl = row.cols.length; c < cl; c++) {\n      colGroupMap[row.cols[c].colIndex] = jQuery.extend({}, row.cols[c]);\n    }\n  }\n\n  this.colGroup = [];\n  for (var k in colGroupMap) {\n    this.colGroup.push(colGroupMap[k]);\n  }\n\n  return this;\n};\nconst onResetColumns = function () {\n  initColumns.call(this, this.config.columns);\n  resetColGroupWidth.call(this);\n  if (this.config.footSum) {\n    initFootSum.call(this, this.config.footSum);\n    this.needToPaintSum = true;\n  }\n  if (this.config.body.grouping) initBodyGroup.call(this, this.config.body.grouping);\n  alignGrid.call(this, true);\n  HEADER.repaint.call(this, true);\n  BODY.repaint.call(this, true);\n  SCROLLER.resize.call(this);\n};\nconst resetColGroupWidth = function () {\n  /// !! 그리드 target의 크기가 변경되면 이 함수를 호출하려 this.colGroup의 _width 값을 재 계산 하여야 함. [tom]\n  let CT_WIDTH = this.$[\"container\"][\"root\"].width() - (() => {\n      let width = 0;\n      if (this.config.showLineNumber) width += this.config.lineNumberColumnWidth;\n      if (this.config.showRowSelector) width += this.config.rowSelectorColumnWidth;\n      width += this.config.scroller.size;\n      return width;\n    })(),\n    totalWidth = 0, computedWidth, autoWidthColgroupIndexs = [],\n    colGroup = this.colGroup,\n    i, l;\n\n  for (i = 0, l = colGroup.length; i < l; i++) {\n    if (U.isNumber(colGroup[i].width)) {\n      totalWidth += colGroup[i]._width = colGroup[i].width;\n    } else if (colGroup[i].width === \"*\") {\n      autoWidthColgroupIndexs.push(i);\n    } else if (U.right(colGroup[i].width, 1) === \"%\") {\n      totalWidth += colGroup[i]._width = CT_WIDTH * U.left(colGroup[i].width, \"%\") / 100;\n    }\n  }\n  if (autoWidthColgroupIndexs.length > 0) {\n    computedWidth = (CT_WIDTH - totalWidth) / autoWidthColgroupIndexs.length;\n    for (i = 0, l = autoWidthColgroupIndexs.length; i < l; i++) {\n      colGroup[autoWidthColgroupIndexs[i]]._width = computedWidth;\n    }\n  }\n};\nconst initFootSum = function (_footSum) {\n  if (U.isArray(_footSum)) {\n    this.footSumTable = UTIL.makeFootSumTable.call(this, this.footSumColumns = _footSum);\n  } else {\n    this.footSumColumns = [];\n    this.footSumTable = {};\n  }\n};\nconst initBodyGroup = function (_grouping) {\n  let grouping = jQuery.extend({}, _grouping);\n  if (\"by\" in grouping && \"columns\" in grouping) {\n    this.bodyGrouping = {\n      by: grouping.by,\n      columns: grouping.columns\n    };\n    this.bodyGroupingTable = UTIL.makeBodyGroupingTable.call(this, this.bodyGrouping.columns);\n    this.sortInfo = (function () {\n      let sortInfo = {};\n      for (let k = 0, kl = this.bodyGrouping.by.length; k < kl; k++) {\n        sortInfo[this.bodyGrouping.by[k]] = {\n          orderBy: \"asc\",\n          seq: k,\n          fixed: true\n        };\n        for (let c = 0, cl = this.colGroup.length; c < cl; c++) {\n          if (this.colGroup[c].key === this.bodyGrouping.by[k]) {\n            this.colGroup[c].sort = \"asc\";\n            this.colGroup[c].sortFixed = true;\n          }\n        }\n      }\n      return sortInfo;\n    }).call(this);\n  } else {\n    this.config.body.grouping = false;\n  }\n};\nconst alignGrid = function (_isFirst) {\n  // 대상이 크기가 컬럼의 최소 크기 보다 작업 금지\n  if (Math.min(this.$target.innerWidth(), this.$target.innerHeight()) < 5) {\n    return false;\n  }\n\n  if (!this.config.height) {\n    this.$[\"container\"][\"root\"].css({height: this.config._height = this.$target.height()});\n  }\n\n  let CT_WIDTH = this.$[\"container\"][\"root\"].width(),\n    CT_HEIGHT = this.$[\"container\"][\"root\"].height(),\n    CT_INNER_WIDTH = CT_WIDTH,\n    CT_INNER_HEIGHT = CT_HEIGHT,\n    asidePanelWidth = this.config.asidePanelWidth = (() => {\n      let width = 0;\n      if (this.config.showLineNumber) width += this.config.lineNumberColumnWidth;\n      if (this.config.showRowSelector) width += this.config.rowSelectorColumnWidth;\n      return width;\n    })(),\n    frozenPanelWidth = this.config.frozenPanelWidth = ((colGroup, endIndex) => {\n      let width = 0;\n      for (let i = 0, l = endIndex; i < l; i++) {\n        width += colGroup[i]._width;\n      }\n      return width;\n    })(this.colGroup, this.config.frozenColumnIndex),\n    verticalScrollerWidth, horizontalScrollerHeight, bodyHeight;\n\n  // todo : 우측 함계컬럼 너비 계산\n  let rightPanelWidth = 0,\n    frozenRowHeight = this.config.frozenRowIndex * this.xvar.bodyTrHeight,\n    footSumHeight = this.footSumColumns.length * this.xvar.bodyTrHeight,\n    headerHeight = (this.config.header.display) ? this.headerTable.rows.length * this.config.header.columnHeight : 0,\n    pageHeight = (this.config.page.display) ? this.config.page.height : 0;\n\n  {\n    verticalScrollerWidth = ((CT_HEIGHT - headerHeight - pageHeight - footSumHeight) < this.list.length * this.xvar.bodyTrHeight) ? this.config.scroller.size : 0;\n    // 남은 너비가 colGroup의 너비보다 넓을때. 수평 스크롤 활성화.\n    horizontalScrollerHeight = (() => {\n      let totalColGroupWidth = 0;\n      // aside 빼고 너비\n      // 수직 스크롤이 있으면 또 빼고 비교\n      let bodyWidth = CT_WIDTH - asidePanelWidth - verticalScrollerWidth;\n      for (let i = 0, l = this.colGroup.length; i < l; i++) {\n        totalColGroupWidth += this.colGroup[i]._width;\n      }\n      return (totalColGroupWidth > bodyWidth) ? this.config.scroller.size : 0;\n    })();\n\n    if (horizontalScrollerHeight > 0) {\n      verticalScrollerWidth = ((CT_HEIGHT - headerHeight - pageHeight - footSumHeight - horizontalScrollerHeight) < this.list.length * this.xvar.bodyTrHeight) ? this.config.scroller.size : 0;\n    }\n  }\n\n  // 수평 너비 결정\n  CT_INNER_WIDTH = CT_WIDTH - verticalScrollerWidth;\n  // 수직 스크롤러의 높이 결정.\n  CT_INNER_HEIGHT = CT_HEIGHT - pageHeight - horizontalScrollerHeight;\n\n  bodyHeight = CT_INNER_HEIGHT - headerHeight;\n\n  const panelDisplayProcess = function (panel, vPosition, hPosition, containerType) {\n    let css = {\n        display: \"block\"\n      },\n      isHide = false;\n\n    switch (hPosition) {\n      case \"aside\":\n        if (asidePanelWidth === 0) {\n          isHide = true;\n        } else {\n          css[\"left\"] = 0;\n          css[\"width\"] = asidePanelWidth;\n        }\n        break;\n      case \"left\":\n        if (this.config.frozenColumnIndex === 0) {\n          isHide = true;\n        } else {\n          css[\"left\"] = asidePanelWidth;\n          css[\"width\"] = frozenPanelWidth;\n        }\n        break;\n      case \"right\":\n        if (!this.config.rightSum) {\n          isHide = true;\n        } else {\n\n        }\n        break;\n      default:\n        if (containerType !== \"page\") {\n          if (this.config.frozenColumnIndex === 0) {\n            css[\"left\"] = asidePanelWidth;\n          } else {\n            css[\"left\"] = frozenPanelWidth + asidePanelWidth;\n          }\n          css[\"width\"] = CT_INNER_WIDTH - asidePanelWidth - frozenPanelWidth - rightPanelWidth;\n        }\n        break;\n    }\n\n    if (isHide) {\n      panel.css({display: \"none\"});\n      // 프로세스 중지\n      return this;\n    }\n\n    if (containerType === \"body\") {\n      switch (vPosition) {\n        case \"top\":\n          if (this.config.frozenRowIndex == 0) {\n            isHide = true;\n          } else {\n            css[\"top\"] = 0;\n            css[\"height\"] = frozenRowHeight;\n          }\n          break;\n        case \"bottom\":\n          if (!this.config.footSum) {\n            isHide = true;\n          } else {\n            css[\"top\"] = bodyHeight - footSumHeight;\n            css[\"height\"] = footSumHeight; // footSum height\n          }\n          break;\n        default:\n          css[\"top\"] = frozenRowHeight;\n          css[\"height\"] = bodyHeight - frozenRowHeight - footSumHeight;\n\n          break;\n      }\n    } else if (containerType === \"header\") {\n      css[\"height\"] = headerHeight;\n    } else if (containerType === \"page\") {\n      if (pageHeight == 0) {\n        isHide = true;\n      } else {\n        css[\"height\"] = pageHeight;\n\n      }\n    }\n\n    if (isHide) {\n      panel.css({display: \"none\"});\n      // 프로세스 중지\n      return this;\n    }\n\n    panel.css(css);\n    return this;\n  };\n  const scrollerDisplayProcess = function (panel, scrollerWidth, scrollerHeight, containerType) {\n    let css = {\n        display: \"block\"\n      },\n      isHide = false;\n\n    switch (containerType) {\n      case \"vertical\":\n        if (scrollerWidth > 0) {\n          css[\"width\"] = scrollerWidth;\n          css[\"height\"] = CT_INNER_HEIGHT;\n          css[\"bottom\"] = scrollerHeight + pageHeight;\n        } else {\n          isHide = true;\n        }\n        break;\n      case \"horizontal\":\n        if (scrollerHeight > 0) {\n          css[\"width\"] = CT_INNER_WIDTH;\n          css[\"height\"] = scrollerHeight;\n          css[\"right\"] = scrollerWidth;\n          css[\"bottom\"] = pageHeight;\n        } else {\n          isHide = true;\n        }\n        break;\n      case \"corner\":\n        if (scrollerWidth > 0 && scrollerHeight > 0) {\n          css[\"width\"] = scrollerWidth;\n          css[\"height\"] = scrollerHeight;\n          css[\"bottom\"] = pageHeight;\n        } else {\n          isHide = true;\n        }\n        break;\n    }\n\n    if (isHide) {\n      panel.css({display: \"none\"});\n      // 프로세스 중지\n      return this;\n    }\n\n    panel.css(css);\n  };\n\n  this.$[\"container\"][\"header\"].css({height: headerHeight});\n  this.$[\"container\"][\"body\"].css({height: bodyHeight});\n\n  // 각 패널들의 크기 표시여부를 결정합니다\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"aside-header\"], \"\", \"aside\", \"header\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"left-header\"], \"\", \"left\", \"header\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"header\"], \"\", \"\", \"header\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"right-header\"], \"\", \"right\", \"header\");\n\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"top-aside-body\"], \"top\", \"aside\", \"body\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"top-left-body\"], \"top\", \"left\", \"body\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"top-body\"], \"top\", \"\", \"body\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"top-right-body\"], \"top\", \"right\", \"body\");\n\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"aside-body\"], \"\", \"aside\", \"body\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"left-body\"], \"\", \"left\", \"body\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"body\"], \"\", \"\", \"body\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"right-body\"], \"\", \"right\", \"body\");\n\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-aside-body\"], \"bottom\", \"aside\", \"body\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-left-body\"], \"bottom\", \"left\", \"body\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-body\"], \"bottom\", \"\", \"body\");\n  panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-right-body\"], \"bottom\", \"right\", \"body\");\n\n\n  scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"vertical\"], verticalScrollerWidth, horizontalScrollerHeight, \"vertical\");\n  scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"horizontal\"], verticalScrollerWidth, horizontalScrollerHeight, \"horizontal\");\n  scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"corner\"], verticalScrollerWidth, horizontalScrollerHeight, \"corner\");\n\n  panelDisplayProcess.call(this, this.$[\"container\"][\"page\"], \"\", \"\", \"page\");\n\n  // 각 패널의 사이즈 결정\n  /// 다른 패널의 사이즈 정보가 필요한 경우 여기서 정의해주고 사용함.\n  this.xvar.bodyHeight = this.$.panel[\"body\"].height();\n  this.xvar.bodyWidth = this.$.panel[\"body\"].width();\n  // scrollContentWidth 는 grid-header repaint에서 결정합니다. 까먹지 맙시다. > this.xvar.scrollContentWidth\n\n  return true;\n};\nconst sortColumns = function (_sortInfo) {\n  HEADER.repaint.call(this);\n\n  if (U.isFunction(this.config.remoteSort)) {\n    let that = {sortInfo: []};\n    for (let k in _sortInfo) {\n      that.sortInfo.push({\n        key: k,\n        orderBy: _sortInfo[k].orderBy,\n        seq: _sortInfo[k].seq\n      });\n    }\n    that.sortInfo.sort(function (a, b) {\n      return a.seq > b.seq;\n    });\n    this.config.remoteSort.call(that, that);\n  } else {\n    if (this.config.body.grouping) {\n      this.list = DATA.initData.call(this,\n        DATA.sort.call(this,\n          _sortInfo,\n          DATA.clearGroupingData.call(this,\n            this.list\n          )\n        )\n      );\n    }\n    else {\n      this.list = DATA.sort.call(this, _sortInfo,\n        DATA.clearGroupingData.call(this,\n          this.list\n        ),\n        {resetLineNumber: true}\n      );\n    }\n    BODY.repaint.call(this, true);\n    SCROLLER.resize.call(this);\n  }\n};\n/** ~~~~~~~~~~~~~~~~~~ end of private  ~~~~~~~~~~~~~~~~~~~~ **/\n\n/**\n * @class\n */\nclass AX6UIGrid extends AX6UICore {\n\n  /**\n   * @static\n   * @param _formatter\n   */\n  static setFormatter(_formatter) {\n    return formatter = Object.assign(formatter, _formatter);\n  }\n\n  /**\n   * @static\n   * @return {Object}\n   */\n  static getFormatter() {\n    return formatter || {};\n  }\n\n  /**\n   * @static\n   * @param _collector\n   * @return {collector}\n   */\n  static setCollector(_collector) {\n    return collector = Object.assign(collector, _collector);\n  }\n\n  /**\n   * @static\n   * @return {collector}\n   */\n  static getCollector() {\n    return collector || {};\n  }\n\n  /**\n   * @static\n   * @param _tmpl\n   * @return {tmpl}\n   */\n  static setTmpl(_tmpl) {\n    return tmpl = Object.assign(tmpl, _tmpl);\n  }\n\n  /**\n   * @static\n   * @return {tmpl}\n   */\n  static getTmpl() {\n    return tmpl || {};\n  }\n\n  /**\n   * @constructor\n   * @param config\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @member {JSON}\n     * @param config\n     * @param {Element} config.target\n     * @param {Number} [config.frozenColumnIndex=0]\n     * @param {Number} [config.frozenRowIndex=0]\n     * @param {Boolean} [config.showLineNumber=false]\n     * @param {Boolean} [config.showRowSelector=false]\n     * @param {Boolean} [config.multipleSelect=true]\n     * @param {Number} [config.columnMinWidth=100]\n     * @param {Number} [config.lineNumberColumnWidth=30]\n     * @param {Number} [config.rowSelectorColumnWidth=25]\n     * @param {Boolean} [config.sortable=false]\n     * @param {Boolean} [config.multiSort=false]\n     * @param {Function} [config.remoteSort=false]\n     * @param {Boolean} [config.virtualScrollY=true] - 세로축 가상스크롤 처리여부\n     * @param {Boolean} [config.virtualScrollX=true] - 가로축 가상스크롤 처리여부\n     * @param {Object} [config.header]\n     * @param {String} [config.header.align]\n     * @param {Number} [config.header.columnHeight=25]\n     * @param {Number} [config.header.columnPadding=3]\n     * @param {Number} [config.header.columnBorderWidth=1]\n     * @param {Object} [config.body]\n     * @param {Function} [config.body.onClick]\n     * @param {Function} [config.body.onDBLClick]\n     * @param {Function} [config.body.onDataChanged]\n     * @param {Function} [config.body.onContextMenu]\n     * @param {String|Array} [config.body.mergeCells=false] -\n     * @param {String} [config.body.align]\n     * @param {Number} [config.body.columnHeight=25]\n     * @param {Number} [config.body.columnPadding=3]\n     * @param {Number} [config.body.columnBorderWidth=1]\n     * @param {Object} [config.body.grouping]\n     * @param {Array} [config.body.grouping.by] - list grouping keys\n     * @param {Array} [config.body.grouping.columns] - list grouping columns\n     * @param {(String|Function)} [config.body.trStyleClass]\n     * @param {Object} [config.page]\n     * @param {Number} [config.page.height=25]\n     * @param {Boolean} [config.page.display=true] - grid page display\n     * @param {Boolean} [config.page.statusDisplay=true] - grid status display\n     * @param {Number} [config.page.navigationItemCount=5]\n     * @param {Object} [config.scroller]\n     * @param {Number} [config.scroller.size=15]\n     * @param {Number} [config.scroller.barMinSize=15]\n     * @param {Number} [config.scroller.trackPadding=4]\n     * @param {Object} [config.columnKeys]\n     * @param {String} [config.columnKeys.selected=\"_SELECTED\"]\n     * @param {Object[]} config.columns\n     * @param {String} config.columns[].key\n     * @param {String} config.columns[].label\n     * @param {Number} config.columns[].width\n     * @param {(String|Function)} config.columns[].styleClass\n     * @param {(String|Function)} config.columns[].headerStyleClass\n     * @param {Boolean} config.columns[].enableFilter\n     * @param {Boolean} config.columns[].sortable\n     * @param {String} config.columns[].align\n     * @param {(String|Function)} config.columns[].formatter\n     * @param {Object} config.columns[].editor\n     * @param {String} config.columns[].editor.type - text,number,money,date\n     * @param {Object} config.columns[].editor.config\n     * @param {Array} config.columns[].editor.updateWith\n     * @param {Function} config.columns[].editor.disabled - disable editor\n     * @param {Boolean} [config.columns[].multiLine=false]\n     * @param {Object} [config.tree]\n     * @param {Boolean} [config.tree.use=false] - Whether tree-type data is used\n     * @param {Number} [config.tree.hashDigit=8]\n     * @param {Number} [config.tree.indentWidth=10]\n     * @param {Number} [config.tree.arrowWidth=15]\n     * @param {Number} [config.tree.iconWidth=18]\n     * @param {Object} [config.tree.icons]\n     * @param {String} [config.tree.icons.openedArrow='▾']\n     * @param {String} [config.tree.icons.collapsedArrow='▸']\n     * @param {String} [config.tree.icons.groupIcon='⊚']\n     * @param {String} [config.tree.icons.collapsedGroupIcon='⊚']\n     * @param {String} [config.tree.icons.itemIcon='⊙']\n     * @param {Object} [config.tree.columnKeys]\n     * @param {String} [config.tree.columnKeys.parentKey=\"pid\"]\n     * @param {String} [config.tree.columnKeys.selfKey=\"id\"]\n     * @param {String} [config.tree.columnKeys.collapse=\"collapse\"]\n     * @param {String} [config.tree.columnKeys.hidden=\"hidden\"]\n     * @param {String} [config.tree.columnKeys.parentHash=\"__hp__\"]\n     * @param {String} [config.tree.columnKeys.selfHash=\"__hs__\"]\n     * @param {String} [config.tree.columnKeys.children=\"__children__\"]\n     * @param {String} [config.tree.columnKeys.depth=\"__depth__\"]\n     */\n    this.config = {\n      theme: 'default',\n      animateTime: 250,\n      debounceTime: 250,\n      appendDebouncer: null,\n      appendDebounceTimes: 0,\n      appendProgressIcon: '...',\n      appendProgress: false,\n\n      // 틀고정 속성\n      frozenColumnIndex: 0,\n      frozenRowIndex: 0,\n      showLineNumber: false,\n      showRowSelector: false,\n      multipleSelect: true,\n      virtualScrollY: true,\n      virtualScrollX: true,\n\n      // 스크롤될 때 body 페인팅 딜레이를 주어 성능이 좋은 않은 브라우저에서 반응을 빠르게 할 때 사용하는 옵션들\n      virtualScrollYCountMargin: 0,\n      virtualScrollAccelerated: true,\n      virtualScrollAcceleratedDelayTime: 10,\n\n      height: 0,\n      columnMinWidth: 100,\n      lineNumberColumnWidth: 30,\n      rowSelectorColumnWidth: 26,\n      sortable: undefined,\n      remoteSort: false,\n\n      header: {\n        display: true,\n        align: false,\n        columnHeight: 26,\n        columnPadding: 3,\n        columnBorderWidth: 1\n      },\n      body: {\n        align: false,\n        columnHeight: 26,\n        columnPadding: 3,\n        columnBorderWidth: 1,\n        grouping: false,\n        mergeCells: false\n      },\n      rightSum: false,\n      footSum: false,\n      page: {\n        height: 25,\n        display: true,\n        statusDisplay: true,\n        navigationItemCount: 5\n      },\n      scroller: {\n        size: 15,\n        barMinSize: 15,\n        trackPadding: 4\n      },\n      columnKeys: {\n        selected: '__selected__',\n        modified: '__modified__',\n        deleted: '__deleted__',\n        disableSelection: '__disable_selection__'\n      },\n      tree: {\n        use: false,\n        hashDigit: 8,\n        indentWidth: 10,\n        arrowWidth: 15,\n        iconWidth: 18,\n        icons: {\n          openedArrow: '▾',\n          collapsedArrow: '▸',\n          groupIcon: '⊚',\n          collapsedGroupIcon: '⊚',\n          itemIcon: '⊙'\n        },\n        columnKeys: {\n          parentKey: \"pid\",\n          selfKey: \"id\",\n          collapse: \"collapse\",\n          hidden: \"hidden\",\n          parentHash: \"__hp__\",\n          selfHash: \"__hs__\",\n          children: \"__children__\",\n          depth: \"__depth__\",\n        }\n      }\n    };\n    jQuery.extend(true, this.config, config);\n\n    // 멤버 변수 초기화\n    /**\n     * @member {Object}\n     */\n    this.xvar = {\n      bodyTrHeight: 0, // 한줄의 높이\n      scrollContentWidth: 0, // 스크롤 될 내용물의 너비 (스크롤 될 내용물 : panel['body-scroll'] 안에 컬럼이 있는)\n      scrollContentHeight: 0, // 스크롤 된 내용물의 높이\n      scrollTimer: null\n    };\n\n    // 그리드 데이터셋\n    /**\n     * @member {Array}\n     */\n    this.columns = []; // config.columns에서 복제된 오브젝트\n    /**\n     * @member {Array}\n     */\n    this.colGroup = []; // columns를 table태그로 출력하기 좋게 변환한 오브젝트\n    /**\n     * @member {Array}\n     */\n    this.footSumColumns = [];\n    /**\n     * @member {Object}\n     */\n    this.bodyGrouping = {};\n    /**\n     * @member {Array}\n     */\n    this.list = []; // 그리드의 데이터\n    /**\n     * @member {Array}\n     */\n    this.proxyList = null; // 그리드 데이터의 대리자\n    /**\n     * @member {Object}\n     */\n    this.page = null; // 그리드의 페이지 정보\n\n    this.selectedDataIndexs = [];\n    this.deletedList = [];\n\n    /**\n     * @member {Object}\n     */\n    this.sortInfo = {}; // 그리드의 헤더 정렬 정보\n    this.focused = false;\n    /**\n     * @member {Object}\n     */\n    this.focusedColumn = {}; // 그리드 바디의 포커스된 셀 정보\n    /**\n     * @member {Object}\n     */\n    this.selectedColumn = {}; // 그리드 바디의 선택된 셀 정보\n    this.isInlineEditing = false;\n    /**\n     * @member {Object}\n     */\n    this.inlineEditing = {};\n    /**\n     * @member {Object}\n     */\n    this.listIndexMap = {}; // tree데이터 사용시 데이터 인덱싱 맵\n    /**\n     * @member {Object}\n     */\n    this.contextMenu = null; // contentMenu 의 인스턴스\n\n    // header\n    /**\n     * @member {Object}\n     */\n    this.headerTable = {};\n    /**\n     * @member {Object}\n     */\n    this.leftHeaderData = {};\n    /**\n     * @member {Object}\n     */\n    this.headerData = {};\n    /**\n     * @member {Object}\n     */\n    this.rightHeaderData = {};\n\n    // body\n    /**\n     * @member {Object}\n     */\n    this.bodyRowTable = {};\n    /**\n     * @member {Object}\n     */\n    this.leftBodyRowData = {};\n    /**\n     * @member {Object}\n     */\n    this.bodyRowData = {};\n    /**\n     * @member {Object}\n     */\n    this.rightBodyRowData = {};\n    /**\n     * @member {Object}\n     */\n    this.bodyRowMap = {};\n\n    /**\n     * @member {Object}\n     */\n    this.bodyGroupingTable = {};\n    /**\n     * @member {Object}\n     */\n    this.leftBodyGroupingData = {};\n    /**\n     * @member {Object}\n     */\n    this.bodyGroupingData = {};\n    /**\n     * @member {Object}\n     */\n    this.rightBodyGroupingData = {};\n    /**\n     * @member {Object}\n     */\n    this.bodyGroupingMap = {};\n\n    // footSum\n    /**\n     * @member {Object}\n     */\n    this.footSumTable = {}; // footSum의 출력레이아웃\n    /**\n     * @member {Object}\n     */\n    this.leftFootSumData = {}; // frozenColumnIndex 를 기준으로 나누어진 출력 레이아웃 왼쪽\n    /**\n     * @member {Object}\n     */\n    this.footSumData = {}; // frozenColumnIndex 를 기준으로 나누어진 출력 레이아웃 오른쪽\n    /**\n     * @member {Boolean}\n     */\n    this.needToPaintSum = true; // 데이터 셋이 변경되어 summary 변경 필요여부\n\n    /**\n     * 사용자 정의 formatter. AX6UIGrid.setFormatter 를 이용하여 확장\n     * @member\n     */\n    this.customFormatter = AX6UIGrid.getFormatter();\n\n    /**\n     * 사용자 정의 collector. AX6UIGrid.setCollector 를 이용하여 확장\n     * @member\n     */\n    this.customCollector = AX6UIGrid.getCollector();\n\n    this.__tmpl = Object.assign(TMPL, AX6UIGrid.getTmpl());\n\n    if (typeof config !== \"undefined\") this.init();\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param config\n   */\n  init() {\n    // 그리드의 이벤트 정의 구간\n    this.onStateChanged = this.config.onStateChanged;\n    this.onLoad = this.config.onLoad;\n\n    // init 호출 여부\n    this.initOnce();\n\n    if (typeof this.config.target !== \"undefined\") {\n\n      this.$target = jQuery(this.config.target);\n\n      // target attribute data\n      (function (data) {\n        if (U.isObject(data) && !data.error) {\n          this.config = jQuery.extend(true, {}, this.config, data);\n        }\n      }).call(this, U.parseJson(this.$target.attr(\"data-ax6ui-grid-config\"), true));\n\n      if (!this.config.height) {\n        this.config._height = this.$target.height();\n      }\n\n      if (!this.id) this.id = this.$target.data(\"ax6ui-grid-id\");\n      if (!this.id) {\n        this.id = 'ax6ui-grid-' + this.instanceId;\n        this.$target.data(\"ax6ui-grid-id\", this.id);\n      }\n\n      DATA.init.call(this);\n\n      if (this.config.tree.use) { // 트리라면\n        this.sortInfo = {};\n        this.sortInfo[this.config.tree.columnKeys.selfHash] = {orderBy: \"asc\", seq: 0, fixed: true};\n      }\n\n      ///========\n      // 그리드를 그리기 위한 가장 기초적인 작업 뼈대와 틀을 준비합니다. 이 메소드는 초기화 시 한번만 호출 되게 됩니다.\n      initGrid.call(this);\n\n      // columns데이터를 분석하여 미리 처리해야하는 데이터를 정리합니다.\n      initColumns.call(this, this.config.columns);\n      resetColGroupWidth.call(this);\n\n      // footSum 데이터를 분석하여 미리 처리해야 하는 데이터를 정리\n      if (this.config.footSum) initFootSum.call(this, this.config.footSum);\n\n      // bodyGrouping 데이터를 분석하여 미리 처리해야 하는 데이터를 정리\n      if (this.config.body.grouping) initBodyGroup.call(this, this.config.body.grouping);\n\n      // 그리드의 각 요소의 크기를 맞춤니다.\n      alignGrid.call(this, true);\n\n      // columns의 데이터로 header데이터를 만들고\n      HEADER.init.call(this);\n      // header를 출력합니다.\n      HEADER.repaint.call(this);\n\n      // columns의 데이터로 body데이터를 만들고\n      BODY.init.call(this);\n      // body를 출력합니다.\n      BODY.repaint.call(this);\n\n      // scroller\n      SCROLLER.init.call(this);\n      SCROLLER.resize.call(this);\n\n      jQuery(window)\n        .on(\"resize.ax6grid-\" + this.id, U.throttle(function (e) {\n          alignGrid.call(this);\n          SCROLLER.resize.call(this);\n          BODY.repaint.call(this);  // window resize시 repaint 함수 호출\n        }, 30).bind(this))\n        .on(\"keydown.ax6grid-\" + this.instanceId, (e) => {\n          if (this.focused) {\n            if (this.isInlineEditing) {\n              if (e.which == info.eventKeys.ESC) {\n                this.keyDown(\"ESC\", e.originalEvent);\n              }\n              else if (e.which == info.eventKeys.RETURN) {\n                this.keyDown(\"RETURN\", e.originalEvent);\n              }\n              else if (e.which == info.eventKeys.TAB) {\n                this.keyDown(\"TAB\", e.originalEvent);\n                U.stopEvent(e);\n              }\n              else if (e.which == info.eventKeys.UP) {\n                this.keyDown(\"RETURN\", {shiftKey: true});\n              }\n              else if (e.which == info.eventKeys.DOWN) {\n                this.keyDown(\"RETURN\", {});\n              }\n            }\n            else {\n              if (e.metaKey || e.ctrlKey) {\n                if (e.which == 67) { // c\n                  self.copySelect();\n                }\n              } else {\n                if (ctrlKeys[e.which]) {\n                  this.keyDown(ctrlKeys[e.which], e.originalEvent); // 키다운 이벤트 호출\n                  U.stopEvent(e);\n                } else if (e.which == info.eventKeys.ESC) {\n                  if (this.focused) {\n                    BODY.blur.call(self);\n                  }\n                } else if (e.which == info.eventKeys.RETURN || e.which == info.eventKeys.SPACE) {\n                  this.keyDown(\"RETURN\", e.originalEvent);\n                } else if (e.which == info.eventKeys.TAB) {\n                  //self.keyDown(\"RETURN\", e.originalEvent);\n                  U.stopEvent(e);\n                } else if (Object.keys(this.focusedColumn).length) {\n                  this.keyDown(\"INLINE_EDIT\", e.originalEvent);\n                }\n              }\n            }\n          }\n        });\n\n      jQuery(document.body).on(\"click.ax6grid-\" + this.id, (e) => {\n        let isPickerClick = false,\n          target = U.findParentNode(e.target, function (_target) {\n            if (isPickerClick = _target.getAttribute(\"data-ax6grid-inline-edit-picker\")) {\n              return true;\n            }\n            return _target.getAttribute(\"data-ax6grid-container\") === \"root\";\n          });\n\n        if (target && target.getAttribute(\"data-ax6grid-instance\") === this.id) {\n          this.focused = true;\n        } else {\n          this.focused = false;\n          BODY.blur.call(this);\n        }\n      });\n\n\n      // 그리드 레이아웃이 모든 준비를 마친시점에 onLoad존재 여부를 확인하고 호출하여 줍니다.\n      setTimeout(() => {\n        if (this.onLoad) {\n          this.onLoad.call({\n            self: this\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * @method\n   */\n  initOnce() {\n    if (this.initialized) return this;\n    this.initialized = true;\n  }\n\n  /**\n   * 그리드의 각 패널들의 크기를 변경된 설정에 맞추어 다시 그림\n   * @method\n   * @return {AX6UIGrid}\n   */\n  align() {\n    if (alignGrid.call(this)) {\n      BODY.repaint.call(this);\n      SCROLLER.resize.call(this);\n    }\n    return this;\n  }\n\n  /**\n   * 그리드에 키보드 액션을 전달\n   * @method\n   * @param _act\n   * @param _data\n   * @return {AX6UIGrid}\n   */\n  keyDown(_act, _data) {\n    const processor = {\n      \"KEY_UP\": function () {\n        BODY.moveFocus.call(this, \"UP\");\n      },\n      \"KEY_DOWN\": function () {\n        BODY.moveFocus.call(this, \"DOWN\");\n      },\n      \"KEY_LEFT\": function () {\n        BODY.moveFocus.call(this, \"LEFT\");\n      },\n      \"KEY_RIGHT\": function () {\n        BODY.moveFocus.call(this, \"RIGHT\");\n      },\n      \"KEY_HOME\": function () {\n        BODY.moveFocus.call(this, \"HOME\");\n      },\n      \"KEY_END\": function () {\n        BODY.moveFocus.call(this, \"END\");\n      },\n      \"INLINE_EDIT\": function (_e) {\n        BODY.inlineEdit.active.call(this, this.focusedColumn, _e);\n        if (!/[0-9a-zA-Z]/.test(_e.key)) {\n          U.stopEvent(_e);\n        }\n      },\n      \"ESC\": function (_e) {\n        BODY.inlineEdit.keydown.call(this, \"ESC\");\n      },\n      \"RETURN\": function (_e) {\n        var activeEditLength = 0;\n        for (var columnKey in this.inlineEditing) {\n          activeEditLength++;\n\n          if (!BODY.inlineEdit.keydown.call(this, \"RETURN\", columnKey)) {\n            return false;\n            U.stopEvent(_e);\n          }\n          // next focus\n          if (activeEditLength == 1) {\n            if (BODY.moveFocus.call(this, (_e.shiftKey) ? \"UP\" : \"DOWN\")) {\n              BODY.inlineEdit.keydown.call(this, \"RETURN\");\n            }\n          }\n        }\n        if (activeEditLength == 0) {\n          BODY.inlineEdit.keydown.call(this, \"RETURN\");\n          U.stopEvent(_e);\n        } else {\n\n        }\n      },\n      \"TAB\": function (_e) {\n\n        var activeEditLength = 0;\n        for (var columnKey in this.inlineEditing) {\n          activeEditLength++;\n\n          BODY.inlineEdit.keydown.call(this, \"RETURN\", columnKey, {moveFocus: true});\n          // next focus\n          if (activeEditLength == 1) {\n            if (BODY.moveFocus.call(this, (_e.shiftKey) ? \"LEFT\" : \"RIGHT\")) {\n              BODY.inlineEdit.keydown.call(this, \"RETURN\", undefined, {moveFocus: true});\n            }\n          }\n        }\n      }\n    };\n    if (_act in processor) processor[_act].call(this, _data);\n    return this;\n  }\n\n  /**\n   * 선택된 셀을 클립보드에 복사합니다\n   * @method\n   * @return {*}\n   */\n  copySelect() {\n    let copysuccess,\n      $clipBoard = this.$[\"form\"][\"clipboard\"],\n      copyTextArray = [], copyText = \"\",\n      _rowIndex, _colIndex, _dindex, _di = 0;\n\n    for (let c in this.selectedColumn) {\n      let _column = this.selectedColumn[c];\n\n      if (_column) {\n        if (typeof _dindex === \"undefined\") {\n          _dindex = _column.dindex;\n          _rowIndex = _column.rowIndex;\n          _colIndex = _column.rowIndex;\n        }\n\n        if (_dindex != _column.dindex || _rowIndex != _column.rowIndex) {\n          _di++;\n        }\n\n        if (!copyTextArray[_di]) {\n          copyTextArray[_di] = [];\n        }\n        let originalColumn = this.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n        if (originalColumn) {\n          if (this.list[_column.dindex].__isGrouping) {\n            copyTextArray[_di].push(this.list[_column.dindex][_column.colIndex]);\n          } else {\n            copyTextArray[_di].push(this.list[_column.dindex][originalColumn.key]);\n          }\n        } else {\n          copyTextArray[_di].push(\"\");\n        }\n\n        _dindex = _column.dindex;\n        _rowIndex = _column.rowIndex;\n      }\n    }\n\n    copyTextArray.forEach(function (r) {\n      copyText += r.join('\\t') + \"\\n\";\n    });\n\n    $clipBoard.get(0).innerText = copyText;\n    $clipBoard.select();\n\n    try {\n      copysuccess = document.execCommand(\"copy\");\n    }\n    catch (e) {\n      copysuccess = false;\n    }\n    return copysuccess;\n  }\n\n  /**\n   * @method\n   * @param _data\n   * @return {AX6UIGrid}\n   * @example\n   * ```js\n   * import {AX6UIGrid as Grid} from \"ax6ui\";\n   *\n   * let grid = new Grid({target: el});\n   * grid.setData([\n   *  {name: \"Thomas\"}\n   * ]);\n   *\n   * grid.setData({\n     *  list: [],\n     *  page: {\n     *      currentPage: 0,\n     *      pageSize: 50,\n     *      totalElements: 500,\n     *      totalPages: 100\n     *  }\n     * });\n   * ```\n   */\n  setData(_data) {\n    let isFirstPaint = (typeof this.xvar.paintStartRowIndex === \"undefined\");\n\n    DATA.set.call(this, _data);\n    alignGrid.call(this);\n    BODY.repaint.call(this);\n    if (!isFirstPaint) BODY.scrollTo.call(this, {top: 0});\n\n    SCROLLER.resize.call(this);\n    PAGE.navigationUpdate.call(this);\n\n    isFirstPaint = null;\n    return this;\n  }\n\n  /**\n   * @method\n   * @param _type\n   * @return {*}\n   * @example\n   * ```js\n   * import {AX6UIGrid as Grid} from \"ax6ui\";\n   * let grid = new Grid({target: el});\n   * grid.setData([]);\n   *\n   * grid.getList(); // return all\n   * grid.getList(\"selected\");\n   * grid.getList(\"modified\");\n   * grid.getList(\"deleted\");\n   * ```\n   */\n  getList(_type) {\n    return DATA.getList.call(this, _type);\n  }\n\n  /**\n   * @method\n   * @param _height\n   * @return {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.setHeight(height);\n   * ```\n   */\n  setHeight(_height) {\n    if (_height == \"100%\") {\n      _height = this.$target.offsetParent().innerHeight();\n    }\n    this.$target.css({height: _height});\n    this.$[\"container\"][\"root\"].css({height: _height});\n    alignGrid.call(this);\n    BODY.repaint.call(this, \"reset\");\n    SCROLLER.resize.call(this);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param _row\n   * @param {Number|String} [_dindex=\"last\"]\n   * @param _options\n   * @param {Boolean} [_options.sort]\n   * @param {Number|String} [_options.focus] - HOME|END|[dindex]\n   * @return {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.addRow($.extend({}, {...}), \"first\");\n   * grid.addRow($.extend({}, {...}), \"last\", {focus: \"END\"});\n   * grid.addRow($.extend({}, {...}), \"last\", {focus: \"HOME\"});\n   * grid.addRow($.extend({}, {...}), \"last\", {focus: 10});\n   * ```\n   */\n  addRow(_row, _dindex, _options) {\n    DATA.add.call(this, _row, _dindex, _options);\n    alignGrid.call(this);\n    BODY.repaint.call(this, \"reset\");\n    if (_options && _options.focus) {\n      BODY.moveFocus.call(this, _options.focus);\n    }\n    SCROLLER.resize.call(this);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param _list\n   * @return {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.appendToList([{},{},{}]);\n   * grid.appendToList([{},{},{}]);\n   * ```\n   */\n  appendToList(_list) {\n    DATA.append.call(this, _list, (function () {\n      alignGrid.call(this);\n      BODY.repaint.call(this);\n      SCROLLER.resize.call(this);\n    }).bind(this));\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {Number|String} [_dindex=last]\n   * @return {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.removeRow();\n   * grid.removeRow(\"first\");\n   * grid.removeRow(\"last\");\n   * grid.removeRow(1);\n   * grid.removeRow(\"selected\");\n   * ```\n   */\n  removeRow(_dindex) {\n    DATA.remove.call(this, _dindex);\n    alignGrid.call(this);\n    BODY.repaint.call(this, \"reset\");\n    BODY.moveFocus.call(this, (this.config.body.grouping) ? \"START\" : \"END\");\n    SCROLLER.resize.call(this);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param _row\n   * @param _dindex\n   * @return {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.updateRow({price: 100, amount: 100, cost: 10000}, 1);\n   * ```\n   */\n  updateRow(_row, _dindex) {\n    DATA.update.call(this, _row, _dindex);\n    // todo : mergeCells 옵션에 따라 예외처리\n    BODY.repaintRow.call(this, _dindex);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {Number} _dindex\n   * @param {Object} _updateData\n   * @param {Object} [_options]\n   * @param {Function} [_options.filter]\n   * @returns {AX6UIGrid}\n   * @example\n   * ```js\n   * onDataChanged: function () {\n     *      this.self.updateChildRows(this.dindex, {isChecked: this.item.isChecked});\n     * }\n   *\n   * onDataChanged: function () {\n     *      this.self.updateChildRows(this.dindex, {isChecked: this.item.isChecked}, {filter: function(){\n     *          return this.item.type == \"A\";\n     *      });\n     * }\n     * ```\n     */\n  updateChildRows(_dindex, _updateData, _options) {\n    DATA.updateChild.call(this, _dindex, _updateData, _options);\n    this.xvar.paintStartRowIndex = undefined;\n    this.xvar.paintStartColumnIndex = undefined;\n    BODY.repaint.call(this);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {Number|String} _dindex\n   * @returns {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.deleteRow(\"first\");\n   * grid.deleteRow(\"last\");\n   * grid.deleteRow(1);\n   * grid.deleteRow(\"selected\");\n   * ```\n   */\n  deleteRow(_dindex) {\n    DATA.deleteRow.call(this, _dindex);\n    alignGrid.call(this);\n    BODY.repaint.call(this, \"reset\");\n\n    SCROLLER.resize.call(this);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param _dindex\n   * @param _key\n   * @param _value\n   * @returns {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.setValue(0, \"price\", 100);\n   * ```\n   */\n  setValue(_dindex, _key, _value) {\n    let doindex;\n\n    if (DATA.setValue.call(this, _dindex, doindex, _key, _value)) {\n      let repaintCell = function (_panelName, _rows, __dindex, __doindex, __key, __value) {\n        for (let r = 0, rl = _rows.length; r < rl; r++) {\n          for (let c = 0, cl = _rows[r].cols.length; c < cl; c++) {\n            if (_rows[r].cols[c].key == __key) {\n              if (this.xvar.frozenRowIndex > __dindex) {\n                BODY.repaintCell.call(this, \"top-\" + _panelName, __dindex, __doindex, r, c, __value);\n              } else {\n                BODY.repaintCell.call(this, _panelName + \"-scroll\", __dindex, __doindex, r, c, __value);\n              }\n            }\n          }\n        }\n      };\n\n      repaintCell.call(this, \"left-body\", this.leftBodyRowData.rows, _dindex, doindex, _key, _value);\n      repaintCell.call(this, \"body\", this.bodyRowData.rows, _dindex, doindex, _key, _value);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {Object} _column\n   * @param {Number|String} [_cindex=last]\n   * @returns {AX6UIGrid}\n   */\n  addColumn(_column, _cindex) {\n    const processor = {\n      \"first\": function (_column) {\n        this.config.columns = [].concat(_column).concat(this.config.columns);\n      },\n      \"last\": function (_column) {\n        this.config.columns = this.config.columns.concat([].concat(_column));\n      }\n    };\n\n    if (typeof _column === \"undefined\") throw '_column must not be null';\n    if (typeof _cindex === \"undefined\") _cindex = \"last\";\n    if (_cindex in processor) {\n      processor[_cindex].call(this, _column);\n    } else {\n      if (!U.isNumber(_cindex)) {\n        throw 'invalid argument _cindex';\n      }\n      if (U.isArray(_column)) {\n        for (let _i = 0, _l = _column.length; _i < _l; _i++) {\n          this.config.columns.splice(_cindex + _i, 0, _column[_i]);\n        }\n      } else {\n        this.config.columns.splice(_cindex, 0, _column);\n      }\n    }\n    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {Number|String} [_cindex=last]\n   * @returns {AX6UIGrid}\n   */\n  removeColumn(_cindex) {\n    const processor = {\n      \"first\": function (_cindex) {\n        this.config.columns.splice(_cindex, 1);\n      },\n      \"last\": function () {\n        this.config.columns.splice(this.config.columns.length - 1, 1);\n      }\n    };\n    if (typeof _cindex === \"undefined\") _cindex = \"last\";\n    if (_cindex in processor) {\n      processor[_cindex].call(this, _cindex);\n    } else {\n      if (!U.isNumber(_cindex)) {\n        throw 'invalid argument _cindex';\n      }\n      //\n      this.config.columns.splice(_cindex, 1);\n    }\n    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {Object} _column\n   * @param {Number} _cindex\n   * @returns {AX6UIGrid}\n   */\n  updateColumn(_column, _cindex) {\n    if (!U.isNumber(_cindex)) {\n      throw 'invalid argument _cindex';\n    }\n    //\n    this.config.columns.splice(_cindex, 1, _column);\n    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {Number} _width\n   * @param {Number} _cindex\n   * @returns {AX6UIGrid}\n   */\n  setColumnWidth(_width, _cindex) {\n    this.colGroup[this.xvar.columnResizerIndex]._width = _width;\n    this.needToPaintSum = true;\n\n    // 컬럼너비 변경사항 적용.\n    HEADER.repaint.call(this);\n    BODY.repaint.call(this, true);\n    SCROLLER.resize.call(this);\n\n    alignGrid.call(this);\n    return this;\n  }\n\n  /**\n   * @method\n   * @returns {Object} sortInfo\n   */\n  getColumnSortInfo() {\n    let that = {sortInfo: []};\n    for (let k in this.sortInfo) {\n      that.sortInfo.push({\n        key: k,\n        orderBy: this.sortInfo[k].orderBy,\n        seq: this.sortInfo[k].seq\n      });\n    }\n    that.sortInfo.sort(function (a, b) {\n      return a.seq > b.seq;\n    });\n    return that.sortInfo;\n  }\n\n  /**\n   * @method\n   * @param {Object} _sortInfo\n   * @param {Object} _sortInfo.key\n   * @param {Number} _sortInfo.key.seq - seq of sortOrder\n   * @param {String} _sortInfo.key.orderBy - \"desc\"|\"asc\"\n   * @returns {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.setColumnSort({a:{seq:0, orderBy:\"desc\"}, b:{seq:1, orderBy:\"asc\"}});\n   * ```\n   */\n  setColumnSort(_sortInfo) {\n    if (typeof _sortInfo !== \"undefined\") {\n      this.sortInfo = _sortInfo;\n      HEADER.applySortStatus.call(this, _sortInfo);\n    }\n\n    sortColumns.call(this, _sortInfo || this.sortInfo);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {Number|Object} _selectObject\n   * @param {Number} _selectObject.index - index of row\n   * @param {Number} _selectObject.rowIndex - rowIndex of columns\n   * @param {Number} _selectObject.conIndex - colIndex of columns\n   * @param {Object} _options\n   * @param {Boolean} _options.selectedClear\n   * @param {Boolean} _options.selected\n   * @returns {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.select(0);\n   * grid.select(0, {selected: true});\n   * grid.select(0, {selected: false});\n   * grid.select(0, {selectedClear: true});\n   * ```\n   */\n  select(_selectObject, _options) {\n    if (U.isNumber(_selectObject)) {\n      let dindex = _selectObject;\n\n      if (!this.config.multipleSelect) {\n        this.clearSelect();\n      } else {\n        if (_options && _options.selectedClear) {\n          this.clearSelect();\n        }\n      }\n\n      DATA.select.call(this, dindex, undefined, _options && _options.selected);\n      BODY.updateRowState.call(this, [\"selected\"], dindex, undefined);\n    }\n    return this;\n  }\n\n  /**\n   * @method\n   * @param _dindex\n   * @return {AX6UIGrid}\n   */\n  clickBody(_dindex) {\n    BODY.click.call(this, _dindex);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param _dindex\n   * @return {AX6UIGrid}\n   */\n  DBLClickBody(_dindex) {\n    BODY.dblClick.call(this, _dindex);\n    return this;\n  }\n\n  /**\n   * @method\n   * @return {AX6UIGrid}\n   */\n  clearSelect() {\n    BODY.updateRowState.call(this, [\"selectedClear\"]);\n    DATA.clearSelect.call(this);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {Object} _options\n   * @param {Boolean} _options.selected\n   * @param {Function} _options.filter\n   * @returns {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.selectAll();\n   * grid.selectAll({selected: true});\n   * grid.selectAll({selected: false});\n   * grid.selectAll({filter: function(){\n     *      return this[\"b\"] == \"A01\";\n     * });\n     * grid.selectAll({selected: true, filter: function(){\n     *      return this[\"b\"] == \"A01\";\n     * });\n     * ```\n     */\n  selectAll(_options) {\n    DATA.selectAll.call(this, _options && _options.selected, _options);\n    BODY.updateRowStateAll.call(this, [\"selected\"]);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {String} _fileName\n   * @returns {AX6UIGrid|String}\n   * @example\n   * ```js\n   * grid.exportExcel(\"grid-to-excel.xls\");\n   * console.log(grid.exportExcel());\n   * ```\n   */\n  exportExcel(_fileName) {\n    let table = [];\n    table.push('<table border=\"1\">');\n    table.push(HEADER.getExcelString.call(this));\n    table.push(BODY.getExcelString.call(this));\n    table.push('</table>');\n\n    if (typeof _fileName === \"undefined\") {\n      return table.join('');\n    }\n    else {\n      EXCEL.export.call(this, [table.join('')], _fileName);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {String|Number} _pos - UP, DOWN, LEFT, RIGHT, HOME, END\n   * @returns {AX6UIGrid}\n   * @example\n   * ```js\n   * grid.focus(\"UP\");\n   * grid.focus(\"DOWN\");\n   * grid.focus(\"HOME\");\n   * grid.focus(\"END\");\n   * ```\n   */\n  focus(_pos) {\n\n    if (BODY.moveFocus.call(this, _pos)) {\n      let focusedColumn;\n      for (let c in this.focusedColumn) {\n        focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n        break;\n      }\n      if (focusedColumn) {\n        this.select(focusedColumn.dindex, {selectedClear: true});\n      }\n    }\n    else {\n      if (typeof this.selectedDataIndexs[0] === \"undefined\") {\n        this.select(0);\n      } else {\n        let selectedIndex = this.selectedDataIndexs[0];\n        const processor = {\n          \"UP\": function () {\n            if (selectedIndex > 0) {\n              this.select(selectedIndex - 1, {selectedClear: true});\n              BODY.moveFocus.call(this, selectedIndex - 1);\n            }\n          },\n          \"DOWN\": function () {\n            if (selectedIndex < this.list.length - 1) {\n              this.select(selectedIndex + 1, {selectedClear: true});\n              BODY.moveFocus.call(this, selectedIndex + 1);\n            }\n          },\n          \"HOME\": function () {\n            this.select(0, {selectedClear: true});\n            BODY.moveFocus.call(this, 0);\n          },\n          \"END\": function () {\n            this.select(this.list.length - 1, {selectedClear: true});\n            BODY.moveFocus.call(this, this.list.length - 1);\n          }\n        };\n\n        if (_pos in processor) {\n          processor[_pos].call(this);\n        }\n      }\n    }\n    return this;\n  }\n\n  /**\n   * @method\n   * @return {null}\n   */\n  destroy() {\n    this.$target.empty();\n    this.list = [];\n\n    return null;\n  }\n}\n\nexport default AX6UIGrid;"]}