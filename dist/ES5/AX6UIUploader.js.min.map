{"version":3,"sources":["AX6UIUploader.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Util","tmpl","uploadProgress","columnKeys","inputFile","inputFileForm","progressBox","upoadedBox","thumbnail","apiServerUrl","name","size","bound_onStateChanged","that","this","config","onStateChanged","files","path","call","value","_evt","bound_onSelectFile","length","dataTransfer","target","bound_openProgressBox","bound_alignLayout","selectedFiles","_AX6Util2","default","toArray","trigger","info","supportFileApi","manualUpload","send","_this","$fileSelector","off","on","e","$inputFile","$uploadedBox","cellType","uploadedItemIndex","Number","self","uploadedFiles","$this","removeClass","get","_jqmin2","currentTarget","attr","parents","uploadedBox","onclick","timer","$dropZone","parent","$target","stopEvent","addEventListener","$","contains","isFunction","dropZone","ondragout","ondragover","_TF","css","bound_alignProgressBox","ondrop","pos","window","event","$progressBox","width","height","winHeight","Math","outerWidth","outerHeight","box","left","top","pickerDim","pickerDirection","$window","$body","document","body","position","offset","dim","positionCSS","positionMargin","progressBoxDirection","append","addClass","act","getAttribute","processor","winWidth","abort","$progressAbort","removeAttr","viewport","selector","state","bound_closeProgressBox","upload","animateTime","_this2","setTimeout","uploadFile","_alignProgressBox","$progressUpload","formData","form","onload","res","_this3","remove","bound_startUpload","html5","debug","log","error","FormData","find","each","bound_updateProgressBar","fileName","xhr","XMLHttpRequest","loaded","action","total","response","parseJson","console","$iframe","onuploaderror","doc","root","bound_uploaded","onprogress","result","__uploading","instanceId","$inputFileForm","contentWindow","contentDocument","documentElement","textContent","innerText","JSON","parse","filesTotal","selectedFilesTotal","$progressBar","lengthComputable","push","bound_repaintUploadedBox","submit","n","onuploadComplete","__loaded","number","round","onuploaded","bound_uploadComplete","bound_attachFileTag","bound_cancelUpload","accept","html","mustache","render","icon","lang","_this4","UPLOADER","multiple","clickEventName","theme","type","uploadedPath","downloadPath","AX6UIUploader","_classCallCheck","_this5","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","uploadedName","previewPath","extend","defaultBtns","$inputContainer","init","btns","$progressBoxArrow","isObject","data","getError","validateSelectedFiles","hide","bound_bindEvent","initOnce","initialized","alert","_files","isArray","isString","setUploadedFiles","_index","isNaN","splice"],"mappings":"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","file":"AX6UIUploader.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport U from \"./AX6Util\";\n\nimport \"./AX6UIUploader/index.scss\";\n\nlet tmpl = {\n  uploadProgress(columnKeys) {\n    return ``;\n  },\n  inputFile(columnKeys) {\n    return `<input type=\"file\" data-ax6ui-uploader-input=\"{{instanceId}}\" name=\"{{name}}\" {{#multiple}}multiple{{/multiple}} accept=\"{{accept}}\" />`;\n  },\n  inputFileForm(columnKeys) {\n    return `<form data-ax6ui-uploader-form=\"{{instanceId}}\" name=\"ax5uploader-{{instanceId}}-form\" method=\"post\" enctype=\"multipart/form-data\"></form>`;\n  },\n  progressBox(columnKeys) {\n    return `\n<div data-ax6ui-uploader-progressbox=\"{{instanceId}}\" class=\"{{theme}}\">\n    <div class=\"ax-progressbox-body\">\n        <div class=\"ax-pregressbox-content\">\n            <div class=\"progress\">\n              <div class=\"progress-bar progress-bar-striped active\" role=\"progressbar\" style=\"width: 0\">\n                <span class=\"sr-only\">0% Complete</span>\n              </div>\n            </div>\n        </div>\n        {{#btns}}\n            <div class=\"ax-progressbox-buttons\">\n            {{#btns}}\n                {{#@each}}\n                <button data-pregressbox-btn=\"{{@key}}\" class=\"btn btn-default {{@value.theme}}\">{{@value.label}}</button>\n                {{/@each}}\n            {{/btns}}\n            </div>\n        {{/btns}}\n    </div>\n    <div class=\"ax-progressbox-arrow\"></div>\n</div>\n`;\n  },\n  upoadedBox(columnKeys) {\n    return `\n{{#uploadedFiles}}<div data-ax6ui-uploader-uploaded-item=\"{{@i}}\">\n    <div class=\"uploaded-item-preview\">\n        {{#${columnKeys.thumbnail}}}<img src=\"${columnKeys.apiServerUrl}{{${columnKeys.thumbnail}}}\">{{/${columnKeys.thumbnail}}}\n    </div>\n    <div class=\"uploaded-item-holder\">\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"download\">{{{icon.download}}}</div>\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"filename\">{{${columnKeys.name}}}</div>\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"filesize\">({{#@fn_get_byte}}{{${columnKeys.size}}}{{/@fn_get_byte}})</div>\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"delete\">{{{icon.delete}}}</div>\n    </div>\n</div>{{/uploadedFiles}}\n{{^uploadedFiles}}\n{{#supportFileApi}}{{{lang.supportedHTML5_emptyListMsg}}}{{/supportFileApi}}\n{{^supportFileApi}}{{{lang.emptyListMsg}}}{{/supportFileApi}}\n{{/uploadedFiles}}\n`;\n  }\n};\n\nconst bound_onStateChanged = function (that) {\n  if (this.config.onStateChanged) {\n    this.config.onStateChanged.call(that, that);\n  }\n  else if (this.onStateChanged) {\n    this.onStateChanged.call(that, that);\n  }\n\n  that = null;\n  return true;\n};\nconst bound_onSelectFile = function (_evt) {\n  let files;\n\n  if (!info.supportFileApi) {\n    // file API 지원 안되는 브라우저.\n    // input file에 multiple 지원 안됨 그러므로 단일 파일 처리만 하면 됨.\n    files = {path: _evt.target.value};\n  }\n  else if ('dataTransfer' in _evt) {\n    files = _evt.dataTransfer.files;\n  }\n  else if ('target' in _evt) {\n    files = _evt.target.files;\n  }\n  else if (_evt) {\n    files = _evt;\n  }\n\n  if (!files) return false;\n\n  /// selectedFiles에 현재 파일 정보 담아두기\n  if (length in files) {\n    if (files.length == 1) {\n      this.selectedFiles = [files[0]];\n    } else {\n      this.selectedFiles = U.toArray(files);\n    }\n  } else {\n    this.selectedFiles = [files];\n  }\n\n  if (this.config.progressBox) {\n    bound_openProgressBox.call(this);\n  }\n  if (!this.config.manualUpload) {\n    this.send();\n  }\n\n  if (!info.supportFileApi) {\n    bound_alignLayout.call(this, false);\n  }\n};\nconst bound_bindEvent = function () {\n  this.$fileSelector\n    .off(\"click.ax5uploader\")\n    .on(\"click.ax5uploader\", e => {\n      this.$inputFile.trigger(\"click\");\n    });\n\n  if (!info.supportFileApi) {\n    this.$fileSelector\n      .off(\"mouseover.ax5uploader\")\n      .on(\"mouseover.ax5uploader\", e => {\n        bound_alignLayout.call(this, true);\n      });\n\n    this.$inputFile\n      .off(\"mouseover.ax5uploader\")\n      .on(\"mouseover.ax5uploader\", e => {\n        this.$fileSelector.addClass(\"active\");\n      });\n\n    this.$inputFile\n      .off(\"mouseout.ax5uploader\")\n      .on(\"mouseout.ax5uploader\", e => {\n        this.$fileSelector.removeClass(\"active\");\n        bound_alignLayout.call(this, false);\n      });\n  }\n\n  {\n    if (!this.$uploadedBox || !this.$uploadedBox.get(0)) return false;\n\n    this.$uploadedBox.on(\"click\", \"[data-uploaded-item-cell]\", e => {\n      let $this = jQuery(e.currentTarget),\n        cellType = $this.attr(\"data-uploaded-item-cell\"),\n        uploadedItemIndex = Number($this.parents('[data-ax6ui-uploader-uploaded-item]').attr('data-ax6ui-uploader-uploaded-item')),\n        that = {};\n\n      if (this.config.uploadedBox && this.config.uploadedBox.onclick) {\n        that = {\n          self: this,\n          cellType: cellType,\n          uploadedFiles: self.uploadedFiles,\n          fileIndex: uploadedItemIndex\n        };\n        this.config.uploadedBox.onclick.call(that, that);\n      }\n\n      $this = null;\n      cellType = null;\n      uploadedItemIndex = null;\n      that = null;\n    });\n\n    this.$uploadedBox\n      .on(\"dragstart\", function (e) {\n        U.stopEvent(e);\n        return false;\n      });\n  }\n\n  {\n    // dropZone 설정 방식 변경\n    if (!info.supportFileApi) return false;\n    if (!this.$dropZone || !this.$dropZone.get(0)) return false;\n\n    let timer;\n\n    this.$dropZone.parent()\n      .on(\"click\", \"[data-ax6ui-uploader-dropzone]\", e => {\n        let $target = jQuery(e.currentTarget);\n        if ($target.parents('[data-ax6ui-uploader-uploaded-item]').length == 0 && !$target.attr('data-ax6ui-uploader-uploaded-item')) {\n          if (e.currentTarget == e.target || $.contains(e.currentTarget, e.target)) {\n            if (U.isFunction(this.config.dropZone.onclick)) {\n              this.config.dropZone.onclick.call({\n                self: this\n              });\n            } else {\n              this.$inputFile.trigger(\"click\");\n            }\n          }\n        }\n      });\n\n    this.$dropZone.get(0).addEventListener('dragover', e => {\n      U.stopEvent(e);\n\n      if (U.isFunction(this.config.dropZone.ondragover)) {\n        this.config.dropZone.ondragover.call({\n          self: this\n        });\n      }\n      else {\n        this.$dropZone.addClass(\"dragover\");\n      }\n\n    }, false);\n\n    this.$dropZone.get(0).addEventListener('dragleave', e => {\n      U.stopEvent(e);\n\n      if (U.isFunction(this.config.dropZone.ondragover)) {\n        this.config.dropZone.ondragout.call({\n          self: this\n        });\n      }\n      else {\n        this.$dropZone.removeClass(\"dragover\");\n      }\n\n    }, false);\n\n    this.$dropZone.get(0).addEventListener('drop', e => {\n      U.stopEvent(e);\n\n      if (U.isFunction(this.config.dropZone.ondrop)) {\n        this.config.dropZone.ondrop.call({\n          self: this\n        });\n      }\n      else {\n        this.$dropZone.removeClass(\"dragover\");\n      }\n\n      bound_onSelectFile.call(this, e || window.event);\n    }, false);\n\n  }\n};\nconst bound_alignLayout = function (_TF) {\n  // 상황이 좋지 않은경우 (만약 버튼 클릭으로 input file click이 되지 않는 다면 z-index값을 높여서 버튼위를 덮는다.)\n  if (_TF) {\n    if (!info.supportFileApi) {\n      // ie9에서 inputFile을 직접 클릭하지 않으면 submit 오류발생함. submit access denied\n      // 그래서 버튼위에 inputFile을 올려두어야 함. (position값을 이용하면 편하지만..)\n      // 그런데 form을 안에두면 또 다른 이중폼 문제 발생소지 ㅜㅜ 불가피하게 버튼의 offset 값을 이용.\n      let box = this.$fileSelector.offset();\n      box.width = this.$fileSelector.outerWidth();\n      box.height = this.$fileSelector.outerHeight();\n      this.$inputFile.css(box);\n    }\n  } else {\n    this.$inputFile.css({\n      left: -1000, top: -1000\n    });\n  }\n}\nconst bound_alignProgressBox = function (append) {\n  const _alignProgressBox = function () {\n    let $window = jQuery(window), $body = jQuery(document.body);\n    let pos = {}, positionMargin = 6,\n      dim = {}, pickerDim = {},\n      pickerDirection;\n\n    // this.config.viewport.selector\n\n    pos = (this.$progressBox.parent().get(0) == this.$target.get(0)) ? this.$fileSelector.position() : this.$fileSelector.offset();\n    dim = {\n      width: this.$fileSelector.outerWidth(),\n      height: this.$fileSelector.outerHeight()\n    };\n    pickerDim = {\n      winWidth: Math.max($window.width(), $body.width()),\n      winHeight: Math.max($window.height(), $body.height()),\n      width: this.$progressBox.outerWidth(),\n      height: this.$progressBox.outerHeight()\n    };\n\n    // picker css(width, left, top) & direction 결정\n    if (!this.config.progressBoxDirection || this.config.progressBoxDirection === \"\" || this.config.progressBoxDirection === \"auto\") {\n      // set direction\n      pickerDirection = \"top\";\n      if (pos.top - pickerDim.height - positionMargin < 0) {\n        pickerDirection = \"top\";\n      } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n        pickerDirection = \"bottom\";\n      }\n    } else {\n      pickerDirection = this.config.progressBoxDirection;\n    }\n\n    if (append) {\n      this.$progressBox\n        .addClass(\"direction-\" + pickerDirection);\n    }\n\n    let positionCSS = (function () {\n      let css = {left: 0, top: 0};\n      switch (pickerDirection) {\n        case \"top\":\n          css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n          css.top = pos.top + dim.height + positionMargin;\n          break;\n        case \"bottom\":\n          css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n          css.top = pos.top - pickerDim.height - positionMargin;\n          break;\n        case \"left\":\n          css.left = pos.left + dim.width + positionMargin;\n          css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n          break;\n        case \"right\":\n          css.left = pos.left - pickerDim.width - positionMargin;\n          css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n          break;\n      }\n      return css;\n    })();\n\n    {\n      if (pickerDirection == \"top\" || pickerDirection == \"bottom\") {\n        if (positionCSS.left < 0) {\n          positionCSS.left = positionMargin;\n          this.$progressBoxArrow.css({left: (pos.left + dim.width / 2) - positionCSS.left});\n        } else if (positionCSS.left + pickerDim.width > pickerDim.winWidth) {\n          positionCSS.left = pickerDim.winWidth - pickerDim.width - positionMargin;\n          this.$progressBoxArrow.css({left: (pos.left + dim.width / 2) - positionCSS.left});\n        }\n      }\n    }\n\n    this.$progressBox\n      .css(positionCSS);\n  };\n\n  this.$progressBox.css({top: -999});\n\n  if (append) {\n    // progressBox를 append 할 타겟 엘리먼트 펀단 후 결정.\n    (function () {\n      if (this.config.viewport) {\n        return jQuery(this.config.viewport.selector);\n      } else {\n        return this.$target;\n      }\n    }).call(this).append(this.$progressBox);\n\n    // progressBox 버튼에 이벤트 연결.\n    this.$progressBox\n      .off(\"click.ax5uploader\")\n      .on(\"click.ax5uploader\", \"button\", e => {\n        let act = e.currentTarget.getAttribute(\"data-pregressbox-btn\");\n        let processor = {\n          \"upload\": function () {\n            this.send();\n          },\n          \"abort\": function () {\n            this.abort();\n          }\n        };\n        if (processor[act]) processor[act].call(this);\n      });\n  }\n\n  setTimeout(() => {\n    _alignProgressBox.call(this);\n  });\n};\nconst bound_openProgressBox = function () {\n  this.$progressBox.removeClass(\"destroy\");\n  this.$progressUpload.removeAttr(\"disabled\");\n  this.$progressAbort.removeAttr(\"disabled\");\n\n  // apend & align progress box\n  bound_alignProgressBox.call(this, \"append\");\n\n  // state change\n  bound_onStateChanged.call(this, {\n    self: this,\n    state: \"open\"\n  });\n};\nconst bound_closeProgressBox = function () {\n  this.$progressBox.addClass(\"destroy\");\n  setTimeout(() => {\n    this.$progressBox\n      .remove();\n  }, this.config.animateTime);\n};\nconst bound_startUpload = function () {\n  const processor = {\n    \"html5\"() {\n\n      let uploadFile = this.selectedFiles.shift();\n      if (!uploadFile) {\n        // 업로드 종료\n        bound_uploadComplete();\n        return this;\n      }\n\n      if (uploadFile[0]) uploadFile = uploadFile[0];\n\n      let formData = new FormData();\n      //서버로 전송해야 할 추가 파라미터 정보 설정\n\n      this.$target.find(\"input\").each(function () {\n        formData.append(this.name, this.value);\n      });\n      // 파일 아이템 추가\n      formData.append(this.config.form.fileName, uploadFile);\n\n      this.xhr = new XMLHttpRequest();\n      this.xhr.open(\"post\", this.config.form.action, true);\n      this.xhr.onload = function (e) {\n        let res = e.target.response;\n        try {\n          if (typeof res == \"string\") res = U.parseJson(res);\n        }\n        catch (e) {\n          return false;\n        }\n        if (this.config.debug) console.log(res);\n\n        if (res.error) {\n          if (this.config.debug) console.log(res.error);\n          if (U.isFunction(this.config.onuploaderror)) {\n            this.config.onuploaderror.call({\n              self: this,\n              error: res.error\n            }, res);\n          }\n          self.send();\n          return false;\n        }\n\n        bound_uploaded(res);\n        self.send();\n      };\n      this.xhr.upload.onprogress = function (e) {\n        // console.log(e.loaded, e.total);\n        bound_updateProgressBar(e);\n        if (U.isFunction(this.config.onprogress)) {\n          this.config.onprogress.call({\n            loaded: e.loaded,\n            total: e.total\n          }, e);\n        }\n      };\n      this.xhr.send(formData);  // multipart/form-data\n\n    },\n    \"form\"() {\n\n      /// i'm busy\n      this.__uploading = true;\n\n      // 폼과 iframe을 만들어 페이지 아래에 삽입 후 업로드\n      let $iframe = jQuery('<iframe src=\"javascript:false;\" name=\"ax5uploader-' + this.instanceId + '-iframe\" style=\"display:none;\"></iframe>');\n      jQuery(document.body).append($iframe);\n\n      // onload 이벤트 핸들러\n      // action에서 파일을 받아 처리한 결과값을 텍스트로 출력한다고 가정하고 iframe의 내부 데이터를 결과값으로 callback 호출\n      $iframe.load(function () {\n        let doc = this.contentWindow ? this.contentWindow.document : (this.contentDocument ? this.contentDocument : this.document),\n          root = doc.documentElement ? doc.documentElement : doc.body,\n          result = root.textContent ? root.textContent : root.innerText,\n          res;\n\n        try {\n          res = JSON.parse(result);\n        }\n        catch (e) {\n          res = {\n            error: \"Syntax error\",\n            body: result\n          };\n        }\n\n        if (this.config.debug) console.log(res);\n        if (res.error) {\n          console.log(res);\n        }\n        else {\n          bound_uploaded(res);\n          $iframe.remove();\n\n          setTimeout(function () {\n            bound_uploadComplete();\n          }, 300);\n        }\n      });\n\n      this.$inputFileForm\n        .attr(\"target\", 'ax5uploader-' + this.instanceId + '-iframe')\n        .attr(\"action\", this.config.form.action)\n        .submit();\n\n      this.selectedFilesTotal = 1;\n      bound_updateProgressBar({\n        loaded: 1,\n        total: 1\n      });\n    }\n  };\n\n  if (this.__uploading === false) {\n    // 전체 파일 사이즈 구하기\n    let filesTotal = 0;\n    this.selectedFiles.forEach(function (n) {\n      filesTotal += n.size;\n    });\n    this.selectedFilesTotal = filesTotal;\n    this.__loaded = 0;\n\n    this.__uploading = true; // 업로드 시작 상태 처리\n    this.$progressUpload.attr(\"disabled\", \"disabled\");\n    this.$progressAbort.removeAttr(\"disabled\");\n  }\n\n  processor[info.supportFileApi ? \"html5\" : \"form\"].call(this);\n\n};\nconst bound_updateProgressBar = function (e) {\n  this.__loaded += e.loaded;\n  this.$progressBar.css({width: U.number(this.__loaded / this.selectedFilesTotal * 100, {round: 2}) + '%'});\n  if (e.lengthComputable) {\n    if (e.loaded >= e.total) {\n\n    }\n  }\n};\nconst bound_uploaded = function (res) {\n  if (this.config.debug) console.log(res);\n  this.uploadedFiles.push(res);\n  bound_repaintUploadedBox(); // 업로드된 파일 출력\n\n  if (U.isFunction(this.config.onuploaded)) {\n    this.config.onuploaded.call({\n      self: this\n    }, res);\n  }\n};\nconst bound_uploadComplete = function () {\n  this.__uploading = false; // 업로드 완료 상태처리\n  this.$progressUpload.removeAttr(\"disabled\");\n  this.$progressAbort.attr(\"disabled\", \"disabled\");\n\n  if (this.config.progressBox) {\n    bound_closeProgressBox.call(this);\n  }\n  if (U.isFunction(this.config.onuploadComplete)) {\n    this.config.onuploadComplete.call({\n      self: this\n    });\n  }\n  // update uploadedFiles display\n\n  /// reset inputFile\n  bound_attachFileTag.call(this);\n};\nconst bound_cancelUpload = function () {\n\n  let processor = {\n    \"html5\": function () {\n      if (this.xhr) {\n        this.xhr.abort();\n      }\n    },\n    \"form\": function () {\n\n    }\n  };\n\n  this.__uploading = false; // 업로드 완료 상태처리\n  this.$progressUpload.removeAttr(\"disabled\");\n  this.$progressAbort.attr(\"disabled\", \"disabled\");\n\n  processor[info.supportFileApi ? \"html5\" : \"form\"].call(this);\n\n  if (this.config.progressBox) {\n    bound_closeProgressBox.call(this);\n  }\n\n  //this.$inputFile.val(\"\");\n  /// reset inputFile\n  bound_attachFileTag.call(this);\n\n  if (this.config.debug) console.log(\"cancelUpload\");\n  // update uploadedFiles display\n};\nconst bound_repaintUploadedBox = function () {\n  // uploadedBox 가 없다면 아무일도 하지 않음.\n  // onuploaded 함수 이벤트를 이용하여 개발자가 직접 업로드디 박스를 구현 한다고 이해 하자.\n  if (this.$uploadedBox === null) return this;\n\n  this.$uploadedBox.html(\n    mustache.render(tmpl.upoadedBox.call(this, this.config.uploadedBox.columnKeys), {\n      uploadedFiles: this.uploadedFiles,\n      icon: this.config.uploadedBox.icon,\n      lang: this.config.uploadedBox.lang,\n      supportFileApi: !!info.supportFileApi\n    })\n  );\n  this.$uploadedBox.find(\"img\").on(\"error\", function () {\n    //this.src = \"\";\n    $(this).parent().addClass(\"no-image\");\n  });\n\n};\nconst bound_attachFileTag = function () {\n  if (this.$inputFile && this.$inputFile.get(0)) {\n    this.$inputFile.remove();\n  }\n  if (this.$inputFileForm && this.$inputFileForm.get(0)) {\n    this.$inputFileForm.remove();\n  }\n\n  this.$inputFile = jQuery(UPLOADER.tmpl.get.call(this, \"inputFile\", {\n    instanceId: this.instanceId,\n    multiple: this.config.multiple,\n    accept: this.config.accept,\n    name: this.config.form.fileName\n  }));\n\n  if (info.supportFileApi) {\n    jQuery(document.body).append(this.$inputFile);\n  } else {\n    this.$fileSelector.attr(\"tabindex\", -1);\n    this.$inputFileForm = jQuery(UPLOADER.tmpl.get.call(this, \"inputFileForm\", {\n      instanceId: this.instanceId\n    }));\n\n    this.$inputFileForm.append(this.$inputFile);\n    jQuery(document.body).append(this.$inputFileForm);\n  }\n\n  this.$inputFile\n    .off(\"change.ax5uploader\")\n    .on(\"change.ax5uploader\", e => {\n      bound_onSelectFile.call(this, e);\n    });\n};\n\n/**\n * @class\n */\nclass AX6UIUploader extends AX6UICore {\n  /**\n   * @constructor\n   * @param config\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @member {JSON}\n     * @param config\n     *\n     */\n    this.config = {\n      clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n      theme: 'default', // theme of uploader\n      lang: { // 업로더 버튼 랭귀지 설정\n        \"upload\": \"Upload\",\n        \"abort\": \"Abort\"\n      },\n      uploadedBox: {\n        columnKeys: {\n          name: \"name\",\n          type: \"type\",\n          size: \"size\",\n          uploadedName: \"uploadedName\",\n          uploadedPath: \"uploadedPath\",\n          downloadPath: \"downloadPath\",\n          previewPath: \"previewPath\",\n          thumbnail: \"thumbnail\"\n        }\n      },\n      animateTime: 100,\n      accept: \"*/*\", // 업로드 선택 파일 타입 설정\n      multiple: false, // 다중 파일 업로드\n      manualUpload: false, // 업로딩 시작 수동처리 여부\n      progressBox: true // 업로드 프로그래스 박스 사용여부 false 이면 업로드 진행바를 표시 하지 않습니다. 개발자가 onprogress 함수를 이용하여 직접 구현 해야 합니다.\n    };\n    jQuery.extend(true, this.config, config);\n\n    // 멤버 변수 초기화\n    this.defaultBtns = {\n      \"upload\": {label: this.config.lang[\"upload\"], theme: \"btn-primary\"},\n      \"abort\": {label: this.config.lang[\"abort\"], theme: this.config.theme}\n    };\n\n    /// 업로드된 파일 큐\n    this.uploadedFiles = [];\n    /// 업로더 타겟\n    this.$target = null;\n    /// 업로드된 파일 정보들의 input 태그를 담아두는 컨테이너\n    this.$inputContainer = null;\n    /// input file 태그\n    this.$inputFile = null;\n    this.$inputFileForm = null;\n    /// 파일 선택버튼\n    this.$fileSelector = null;\n    /// 파일 드랍존\n    this.$dropZone = null;\n    /// 파일 목록 표시박스\n    this.$uploadedBox = null;\n\n    this.__uploading = false;\n    this.selectedFiles = [];\n    this.selectedFilesTotal = 0;\n    this.__loaded = 0;\n\n    if (typeof config !== \"undefined\") this.init();\n  }\n\n  /**\n   * @method\n   */\n  init() {\n    this.onStateChanged = this.config.onStateChanged;\n    delete this.config.onStateChanged;\n\n    if (this.config.target) {\n      this.$target = jQuery(this.config.target);\n\n      // 파일 드랍존은 옵션 사항.\n      if (this.config.dropZone && this.config.dropZone.target && info.supportFileApi) {\n        this.$dropZone = jQuery(this.config.dropZone.target);\n        this.$dropZone\n          .attr(\"data-ax6ui-uploader-dropzone\", this.instanceId);\n      }\n\n      // uploadedBox 옵션 사항\n      if (this.config.uploadedBox && this.config.uploadedBox.target) {\n        this.$uploadedBox = jQuery(this.config.uploadedBox.target);\n      }\n\n      // target attribute data\n      (function (data) {\n        if (U.isObject(data) && !data.error) {\n          this.config = jQuery.extend(true, {}, this.config, data);\n        }\n      }).call(this, U.parseJson(this.$target.attr(\"data-ax6ui-uploader-config\"), true));\n\n\n      // detect element\n      /// fileSelector 수집\n      this.$fileSelector = this.$target.find('[data-ax6ui-uploader-button=\"selector\"]');\n      if (this.$fileSelector.length === 0) {\n        console.log(info.getError(\"ax6ui-uploader\", \"402\", \"can not find file selector\"));\n        return this;\n      }\n\n      // input file 추가\n      bound_attachFileTag.call(this);\n\n      // btns 확인\n      this.config.btns = jQuery.extend({}, this.defaultBtns, this.config.btns);\n\n      this.$progressBox = jQuery(tmpl.progressBox.call(this), {\n        instanceId: this.instanceId,\n        btns: this.config.btns\n      });\n      this.$progressBar = this.$progressBox.find('[role=\"progressbar\"]');\n      this.$progressBoxArrow = this.$progressBox.find(\".ax-progressbox-arrow\");\n      this.$progressUpload = this.$progressBox.find('[data-pregressbox-btn=\"upload\"]');\n      this.$progressAbort = this.$progressBox.find('[data-pregressbox-btn=\"abort\"]');\n\n      // file API가 지원되지 않는 브라우저는 중지 기능 제공 못함.\n      if (!info.supportFileApi) {\n        this.$progressAbort.hide();\n      }\n      // 파일버튼 등에 이벤트 연결.\n      bound_bindEvent.call(this);\n\n      bound_repaintUploadedBox.call(this);\n\n    }\n    // init 호출 여부\n    this.initOnce();\n  }\n\n  /**\n   * @method\n   */\n  initOnce() {\n    if (this.initialized) return this;\n    this.initialized = true;\n  }\n\n\n  /**\n   * @method\n   * @returns {AX6UIUploader}\n   *\n   */\n  send() {\n    // 업로드 시작\n    if (U.isFunction(this.config.validateSelectedFiles)) {\n      let that = {\n        self: this,\n        uploadedFiles: this.uploadedFiles,\n        selectedFiles: this.selectedFiles\n      };\n      if (!this.config.validateSelectedFiles.call(that, that)) {\n        bound_cancelUpload.call(this);\n        return false;\n        // 전송처리 안함.\n      }\n    }\n\n    bound_startUpload.call(this);\n    return this;\n  }\n\n  /**\n   * @method\n   * @returns {AX6UIUploader}\n   */\n  abort() {\n    if (!info.supportFileApi) {\n      alert(\"This browser not supported abort method\");\n      return this;\n    }\n    bound_cancelUpload.call(this);\n    return this;\n  }\n\n  /**\n   * @method\n   * @param {Array} _files - JSON formatting can all be overridden in columnKeys.\n   * @returns {AX6UIUploader}\n   * @example\n   * ```js\n   * $.ajax({\n   *     url: \"api/fileListLoad.php\",\n   *     success: function (res) {\n   *         // res JSON format\n   *         // [{\n   *         // \"name\": \"barcode-scan-ani.gif\",\n   *         // \"saveName\": \"barcode-scan-ani.gif\",\n   *         // \"type\": \"file\",\n   *         // \"fileSize\": \"3891664\",\n   *         // \"uploadedPath\": \"/ax5ui-uploader/test/api/files\",\n   *         // \"thumbUrl\": \"\"\n   *         // }]\n   *         upload.setUploadedFiles(res);\n   *     }\n   * });\n   * ```\n   */\n  setUploadedFiles(_files) {\n    if (U.isArray(_files)) {\n      this.uploadedFiles = _files;\n    }\n    if (U.isString(_files)) {\n      try {\n        this.uploadedFiles = JSON.parse(_files);\n      }\n      catch (e) {\n\n      }\n    }\n\n    bound_repaintUploadedBox();\n    return this;\n  }\n\n  /**\n   * clear uploadedFiles\n   * @method\n   * @returns {AX6UIUploader}\n   */\n  clear() {\n    this.setUploadedFiles([]);\n    return this;\n  }\n\n  /**\n   * Removes the object corresponding to the index passed to the argument from uploadedFiles.\n   * @method\n   * @param {Number} _index\n   * @returns {AX6UIUploader}\n   * @example\n   * ```js\n   * // The actual file is not deleted\n   * upload.removeFile(fileIndex);\n   * ```\n   */\n  removeFile(_index) {\n    if (!isNaN(Number(_index))) {\n      this.uploadedFiles.splice(_index, 1);\n    }\n    bound_repaintUploadedBox();\n    return this;\n  }\n\n  /**\n   * Empty uploadedFiles\n   * @method\n   * @returns {AX6UIUploader}\n   * @example\n   * ```js\n   *\n   * ```\n   */\n  removeFileAll() {\n    this.uploadedFiles = [];\n    bound_repaintUploadedBox();\n    return this;\n  }\n\n  /**\n   * @method\n   * @returns {Boolean}\n   */\n  selectFile() {\n    if (info.supportFileApi) {\n      this.$inputFile.trigger(\"click\");\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default AX6UIUploader;"]}