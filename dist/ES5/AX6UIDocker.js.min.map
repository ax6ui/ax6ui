{"version":3,"sources":["AX6UIDocker.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Util","debouncer","resizeDebouncedFn","panelDebouncedFn","tmpl","stack_panel","columnKeys","data","labelDirection","panel_label","fireEvent","event","eventProcessor","e","this","onResize","that","self","resizer","target","resizedDom","prev","next","call","eventName","getPanelId","panelId","defaultModule","init","container","state","html","name","active","deactive","destroy","getPanelPath","parent","pIndex","paths","panelPath","push","getPanel","_panelPath","path","concat","_AX6Util2","default","isArray","split","forEach","n","_path","join","getPanelParent","_panel","substr","lastIndexOf","Function","setPanel","_value","replace","getMousePosition","mouseObj","originalEvent","changedTouches","clientX","pageY","controlPanel","_control","_callback","_this","moduleState","_jqmin2","extend","$element","$item","processor","moduleContainer","builded","module","moduleName","modules","addClass","$pane","$label","get","clientWidth","scrollWidth","scrollLeft","position","left","removeClass","remove","arrangePanel","controlType","panel","isFunction","cfg","control","after","result","runProcessor","repaintPanels","appendProcessor","stack","$parent","myself","$dom","DOCKER","id","activeIndex","color","borderColor","instanceId","hasLabelColor","isNothing","disableClosePanel","icons","disableDragPanel","P","panels","panelIndex","_pIndex","type","attr","append","find","flexGrow","resizeHandle","column","$root","$target","off","on","parents","stopEvent","$clickedLabel","pane","changeActiveStackPanel","$","openStackPanelMore","panelTabDragEvent","xvar","mousePosition","resizerIndex","datas","resizerType","resizer$dom","resizerParent$dom","resizerNextGrow","number","css","resizerCanvasHeight","innerHeight","width","panelResizerEvent","height","alignStackPane","dragPanel","undefined","length","dragOverHorizontal","dragOverVertical","dragover","$dragoverDom","box","dragoverDom","dragger","mouse","offset","removeAttr","halfWidth","draggerProcessor","threeQuarterWidth","clientY","threeQuarterHeight","top","left-top","right-top","center-top","left-middle","right-middle","left-bottom","right-bottom","isDrop","appendType","appendPanel","da_grow","__da","document","body","resizerLived","resizerCanvasWidth","round","flex-grow","resizerPrevGrow","prevPane","nextPane","$prevPanel","$nextPanel","p","panePath","label","onClick","menu","stackPane","$stackPane","index","$this","setConfig","items","menuItems","bind","popup","each","newObj","_p","row","animateTime","more","config","_classCallCheck","AX6UIDocker","_this2","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","theme","close","resizeDebounceTime","panelDebounceTime","onStateChanged","onLoad","onDataChanged","initialized","throttle","fn","debounce","initOnce","window","_panels","isObject","addPath","panelProcessor","panelsDeactive","_pane","copyPanel","splice","parentPane","parentPath","stack-right","Number","_panelIndex","addPanel","_addType","addProcessor","row-left","column-top","column-bottom","_addPath","a","setPanels","callback","_appendType","copiedPanel","addType","removePanelPath","_appendPath","appendPanelIndex","findPanel","_condition","i","findResult","isString","activePanelPath","b"],"mappings":"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","file":"AX6UIDocker.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport U from \"./AX6Util\";\n/** ~~~~~~~~~~~~~~~~~~ end of import  ~~~~~~~~~~~~~~~~~~~~ **/\n\n\nlet debouncer = {\n  resizeDebouncedFn: null,\n  panelDebouncedFn: null\n};\n\nlet tmpl = {\n  stack_panel(columnKeys, data) {\n    if (data.labelDirection === \"bottom\") {\n      return `<div data-ax6ui-docker-pane=\"{{id}}\" data-ax6ui-docker-label-direction=\"{{labelDirection}}\" data-ax6ui-docker-path=\"{{panelPath}}\" style=\"flex-grow: {{#flexGrow}}{{.}}{{/flexGrow}}{{^flexGrow}}1{{/flexGrow}};\">\n    <div data-ax6ui-docker-pane-item-views=\"{{id}}\"></div>\n    <ul data-ax6ui-docker-pane-tabs=\"{{id}}\" data-ax6ui-docker-id=\"{{id}}\" data-ax6ui-docker-path=\"{{panelPath}}\"></ul>\n    <div data-ax6ui-docker-pane-tabs-more=\"{{id}}\">{{{icons.more}}}</div>\n</div>`;\n    } else {\n      return `<div data-ax6ui-docker-pane=\"{{id}}\" data-ax6ui-docker-label-direction=\"{{labelDirection}}\" data-ax6ui-docker-path=\"{{panelPath}}\" style=\"flex-grow: {{#flexGrow}}{{.}}{{/flexGrow}}{{^flexGrow}}1{{/flexGrow}};\">\n    <ul data-ax6ui-docker-pane-tabs=\"{{id}}\" data-ax6ui-docker-id=\"{{id}}\" data-ax6ui-docker-path=\"{{panelPath}}\"></ul>\n    <div data-ax6ui-docker-pane-tabs-more=\"{{id}}\">{{{icons.more}}}</div>\n    <div data-ax6ui-docker-pane-item-views=\"{{id}}\"></div>\n</div>`;\n    }\n  },\n  panel_label() {\n    return `<li data-ax6ui-docker-pane-tab=\"{{pIndex}}\" data-ax6ui-docker-id=\"{{id}}\" data-ax6ui-docker-path=\"{{panelPath}}\" class=\"{{#hasLabelColor}}hasLabelColor{{/hasLabelColor}}\">\n    <div class=\"label-icon\" style=\"{{#color}}background: {{color}};{{/color}}{{#borderColor}}border-color: {{borderColor}};{{/borderColor}}\"></div>\n    <div class=\"title\">{{{name}}}</div>\n    {{^disableClosePanel}}<div class=\"close-icon\">{{{icons.close}}}</div>{{/disableClosePanel}}\n</li><li class=\"pane-tab-margin\"></li>`;\n  }\n};\n\n/**\n * @private {Function}\n * @param event\n * @returns {AX6UIDocker}\n */\nconst fireEvent = function (event) {\n  const eventProcessor = {\n    \"resize\"(e) {\n      if (this.onResize) {\n\n        debouncer.resizeDebouncedFn((function () {\n          let that = {\n            self: this,\n            resizer: e.target,\n            resizedDom: [e.target.prev(), e.target.next()]\n          };\n          this.onResize.call(that, that);\n        }).bind(this));\n\n      }\n    }\n  };\n\n  if (event.eventName in eventProcessor) {\n    eventProcessor[event.eventName].call(this, event);\n  }\n\n  return this;\n};\n\nconst getPanelId = function () {\n  return this.panelId++;\n};\n\n/**\n * defaultModule은 패널의 모듈이 정의되지 않은 경우를 위해 준비된 오브젝트\n */\nconst defaultModule = {\n  init(container, state) {\n    container[\"$element\"].html(state.name);\n  },\n  active(container, state) {\n\n  },\n  deactive(container, state) {\n\n  },\n  destroy(container, state) {\n\n  }\n};\n\n/**\n * 부모패널과 패널인덱스 값으로 패널 패스를 구합니다.\n * @private {Function}\n * @param parent\n * @param pIndex\n * @returns {string}\n */\nconst getPanelPath = function (parent, pIndex) {\n  let paths = [];\n  if (parent && typeof parent.panelPath !== \"undefined\") {\n    paths.push(parent.panelPath);\n  }\n\n  paths.push('panels[' + (pIndex || 0) + ']');\n  return paths.join(\".\");\n};\n\n/**\n * 패널패스를 이용하여 패널을 가져옵니다\n * @private {Function}\n * @param _panelPath\n * @returns {*}\n */\nconst getPanel = function (_panelPath) {\n  let path  = [],\n      _path = (U.isArray(_panelPath)) ? [].concat(_panelPath) : [].concat(_panelPath.split(/[\\.\\[\\]]/g));\n\n  _path.forEach(function (n) {\n    if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n  });\n\n  try {\n    return (Function(\"\", \"return this\" + path.join('') + \";\")).call(this);\n  }\n  catch (e) {\n    return;\n  }\n};\n\n/**\n * 패널을 이용하여 패널의 부모 패널을 가져옵니다\n * @private {Function}\n * @param _panel\n */\nconst getPanelParent = function (_panel) {\n  try {\n    let _path = _panel.panelPath.substr(0, _panel.panelPath.lastIndexOf(\".\"));\n    return (Function(\"\", \"return this.\" + _path + \";\")).call(this);\n  }\n  catch (e) {\n    return;\n  }\n};\n\n/**\n * 패널패스를 이용하여 패널오브젝트에 값을 부여합니다.\n * @private {Function}\n * @param _panelPath\n * @param _value\n * @returns {*}\n */\nconst setPanel = function (_panelPath, _value) {\n  let path  = [],\n      _path = (U.isArray(_panelPath)) ? [].concat(_panelPath) : [].concat(_panelPath.split(/[\\.\\[\\]]/g));\n\n  _path.forEach(function (n) {\n    if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n  });\n\n  return (Function(\"val\", \"return this\" + path.join('') + \" = val;\")).call(this, _value);\n};\n\n/**\n * get mouse position\n * @private {Function}\n * @param e\n * @returns {{clientX, clientY}}\n */\nconst getMousePosition = (e) => {\n  let mouseObj, originalEvent = (e.originalEvent) ? e.originalEvent : e;\n  mouseObj = ('changedTouches' in originalEvent && originalEvent.changedTouches) ? originalEvent.changedTouches[0] : originalEvent;\n  // clientX, Y 쓰면 스크롤에서 문제 발생\n  return {\n    clientX: mouseObj.pageX,\n    clientY: mouseObj.pageY\n  }\n};\n\n/**\n * 패널의 모듈이 초기화, 활성화, 비활성, 제거 되는 일들을 제어하는 함수.\n * 모든 컨트롤은 실행되기전에 사용자가 정의한 control.before 함수의 결과에 따라 실행 여부를 결정합니다. 사용자가 control.before를 정의하지 않으면 무조건 실행합니다.\n * @private {Function}\n * @param {Object} _panel\n * @param {String} _control - \"init\",\"active\",\"deactive\",\"destroy\"\n */\nconst controlPanel = function (_panel, _control, _callback) {\n  let moduleState     = jQuery.extend(_panel.moduleState, {\n        name: _panel.name\n      }),\n      moduleContainer = {\n        '$element': _panel.$item\n      },\n      module;\n\n  let processor = {\n    init: () => {\n      _panel.builded = true;\n      module = (_panel.moduleName in this.modules && 'init' in this.modules[_panel.moduleName]) ? this.modules[_panel.moduleName] : defaultModule;\n      module.init(moduleContainer, moduleState);\n    },\n    active: () => {\n      _panel.active = true;\n      _panel.$label.addClass(\"active\");\n      _panel.$item.addClass(\"active\");\n\n      let $pane = _panel.$label.parent();\n      if ($pane.get(0) && $pane.get(0).clientWidth !== $pane.get(0).scrollWidth) {\n        $pane.animate({scrollLeft: _panel.$label.position().left}, 300);\n      }\n\n      module = (_panel.moduleName in this.modules && 'active' in this.modules[_panel.moduleName]) ? this.modules[_panel.moduleName] : defaultModule;\n      module.active(moduleContainer, moduleState);\n      $pane = null;\n    },\n    deactive: () => {\n      _panel.active = false;\n      _panel.$label.removeClass(\"active\");\n      _panel.$item.removeClass(\"active\");\n      module = (_panel.moduleName in this.modules && 'deactive' in this.modules[_panel.moduleName]) ? this.modules[_panel.moduleName] : defaultModule;\n      module.deactive(moduleContainer, moduleState);\n    },\n    destroy: () => {\n      module = (_panel.moduleName in this.modules && 'destroy' in this.modules[_panel.moduleName]) ? this.modules[_panel.moduleName] : defaultModule;\n      module.destroy(moduleContainer, moduleState);\n\n      // 패널 데이터 제거.\n      setPanel(_panel.panelPath, null);\n      // 현재 패널 정보를 검사하여 패널 정보를 재 구성합니다.\n      arrangePanel();\n    },\n    remove: () => {\n      module = (_panel.moduleName in this.modules && 'destroy' in this.modules[_panel.moduleName]) ? this.modules[_panel.moduleName] : defaultModule;\n      module.destroy(moduleContainer, moduleState);\n\n      // 패널 데이터 제거.\n      setPanel(_panel.panelPath, null);\n      // 현재 패널 정보를 검사하여 패널 정보를 재 구성합니다.\n      arrangePanel();\n    },\n  };\n\n  // 사용자정의 함수 control.before, control.after에 전달할 인자 = that\n  let that = {\n    panel: _panel,\n    controlType: _control\n  };\n\n  // 비동기 처리 상황에 대응하기 위해 runProcessor를 별도 처리\n  let runProcessor = () => {\n    processor[_control]();\n    module = null;\n\n    if (U.isFunction(cfg.control.after)) {\n      cfg.control.after.call(that, that);\n    }\n  };\n\n  if (processor[_control]) {\n    if (U.isFunction(cfg.control.before)) {\n      cfg.control.before.call(that, that, function (result) {\n        if (typeof result === \"undefined\") result = true;\n        if (result) runProcessor();\n\n        if (U.isFunction(_callback)) {\n          _callback(result);\n        }\n\n      });\n    }\n    else {\n      runProcessor();\n    }\n  }\n};\n\n/**\n * 패널들의 패널 데이터 구조에 맞게 다시 그리기\n */\nconst repaintPanels = function () {\n  const appendProcessor = {\n    stack($parent, parent, myself, pIndex) {\n\n      let $dom, activeIndex = -1;\n      myself.panelPath = getPanelPath(parent, pIndex);\n\n      $dom = jQuery(DOCKER.tmpl.get.call(this, \"stack-panel\", {\n        id: self.instanceId,\n        name: myself.name,\n        hasLabelColor: !U.isNothing(myself.color),\n        color: myself.color,\n        borderColor: myself.borderColor,\n        panelPath: myself.panelPath,\n        icons: cfg.icons,\n        labelDirection: myself.labelDirection || cfg.labelDirection,\n        disableClosePanel: cfg.disableClosePanel,\n        disableDragPanel: cfg.disableDragPanel,\n      }, {}));\n      $parent.append($dom);\n\n      if (U.isArray(myself.panels)) {\n        myself.panels.forEach(function (P, pIndex) {\n          if (P.active) activeIndex = pIndex;\n        });\n        if (activeIndex === -1) activeIndex = 0;\n        myself.panels[activeIndex].active = true;\n\n        myself.panels.forEach(function (P, _pIndex) {\n          P.panelIndex = _pIndex;\n          appendProcessor[P.type]($dom, myself, P, _pIndex);\n        });\n      }\n\n      $dom = null;\n      activeIndex = null;\n    },\n    panel($parent, parent, myself, pIndex) {\n      let $dom;\n      myself.panelPath = getPanelPath(parent, pIndex);\n      myself.$label = jQuery(DOCKER.tmpl.get.call(this, \"panel-label\", {\n        id: self.instanceId,\n        pIndex: pIndex,\n        name: myself.name,\n        hasLabelColor: !U.isNothing(myself.color),\n        color: myself.color,\n        borderColor: myself.borderColor,\n        panelPath: myself.panelPath,\n        icons: cfg.icons,\n        disableClosePanel: cfg.disableClosePanel,\n        disableDragPanel: cfg.disableDragPanel,\n      }, {}));\n\n      if (!myself.$item) {\n        myself.$item = jQuery('<div data-ax6ui-docker-pane-item=\"' + pIndex + '\" data-ax6ui-docker-id=\"' + self.instanceId + '\" data-ax6ui-docker-pane-id=\"' + getPanelId() + '\" data-ax6ui-docker-path=\"' + myself.panelPath + '\"></div>');\n      } else {\n        myself.$item.attr(\"data-ax6ui-docker-path\", myself.panelPath);\n        myself.$item.attr(\"data-ax6ui-docker-pane-item\", pIndex);\n      }\n\n      if (parent && parent.type == \"stack\") {\n        if (myself.active) {\n          if (!myself.builded) controlPanel(myself, \"init\");\n          controlPanel(myself, \"active\");\n        }\n        $parent.find('[data-ax6ui-docker-pane-tabs=\"' + self.instanceId + '\"]').append(myself.$label);\n        $parent.find('[data-ax6ui-docker-pane-item-views=\"' + self.instanceId + '\"]').append(myself.$item);\n      } else {\n        $dom = jQuery(DOCKER.tmpl.get.call(this, \"stack-panel\", {\n          id: self.instanceId,\n          name: myself.name,\n          hasLabelColor: !U.isNothing(myself.color),\n          color: myself.color,\n          borderColor: myself.borderColor,\n          panelPath: myself.panelPath,\n          flexGrow: myself.flexGrow,\n          icons: cfg.icons,\n          labelDirection: myself.labelDirection || cfg.labelDirection,\n          disableClosePanel: cfg.disableClosePanel,\n          disableDragPanel: cfg.disableDragPanel,\n        }, {}));\n\n        if (!myself.builded) controlPanel(myself, \"init\");\n        controlPanel(myself, \"active\");\n\n        $dom.find('[data-ax6ui-docker-pane-tabs=\"' + self.instanceId + '\"]').append(myself.$label);\n        $dom.find('[data-ax6ui-docker-pane-item-views=\"' + self.instanceId + '\"]').append(myself.$item);\n\n        $parent.append($dom);\n      }\n\n      $dom = null;\n    },\n    resizeHandle($parent, parent, myself, pIndex) {\n      let $dom = jQuery('<div data-ax6ui-docker-id=\"' + self.instanceId + '\" data-ax6ui-docker-resize-handle=\"' + parent.type + \"/\" + parent.panelPath + \"/\" + pIndex + '\"></div>');\n      $parent.append($dom);\n      $dom = null;\n    },\n    row($parent, parent, myself, pIndex) {\n      let $dom;\n      myself.panelPath = getPanelPath(parent, pIndex);\n      if (parent && parent.type == \"stack\") {\n        throw \"The 'stack' type child nodes are allowed only for the 'panel' type.\";\n      }\n      $dom = jQuery('<div data-ax6ui-docker-pane-axis=\"row\" data-ax6ui-docker-id=\"' + self.instanceId + '\" data-ax6ui-docker-path=\"' + myself.panelPath + '\" style=\"flex-grow: ' + (myself.flexGrow || 1) + ';\"></div>');\n      $parent.append($dom);\n\n      if (U.isArray(myself.panels)) {\n        myself.panels.forEach(function (P, _pIndex) {\n          if (_pIndex > 0) appendProcessor[\"resizeHandle\"]($dom, myself, P, _pIndex);\n          P.panelIndex = _pIndex;\n          appendProcessor[P.type]($dom, myself, P, _pIndex);\n        });\n      }\n\n      $dom = null;\n    },\n    column($parent, parent, myself, pIndex) {\n      let $dom;\n      myself.panelPath = getPanelPath(parent, pIndex);\n      if (parent && parent.type == \"stack\") {\n        throw \"The 'stack' type child nodes are allowed only for the 'panel' type.\";\n      }\n      $dom = jQuery('<div data-ax6ui-docker-pane-axis=\"column\" data-ax6ui-docker-id=\"' + self.instanceId + '\" data-ax6ui-docker-path=\"' + myself.panelPath + '\" style=\"flex-grow: ' + (myself.flexGrow || 1) + ';\"></div>');\n      $parent.append($dom);\n\n      if (U.isArray(myself.panels)) {\n        myself.panels.forEach(function (P, _pIndex) {\n          if (_pIndex > 0) appendProcessor[\"resizeHandle\"]($dom, myself, P, _pIndex);\n          P.panelIndex = _pIndex;\n          appendProcessor[P.type]($dom, myself, P, _pIndex);\n        });\n      }\n\n      $dom = null;\n    }\n  };\n\n  let $root = jQuery('<div data-ax6ui-docker-panes=\"' + this.instanceId + '\"></div>');\n  if (this.panels[0]) appendProcessor[this.panels[0].type]($root, null, this.panels[0], 0);\n  this.$target.html($root);\n\n  this.$target\n    .off(\"click.ax5docker-pane\")\n    .on(\"click.ax5docker-pane\", '[data-ax6ui-docker-id=\"' + self.instanceId + '\"][data-ax6ui-docker-pane-tab] .close-icon', function (e) {\n      self.removePanel($(this).parents('[data-ax6ui-docker-pane-tab]').attr(\"data-ax6ui-docker-path\"));\n      U.stopEvent(e);\n    })\n    .on(\"click.ax5docker-pane\", '[data-ax6ui-docker-id=\"' + self.instanceId + '\"][data-ax6ui-docker-pane-tab]', function (e) {\n      // pane, panelIndex 인자 변경.\n      let $clickedLabel = jQuery(this);\n      let pane = getPanel($clickedLabel.parents('[data-ax6ui-docker-pane]').attr(\"data-ax6ui-docker-path\"));\n      let panelIndex = $clickedLabel.attr(\"data-ax6ui-docker-pane-tab\");\n\n      if (!$clickedLabel.hasClass(\"active\")) {\n        changeActiveStackPanel(pane, panelIndex);\n      }\n\n      $clickedLabel = null;\n      pane = null;\n      panelIndex = null;\n      U.stopEvent(e);\n    })\n    .on(\"click.ax5docker-pane\", '[data-ax6ui-docker-pane-tabs-more=\"' + this.instanceId + '\"]', function (e) {\n      openStackPanelMore($(this).parents('[data-ax6ui-docker-pane]'), e);\n      U.stopEvent(e);\n    });\n\n  this.$target\n    .off(\"mousedown.ax5docker-pane-resize\")\n    .off(\"dragstart.ax5docker-pane-resize\")\n    .on(\"dragstart.ax5docker-pane-resize\", '[data-ax6ui-docker-id=\"' + self.instanceId + '\"][data-ax6ui-docker-pane-tab]', function (e) {\n      if (!cfg.disableDragPanel) {\n        panelTabDragEvent.on(this);\n      }\n    })\n    .on(\"mousedown.ax5docker-pane-resize\", '[data-ax6ui-docker-id=\"' + self.instanceId + '\"][data-ax6ui-docker-resize-handle]', function (e) {\n      let datas = this.getAttribute(\"data-ax6ui-docker-resize-handle\").split(/\\//g);\n\n      // panelResizerEvent.init\n      self.xvar.mousePosition = getMousePosition(e);\n      self.xvar.resizerType = datas[0];\n      self.xvar.resizerPath = datas[1];\n      self.xvar.resizerIndex = datas[2];\n      // 주변 패널들\n      self.xvar.resizer$dom = $(this);\n      self.xvar.resizerParent$dom = self.xvar.resizer$dom.parent();\n      self.xvar.resizerPrevGrow = U.number(self.xvar.resizer$dom.prev().css(\"flex-grow\"));\n      self.xvar.resizerNextGrow = U.number(self.xvar.resizer$dom.next().css(\"flex-grow\"));\n\n      if (self.xvar.resizerType == \"row\") {\n        //self.xvar.resizerCanvasWidth = self.xvar.resizerParent$dom.innerWidth();\n        self.xvar.resizerCanvasWidth = self.xvar.resizer$dom.prev().innerWidth() + self.xvar.resizer$dom.next().innerWidth() + self.xvar.resizer$dom.width();\n      } else {\n        //self.xvar.resizerCanvasHeight = self.xvar.resizerParent$dom.innerHeight();\n        self.xvar.resizerCanvasHeight = self.xvar.resizer$dom.prev().innerHeight() + self.xvar.resizer$dom.next().innerHeight() + self.xvar.resizer$dom.height();\n      }\n\n      panelResizerEvent.on(this);\n      U.stopEvent(e);\n    })\n    .on(\"dragstart.ax5docker-pane-resize\", '[data-ax6ui-docker-id=\"' + self.instanceId + '\"][data-ax6ui-docker-resize-handle]', function (e) {\n      U.stopEvent(e);\n      return false;\n    });\n\n  // stackPane tabs 스크롤처리\n  alignStackPane();\n  $root = null;\n};\n\n/**\n * repaintPanels이 작동할 때. 패널탭에 dragStart 이벤트를 연결합니다.\n * 발생된 이벤트가 panelTabDragEvent.on를 작동.\n */\nconst panelTabDragEvent = {\n  \"on\": (dragPanel) => {\n    if (this.panels[0] && this.panels[0].panels && this.panels[0].panels.length) {\n\n      this.xvar.dragger = {\n        dragPanel: dragPanel,\n        target: null,\n        dragOverVertical: null,\n        dragOverHorizontal: null,\n      };\n\n      this.$target\n        .on(\"dragover.ax5docker-\" + this.instanceId, '[data-ax6ui-docker-id=\"' + this.instanceId + '\"][data-ax6ui-docker-path]', function (e) {\n          // todo : dragover 구현\n          // console.log(\"dargover\", getMousePosition(e));\n          // console.log(e.target);\n          panelTabDragEvent.dragover(this, e);\n          U.stopEvent(e);\n        })\n        .on(\"drop.ax5docker-\" + this.instanceId, function (e) {\n          panelTabDragEvent.off(\"drop\");\n          U.stopEvent(e);\n        })\n        .on(\"dragend.ax5docker-\" + this.instanceId, function (e) {\n          panelTabDragEvent.off();\n          U.stopEvent(e);\n        });\n    }\n  },\n  \"dragover\": (dragoverDom, e) => {\n\n    let $dragoverDom = jQuery(dragoverDom),\n        box          = {},\n        mouse        = getMousePosition(e),\n        dragOverVertical,\n        dragOverHorizontal;\n\n    if (this.xvar.dragger.target == null || this.xvar.dragger.target.get(0) != $dragoverDom.get(0)) {\n      if (this.xvar.dragger.target) this.xvar.dragger.target.removeAttr(\"data-dropper\");\n\n      this.xvar.dragger.target = $dragoverDom;\n      this.xvar.dragger.dragOverVertical = null;\n      this.xvar.dragger.dragOverHorizontal = null;\n    }\n\n    box = $dragoverDom.offset();\n    box.width = $dragoverDom.width();\n    box.height = $dragoverDom.height();\n\n    if ($dragoverDom.attr(\"data-ax6ui-docker-pane-tab\")) {\n      let halfWidth = box.width / 2;\n      if (box.left <= mouse.clientX && (box.left + halfWidth) >= mouse.clientX) {\n        dragOverHorizontal = \"left\";\n      }\n      else if ((box.left + halfWidth) <= mouse.clientX && (box.left + halfWidth * 2) >= mouse.clientX) {\n        dragOverHorizontal = \"right\";\n      }\n      if (this.xvar.dragger.dragOverHorizontal != dragOverHorizontal && typeof dragOverHorizontal != \"undefined\") {\n        this.xvar.dragger.dragOverHorizontal = dragOverHorizontal;\n        const draggerProcessor = {\n          \"left\"($target) {\n            $target.attr(\"data-dropper\", \"left\");\n          },\n          \"right\"($target) {\n            $target.attr(\"data-dropper\", \"right\");\n          },\n        };\n        if (this.xvar.dragger.dragOverHorizontal in draggerProcessor) {\n          draggerProcessor[this.xvar.dragger.dragOverHorizontal](this.xvar.dragger.target);\n        }\n      }\n      halfWidth = null;\n    }\n    else if ($dragoverDom.attr(\"data-ax6ui-docker-pane-tabs\")) {\n      //this.xvar.dragger.dragOverVertical = \"center\";\n      this.xvar.dragger.dragOverHorizontal = \"last-child\";\n      this.xvar.dragger.target.attr(\"data-dropper\", \"true\");\n    }\n    else if ($dragoverDom.attr(\"data-ax6ui-docker-pane-item\")) {\n      // panel dragover 포지션 구하기\n      let threeQuarterHeight = box.height / 3;\n      let threeQuarterWidth = box.width / 3;\n\n      if (box.top <= mouse.clientY && (box.top + threeQuarterHeight) >= mouse.clientY) {\n        dragOverVertical = \"top\";\n      }\n      else if ((box.top + threeQuarterHeight) <= mouse.clientY && (box.top + threeQuarterHeight * 2) >= mouse.clientY) {\n        dragOverVertical = \"middle\";\n      }\n      else if ((box.top + threeQuarterHeight * 2) <= mouse.clientY && (box.top + threeQuarterHeight * 3) >= mouse.clientY) {\n        dragOverVertical = \"bottom\";\n      }\n\n      if (box.left <= mouse.clientX && (box.left + threeQuarterWidth) >= mouse.clientX) {\n        dragOverHorizontal = \"left\";\n      }\n      else if ((box.left + threeQuarterWidth) <= mouse.clientX && (box.left + threeQuarterWidth * 2) >= mouse.clientX) {\n        dragOverHorizontal = \"center\";\n      }\n      else if ((box.left + threeQuarterWidth * 2) <= mouse.clientX && (box.left + threeQuarterWidth * 3) >= mouse.clientX) {\n        dragOverHorizontal = \"right\";\n      }\n\n      if (this.xvar.dragger.dragOverVertical != dragOverVertical || this.xvar.dragger.dragOverHorizontal != dragOverHorizontal) {\n        this.xvar.dragger.dragOverVertical = dragOverVertical;\n        this.xvar.dragger.dragOverHorizontal = dragOverHorizontal;\n\n        var draggerProcessor = {\n          \"left-top\"($target) {\n            $target.attr(\"data-dropper\", \"left\");\n          },\n          \"right-top\"($target) {\n            $target.attr(\"data-dropper\", \"right\");\n          },\n          \"center-top\"($target) {\n            $target.attr(\"data-dropper\", \"top\");\n          },\n          \"left-middle\"($target) {\n            $target.attr(\"data-dropper\", \"left\");\n          },\n          \"right-middle\"($target) {\n            $target.attr(\"data-dropper\", \"right\");\n          },\n          \"center-middle\"($target) {\n            $target.attr(\"data-dropper\", \"center\");\n          },\n          \"left-bottom\"($target) {\n            $target.attr(\"data-dropper\", \"left\");\n          },\n          \"right-bottom\"($target) {\n            $target.attr(\"data-dropper\", \"right\");\n          },\n          \"center-bottom\"($target) {\n            $target.attr(\"data-dropper\", \"bottom\");\n          },\n        };\n        if (this.xvar.dragger.dragOverHorizontal + \"-\" + this.xvar.dragger.dragOverVertical in draggerProcessor) {\n          draggerProcessor[this.xvar.dragger.dragOverHorizontal + \"-\" + this.xvar.dragger.dragOverVertical](this.xvar.dragger.target);\n        }\n      }\n\n      threeQuarterHeight = null;\n      threeQuarterWidth = null;\n    }\n  },\n  \"off\": (isDrop) => {\n    if (isDrop) {\n      let dragPanel  = getPanel(this.xvar.dragger.dragPanel.getAttribute(\"data-ax6ui-docker-path\")),\n          appendType = [];\n\n      if (this.xvar.dragger.dragOverHorizontal) appendType.push(this.xvar.dragger.dragOverHorizontal);\n      if (this.xvar.dragger.dragOverVertical) appendType.push(this.xvar.dragger.dragOverVertical);\n\n      this.appendPanel(dragPanel, this.xvar.dragger.target.attr(\"data-ax6ui-docker-path\"), appendType);\n\n      dragPanel = null;\n      appendType = null;\n    }\n\n    alignStackPane();\n\n    this.$target\n      .off(\"dragover.ax5docker-\" + this.instanceId)\n      .off(\"drop.ax5docker-\" + this.instanceId)\n      .off(\"dragend.ax5docker-\" + this.instanceId);\n\n    this.xvar.dragger.target.removeAttr(\"data-dropper\");\n  }\n};\n\n/**\n * repaintPanels이 작동할 때. 리사이저에 mousedown 이벤트를 연결합니다.\n * 발생된 이벤트가 panelResizerEvent.on 을 작동시켜 리사이저를 움직이게 합니다\n */\nconst panelResizerEvent = {\n  \"on\": (_resizer) => {\n\n    jQuery(document.body)\n      .on(\"mousemove.ax5docker-\" + this.instanceId, function (e) {\n        let mouseObj = getMousePosition(e),\n            da_grow;\n\n        if (self.xvar.resizerLived) {\n          if (self.xvar.resizerType == \"row\") {\n            self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n            da_grow = U.number(self.xvar.__da * 2 / self.xvar.resizerCanvasWidth, {round: 6});\n\n            self.xvar.resizer$dom.prev().css({\"flex-grow\": self.xvar.resizerPrevGrow + da_grow});\n            self.xvar.resizer$dom.next().css({\"flex-grow\": self.xvar.resizerNextGrow - da_grow});\n          } else {\n            self.xvar.__da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n            da_grow = U.number(self.xvar.__da * 2 / self.xvar.resizerCanvasHeight, {round: 6});\n\n            self.xvar.resizer$dom.prev().css({\"flex-grow\": self.xvar.resizerPrevGrow + da_grow});\n            self.xvar.resizer$dom.next().css({\"flex-grow\": self.xvar.resizerNextGrow - da_grow});\n          }\n\n          fireEvent({\n            eventName: \"resize\",\n            target: self.xvar.resizer$dom\n          });\n        } else {\n          self.xvar.resizerLived = true;\n        }\n\n        mouseObj = null;\n        da_grow = null;\n      })\n      .on(\"mouseup.ax5docker-\" + this.instanceId, function (e) {\n        panelResizerEvent.off();\n        U.stopEvent(e);\n      })\n      .on(\"mouseleave.ax5docker-\" + this.instanceId, function (e) {\n        panelResizerEvent.off();\n        U.stopEvent(e);\n      });\n\n    jQuery(document.body)\n      .attr('unselectable', 'on')\n      .css('user-select', 'none')\n      .on('selectstart', false);\n  },\n  \"off\": () => {\n    self.xvar.resizerLived = false;\n\n    if (typeof this.xvar.__da === \"undefined\") {\n\n    }\n    else {\n      let $prevPanel = self.xvar.resizer$dom.prev(),\n          $nextPanel = self.xvar.resizer$dom.next(),\n          prevPane   = getPanel($prevPanel.attr(\"data-ax6ui-docker-path\")),\n          nextPane   = getPanel($nextPanel.attr(\"data-ax6ui-docker-path\"));\n\n      prevPane.flexGrow = U.number($prevPanel.css(\"flex-grow\"));\n      nextPane.flexGrow = U.number($nextPanel.css(\"flex-grow\"));\n\n      $prevPanel = null;\n      $nextPanel = null;\n      prevPane = null;\n      nextPane = null;\n    }\n\n    alignStackPane();\n\n    jQuery(document.body)\n      .off(\"mousemove.ax5docker-\" + this.instanceId)\n      .off(\"mouseup.ax5docker-\" + this.instanceId)\n      .off(\"mouseleave.ax5docker-\" + this.instanceId);\n\n    jQuery(document.body)\n      .removeAttr('unselectable')\n      .css('user-select', 'auto')\n      .off('selectstart');\n  }\n};\n\n/**\n * 액티브 패널 변경(stack인 상황에서)\n * @private {Function}\n * @param pane\n * @param panelIndex\n * @returns {boolean}\n */\nconst changeActiveStackPanel = function (pane, panelIndex) {\n  let panel = pane.panels[panelIndex];\n\n  for (let p = 0, pl = pane.panels.length; p < pl; p++) {\n    if (pane.panels[p].active) {\n      controlPanel(pane.panels[p], \"deactive\");\n    }\n  }\n\n  if (!panel.builded) controlPanel(panel, \"init\");\n  controlPanel(panel, \"active\");\n\n  pane = null;\n  panelIndex = null;\n  panel = null;\n  return this;\n};\n\n/**\n * stackTab의 더보기 아이콘이 클릭되면~~~\n * @private {Function}\n * @param stackPane\n * @param e\n * @returns {AX6UIDocker}\n */\nconst openStackPanelMore = function (stackPane, e) {\n  let $stackPane = jQuery(stackPane),\n      panePath   = $stackPane.attr(\"data-ax6ui-docker-path\"),\n      pane       = getPanel(panePath);\n\n  if (this.menu) {\n    let menuItems = U.map(pane.panels, function (index) {\n      return {\n        label: this.name,\n        index: index,\n        panePath: panePath\n      }\n    });\n\n    this.menu.setConfig({\n      items: menuItems,\n      onClick: function () {\n        //console.log(pane);\n        changeActiveStackPanel(getPanel(this.panePath), this.index);\n      }\n    });\n\n    this.menu.popup(e);\n  } else {\n    console.log(pane.panels);\n    throw \"'ax5ui-menu' is required to implement the function.\";\n  }\n\n  $stackPane = null;\n  panePath = null;\n  pane = null;\n  return this;\n};\n\n/**\n * stackPane이 리사이즈 되면 탭을 스크롤여부를 판단해야 합니다.\n */\nconst alignStackPane = function () {\n  debouncer.panelDebouncedFn((function () {\n    this.$target.find('[data-ax6ui-docker-pane-tabs=\"' + this.instanceId + '\"]').each(function () {\n      let $this = jQuery(this).parent();\n      if (this.scrollWidth > this.clientWidth) {\n        $this.addClass(\"tabs-scrolled\");\n      } else {\n        $this.removeClass(\"tabs-scrolled\");\n      }\n      $this = null;\n    });\n  }).bind(this));\n};\n\nconst panelsDeactive = function (panels) {\n  if (U.isArray(panels)) {\n    panels.forEach(function (p) {\n      //p.active = false;\n      //p.$item.removeClass(\"active\");\n      controlPanel(p, \"deactive\");\n    });\n  } else {\n    //panels.active = false;\n    //panels.$item.removeClass(\"active\");\n    controlPanel(panels, \"deactive\");\n  }\n};\n\n/**\n * 패널중에 null이 된 요소를 찾아 panels를 정리 합니다.\n * @returns {*}\n */\nconst arrangePanel = function () {\n  const processor = {\n    stack(myself) {\n      if (!U.isArray(myself.panels)) return false;\n\n      let newObj = {\n        type: \"stack\",\n        panels: []\n      };\n\n      myself.panels.forEach(function (P, _pIndex) {\n        if (P) {\n          let _p = processor[P.type](P);\n          if (_p) newObj.panels.push(_p);\n          _p = null;\n        }\n      });\n\n      if (newObj.panels.length == 0) {\n        return null;\n      } else if (newObj.panels.length < 2) {\n        newObj = newObj.panels[0];\n      }\n\n      return newObj;\n    },\n    panel(myself) {\n      //console.log(myself);\n      return myself;\n    },\n    row(myself) {\n\n      if (!U.isArray(myself.panels)) return false;\n\n      let newObj = {\n        type: \"row\",\n        panels: []\n      };\n\n      myself.panels.forEach(function (P, _pIndex) {\n        if (P) {\n          let _p = processor[P.type](P);\n          if (_p) newObj.panels.push(_p);\n          _p = null;\n        }\n      });\n\n      if (newObj.panels.length == 0) {\n        return null;\n      } else if (newObj.panels.length < 2) {\n        newObj = newObj.panels[0];\n      }\n\n      return newObj;\n    },\n    column(myself) {\n      if (!U.isArray(myself.panels)) return false;\n\n      let newObj = {\n        type: \"column\",\n        panels: []\n      };\n\n      myself.panels.forEach(function (P, _pIndex) {\n        if (P) {\n          let _p = processor[P.type](P);\n          if (_p) newObj.panels.push(_p);\n          _p = null;\n        }\n      });\n\n      if (newObj.panels.length == 0) {\n        return null;\n      } else if (newObj.panels.length < 2) {\n        newObj = newObj.panels[0];\n      }\n\n      return newObj;\n    },\n  };\n\n  if (this.panels[0]) {\n    this.panels[0] = processor[this.panels[0].type](this.panels[0]);\n    if (this.panels[0] && this.panels[0].type === \"panel\") {\n      this.panels[0] = {\n        type: \"stack\",\n        panels: [this.panels[0]]\n      };\n    }\n  } else {\n    this.panels = [];\n  }\n\n  repaintPanels();\n};\n\n/** ~~~~~~~~~~~~~~~~~~ end of private  ~~~~~~~~~~~~~~~~~~~~ **/\n\n/**\n * @class\n */\nclass AX6UIDocker extends AX6UICore {\n  /**\n   * @constructor\n   * @param config\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @member {JSON}\n     * @param config\n     * @param [config.theme]\n     * @param [config.animateTime=250]\n     * @param [config.columnKeys]\n     * @param [config.control]\n     * @param [config.icons]\n     * @param [config.icons.close='X']\n     * @param [config.icons.more='...']\n     * @param [config.labelDirection='top']\n     * @param [config.disableClosePanel=false]\n     * @param [config.disableDragPanel=false]\n     * @param [config.resizeDebounceTime=100]\n     * @param [config.panelDebounceTime=300]\n     *\n     */\n    this.config = {\n      theme: 'default',\n      animateTime: 250,\n      columnKeys: {},\n      control: {},\n      icons: {\n        close: 'X',\n        more: '...'\n      },\n      labelDirection: 'top',\n      disableClosePanel: false,\n      disableDragPanel: false,\n      resizeDebounceTime: 100,\n      panelDebounceTime: 300,\n    };\n    jQuery.extend(true, this.config, config);\n\n    // 멤버 변수 초기화\n    /**\n     * @member {Object}\n     */\n    this.xvar = {};\n    /**\n     * @member {Object}\n     */\n    this.menu = null;\n\n    this.onResize = null;\n    // 패널 정보\n    /**\n     * @member {Array}\n     */\n    this.panels = [];\n    /**\n     * @member {Number}\n     */\n    this.panelId = 0;\n\n    // 패널의 컨텐츠 모듈\n    /**\n     * @member {Object}\n     */\n    this.modules = {};\n\n    if (typeof config !== \"undefined\") this.init();\n  }\n\n  /**\n   * @method\n   */\n  init() {\n    this.onStateChanged = this.config.onStateChanged;\n    this.onResize = this.config.onResize;\n    this.onClick = this.config.onClick;\n    this.onLoad = this.config.onLoad;\n    this.onDataChanged = this.config.onDataChanged;\n\n    // memory target\n    this.$target = jQuery(this.config.target);\n    // set panels\n    this.panels = this.config.panels || [];\n\n\n    debouncer.resizeDebouncedFn = U.throttle(function (fn) {\n      fn();\n    }, this.config.resizeDebounceTime);\n\n    debouncer.panelDebouncedFn = U.debounce(function (fn) {\n      fn();\n    }, this.config.panelDebounceTime);\n\n    // init 호출 여부\n    this.initOnce();\n  }\n\n  /**\n   * @method\n   */\n  initOnce() {\n    if (this.initialized) return this;\n    this.initialized = true;\n\n    jQuery(window)\n      .off(\"resize.ax6ui-docker-\" + this.instanceId)\n      .on(\"resize.ax6ui-docker-\" + this.instanceId, U.throttle(function (e) {\n\n      }, 30).bind(this));\n  }\n\n\n  /**\n   * @method\n   * @returns {AX6UIDocker}\n   */\n  setPanels(_panels) {\n    // set panels\n    this.panels = _panels || [];\n\n    // 패널 다시 그리기\n    repaintPanels.call(this);\n    return this;\n  };\n\n  /**\n   * @method\n   * @param modules\n   * @returns {AX6UIDocker}\n   */\n  addModule(modules) {\n    if (U.isObject(modules)) {\n      jQuery.extend(true, this.modules, modules);\n    }\n    return this;\n  };\n\n  /**\n   * repaint panels of docker\n   * @method\n   * @returns {AX6UIDocker}\n   */\n  repaint() {\n    // 패널 다시 그리기\n    repaintPanels.call(this);\n    return this;\n  };\n\n  /**\n   * @method\n   * @param {String} _addPath - Position path to add panel\n   * @param _addType\n   * @param _panel\n   * @param _panelIndex\n   * @returns {AX6UIDocker}\n   * @example\n   * ```js\n   * myDocker.addPanel('0.1', 'stack', {type:'panel', name:'addPanel', moduleName: 'content'});\n   *\n   * ```\n   */\n  addPanel(_addPath, _addType, _panel, _panelIndex) {\n    let addPath = \"\",\n        pane, parent;\n    const panelProcessor = {\n      \"stack\"(_pane, _addType, _panel, _panelIndex) {\n        let copyPanel    = jQuery.extend({}, _pane),\n            addProcessor = {\n              \"stack\"(_pane, _panel) {\n                if (_panel.active) {\n                  panelsDeactive(_pane.panels);\n                }\n                _pane.panels.push(_panel);\n                arrangePanel();\n              },\n              \"stack-left\"(_pane, _panel) {\n                if (_panel.active) {\n                  panelsDeactive(_pane.panels);\n                }\n                _pane.panels.splice(_panelIndex, 0, _panel);\n                arrangePanel();\n              },\n              \"stack-right\"(_pane, _panel) {\n                if (_panel.active) {\n                  panelsDeactive(_pane.panels);\n                }\n                _pane.panels.splice(Number(_panelIndex) + 1, 0, _panel);\n                arrangePanel();\n              },\n              \"row-left\"(_pane, _panel) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"row\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"row\",\n                    panels: []\n                  });\n                  _pane.panels.push(_panel);\n                  _pane.panels.push(copyPanel);\n                  arrangePanel();\n                }\n              },\n              \"row-right\"(_pane, _panel) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"row\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"row\",\n                    panels: []\n                  });\n                  _pane.panels.push(copyPanel);\n                  _pane.panels.push(_panel);\n                  arrangePanel();\n                }\n              },\n              \"column-top\"(_pane, _panel) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"column\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"column\",\n                    panels: []\n                  });\n                  _pane.panels.push(_panel);\n                  _pane.panels.push(copyPanel);\n                  arrangePanel();\n                }\n              },\n              \"column-bottom\"(_pane, _panel) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"column\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"column\",\n                    panels: []\n                  });\n                  _pane.panels.push(copyPanel);\n                  _pane.panels.push(_panel);\n                  arrangePanel();\n                }\n              }\n            };\n        if (_addType in addProcessor) {\n          addProcessor[_addType].call(this, _pane, _panel);\n        }\n\n        copyPanel = null;\n        addProcessor = null;\n      },\n      \"row\"(_pane, _addType, _panel, _panelIndex) {\n        let copyPanel    = jQuery.extend({}, _pane),\n            addProcessor = {\n              \"stack\"(_pane, _panel) {\n                // 처리 할 수 없는 상황 첫번째 자식을 찾아 재 요청\n                if (_pane.panels[0] && _pane.panels[0].panelPath) {\n                  this.addPanel(_pane.panels[0].panelPath, _addType, _panel);\n                }\n              },\n              \"row-left\"(_pane, _panel, _panelIndex) {\n                _pane.panels.splice(_panelIndex, 0, _panel);\n                arrangePanel();\n              },\n              \"row-right\"(_pane, _panel, _panelIndex) {\n                _pane.panels.splice(_panelIndex + 1, 0, _panel);\n                arrangePanel();\n              },\n              \"column-top\"(_pane, _panel, _panelIndex) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"column\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"column\",\n                    panels: []\n                  });\n                  _pane.panels.push(_panel);\n                  _pane.panels.push(copyPanel);\n                  arrangePanel();\n                }\n              },\n              \"column-bottom\"(_pane, _panel, _panelIndex) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"column\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"column\",\n                    panels: []\n                  });\n                  _pane.panels.push(copyPanel);\n                  _pane.panels.push(_panel);\n                  arrangePanel();\n                }\n              }\n            };\n        if (_addType in addProcessor) {\n          addProcessor[_addType].call(this, _pane, _panel, _panelIndex);\n        }\n\n        addProcessor = null;\n        copyPanel = null;\n      },\n      \"column\"(_pane, _addType, _panel, _panelIndex) {\n        let copyPanel    = jQuery.extend({}, _pane),\n            addProcessor = {\n              \"stack\"(_pane, _panel) {\n                if (_pane.panels[0] && _pane.panels[0].panelPath) {\n                  this.addPanel(_pane.panels[0].panelPath, _addType, _panel);\n                }\n              },\n              \"row-left\"(_pane, _panel) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"row\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"row\",\n                    panels: []\n                  });\n                  _pane.panels.push(_panel);\n                  _pane.panels.push(copyPanel);\n                  arrangePanel();\n                }\n              },\n              \"row-right\"(_pane, _panel) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"row\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"row\",\n                    panels: []\n                  });\n                  _pane.panels.push(copyPanel);\n                  _pane.panels.push(_panel);\n                  arrangePanel();\n                }\n              },\n              \"column-top\"(_pane, _panel) {\n                _pane.panels.splice(_panelIndex, 0, _panel);\n                arrangePanel();\n              },\n              \"column-bottom\"(_pane, _panel) {\n                _pane.panels.splice(_panelIndex + 1, 0, _panel);\n                arrangePanel();\n              }\n            };\n        if (_addType in addProcessor) {\n          addProcessor[_addType].call(this, _pane, _panel);\n        }\n\n        addProcessor = null;\n        copyPanel = null;\n      },\n      \"panel\"(_pane, _addType, _panel) {\n        let copyPanel    = jQuery.extend({}, _pane),\n            addProcessor = {\n              \"stack\"(_pane, _panel) {\n                // _pane stack으로 재구성\n                _pane = setPanel(addPath, {\n                  type: \"stack\",\n                  panels: []\n                });\n\n                if (_panel.active) {\n                  panelsDeactive(copyPanel);\n                }\n\n                _pane.panels.push(copyPanel);\n                _pane.panels.push(_panel);\n                arrangePanel();\n              },\n              \"stack-left\"(_pane, _panel) {\n                // _pane stack으로 재구성\n                _pane = setPanel(addPath, {\n                  type: \"stack\",\n                  panels: []\n                });\n\n                if (_panel.active) {\n                  panelsDeactive(copyPanel);\n                }\n                _pane.panels.push(_panel);\n                _pane.panels.push(copyPanel);\n                arrangePanel();\n              },\n              \"stack-right\"(_pane, _panel) {\n                // _pane stack으로 재구성\n                _pane = setPanel(addPath, {\n                  type: \"stack\",\n                  panels: []\n                });\n\n                if (_panel.active) {\n                  panelsDeactive(copyPanel);\n                }\n                _pane.panels.push(copyPanel);\n                _pane.panels.push(_panel);\n                arrangePanel();\n              },\n              \"row-left\"(_pane, _panel) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"row\" || parentPane.type == \"column\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"row\",\n                    panels: []\n                  });\n                  _pane.panels.push(_panel);\n                  _pane.panels.push(copyPanel);\n                  arrangePanel();\n                }\n              },\n              \"row-right\"(_pane, _panel) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"row\" || parentPane.type == \"column\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"row\",\n                    panels: []\n                  });\n                  _pane.panels.push(copyPanel);\n                  _pane.panels.push(_panel);\n                  arrangePanel();\n                }\n              },\n              \"column-top\"(_pane, _panel) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n                if (parentPane && parentPane.type == \"column\" || parentPane.type == \"row\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"column\",\n                    panels: []\n                  });\n                  _pane.panels.push(_panel);\n                  _pane.panels.push(copyPanel);\n                  arrangePanel();\n                }\n              },\n              \"column-bottom\"(_pane, _panel) {\n                let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                let parentPane = getPanel(parentPath);\n\n                if (parentPane && parentPane.type == \"column\" || parentPane.type == \"row\") {\n                  this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                } else {\n                  _pane = setPanel(addPath, {\n                    type: \"column\",\n                    panels: []\n                  });\n                  _pane.panels.push(copyPanel);\n                  _pane.panels.push(_panel);\n                  arrangePanel();\n                }\n              }\n            };\n\n        if (_addType in addProcessor) {\n          addProcessor[_addType].call(this, _pane, _panel);\n        }\n\n        copyPanel = null;\n        addProcessor = null;\n      }\n    };\n\n    if (this.panels.length === 0 || !this.panels[0]) {\n      return this.setPanels([{type: \"stack\", panels: [_panel]}]);\n    } else {\n      if (_addPath == \"undefined\") {\n        addPath = \"0\";\n      } else {\n        addPath = _addPath\n          .replace(/[a-zA-Z\\[\\]]+/g, \"\")\n          .replace(/(\\d+)/g, function (a, b) {\n            return \"panels[\" + a + \"]\";\n          });\n      }\n      pane = getPanel.call(this, addPath);\n      parent = getPanelParent.call(this, pane);\n    }\n\n    if (parent && parent.type == \"stack\") {\n      // 부모패널로 ~\n      pane = parent;\n      addPath = pane.panelPath;\n    }\n\n    if ((pane) ? pane.type : \"stack\" in panelProcessor) {\n      panelProcessor[(pane) ? pane.type : \"stack\"].call(this, pane, _addType, _panel, _panelIndex);\n    }\n\n    return this;\n  };\n\n  /**\n   * 패널 삭제하기\n   * @method\n   * @param {String} panelPath\n   * @param {Function} callback\n   * @returns {AX6UIDocker}\n   * @example\n   * ```js\n   * function removePanel() {\n                 *      var p = myDocker.searchPanel(function (panel) {\n                 *          return (panel.key == \"A\");\n                 *      });\n                 *\n                 *      if (p) {\n                 *          myDocker.removePanel(p.panelPath, function () {\n                 *              removePanel();\n                 *          });\n                 *      }\n                 * }\n   * removePanel();\n   * ```\n   */\n  removePanel(panelPath, callback) {\n    let panel = getPanel.call(this, panelPath);\n\n    controlPanel.call(this, panel, \"destroy\", callback);\n\n    panel = null;\n    return this;\n  };\n\n  /**\n   * @method\n   * @param _panel\n   * @param _appendPath\n   * @param _appendType\n   * @returns {AX6UIDocker}\n   */\n  appendPanel(_panel, _appendPath, _appendType) {\n\n    let copiedPanel = $.extend({}, _panel, {panelPath: \"\"}),\n        addType;\n\n    let removePanelPath = _panel.panelPath;\n    let appendPanelIndex = U.right(_appendPath, \".\").replace(/\\D/g, \"\");\n\n    if (_appendType.length == 0) {\n      return this;\n    }\n\n    if (_panel.panelPath === _appendPath) {\n      let parentPath = _appendPath.substr(0, _appendPath.lastIndexOf(\".\"));\n      let parentPane = getPanel.call(this, parentPath);\n      if (parentPane.type != \"stack\") {\n        return this;\n      }\n    }\n\n    if (_appendType.length == 1) { // stack\n      addType = (_appendType[0] == \"last-child\") ? \"stack\" : \"stack-\" + _appendType[0];\n      copiedPanel.active = false;\n      copiedPanel.$item.removeClass(\"active\");\n      controlPanel.call(this, copiedPanel, \"deactive\");\n\n    } else {\n      switch (_appendType[0] + \"-\" + _appendType[1]) {\n        case \"left-top\":\n          addType = \"row-left\";\n          break;\n        case \"left-middle\":\n          addType = \"row-left\";\n          break;\n        case \"left-bottom\":\n          addType = \"row-left\";\n          break;\n        case \"center-top\":\n          addType = \"column-top\";\n          break;\n        case \"center-middle\":\n          addType = \"stack\";\n          copiedPanel.active = false;\n          copiedPanel.$item.removeClass(\"active\");\n          appendPanelIndex = undefined;\n          controlPanel.call(this, copiedPanel, \"deactive\");\n          break;\n        case \"center-bottom\":\n          addType = \"column-bottom\";\n          break;\n        case \"right-top\":\n          addType = \"row-right\";\n          break;\n        case \"right-middle\":\n          addType = \"row-right\";\n          break;\n        case \"right-bottom\":\n          addType = \"row-right\";\n          break;\n      }\n    }\n\n    if (_panel.panelPath === _appendPath) {\n      // 부모레벨로 이동\n      _appendPath = U.left(_appendPath, \".\");\n    }\n    // todo : deactive call\n\n    setPanel.call(this, removePanelPath, null);\n    this.addPanel(_appendPath, addType, copiedPanel, appendPanelIndex);\n\n    copiedPanel = null;\n    return this;\n  };\n\n  /**\n   * @method\n   * @returns {AX6UIDocker}\n   */\n  align() {\n    alignStackPane.call(this, );\n    return this;\n  };\n\n  /**\n   * @method\n   * @param _condition\n   * @returns {*}\n   * @example\n   * ```js\n   * var p = myDocker.searchPanel(function (panel) {\n                 *  return (panel.id == \"A\");\n                 * });\n   * ```\n   */\n  searchPanel(_condition) {\n    if (U.isFunction(_condition)) {\n      const findPanel = function (_panels) {\n        let i = 0, l = _panels.length, findResult;\n        for (; i < l; i++) {\n          if (_panels[i]) {\n            if (_panels[i].type === \"panel\") {\n              if (_condition.call({\n                  config: self.config,\n                  panel: _panels[i]\n                }, _panels[i])) {\n                return _panels[i];\n              }\n            } else {\n              if (findResult = findPanel(_panels[i].panels)) {\n                return findResult;\n              }\n            }\n          }\n        }\n      };\n      return findPanel(this.panels);\n    } else if (U.isString(_condition)) {\n      return getPanel.call(this, _condition);\n    }\n  };\n\n  /**\n   * @method\n   * @param {String} _panelPath\n   * @param {Function} callback\n   * @returns {AX6UIDocker}\n   * @example\n   * ```js\n   * myDocker.activePanel(\"0.1\");\n   * myDocker.activePanel(\"0.0.1\");\n   * ```\n   */\n  activePanel(_panelPath, callback) {\n    let activePanelPath = \"\";\n    let pane;\n    let parent;\n\n    if (this.panels.length === 0 || !this.panels[0]) {\n      // 액티브 대상 없음.\n      return this;\n    } else {\n      if (typeof _panelPath == \"undefined\") {\n        activePanelPath = \"0\";\n      } else {\n        activePanelPath = _panelPath\n          .replace(/[a-zA-Z\\[\\]]+/g, \"\")\n          .replace(/(\\d+)/g, function (a, b) {\n            return \"panels[\" + a + \"]\";\n          });\n      }\n      pane = getPanel.call(this, activePanelPath);\n      parent = getPanelParent.call(this, pane);\n    }\n\n    changeActiveStackPanel.call(this, parent, pane.panelIndex);\n    return this;\n  };\n  \n}\n\nexport default AX6UIDocker;"]}