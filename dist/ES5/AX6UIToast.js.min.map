{"version":3,"sources":["AX6UIToast.js"],"names":["_jqmin","require","_AX6Util","_AX6UICore2","_AX6Mustache","tmpl","display","columnKeys","onStateChanged","opts","that","call","this","getContent","data","toastId","theme","icon","msg","replace","btns","closeIcon","open","callback","_this","toastSeqClear","clearTimeout","render","width","id","instanceId","toastSeq","_jqmin2","default","$toastBox","css","$toastContainer","_AX6Util2","left","config","containerPosition","append","prepend","queue","push","self","state","close","displayTime","on","clickEventName","e","btnOnClick","window","event","setTimeout","target","k","getAttribute","key","findParentNode","value","btn_target","onClick","toastType","AX6UIToast","_classCallCheck","_this2","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","lang","ok","cancel","animateTime","zIndex","body","init","z-index","max-width","attr","initOnce","initialized","isString","title","extend","label","remove","length","addClass","bind"],"mappings":"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","file":"AX6UIToast.js","sourcesContent":["import jQuery from \"jqmin\";\nimport U from \"./AX6Util.js\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport mustache from \"./AX6Mustache\";\nimport \"./AX6UIToast/index.scss\";\n\nlet tmpl = {\n    display(columnKeys) {\n        return `\n<div id=\"{{toastId}}\" data-ax6ui-toast=\"\" class=\"{{theme}}\">\n    {{#icon}}\n    <div class=\"ax-toast-icon\">{{{.}}}</div>\n    {{/icon}}\n    <div class=\"ax-toast-body\">{{{msg}}}</div>\n    {{#btns}}\n    <div class=\"ax-toast-buttons\">\n        <div class=\"ax-button-wrap\">\n            {{#@each}}\n            <button type=\"button\" data-ax-toast-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{{@value.label}}}</button>\n            {{/@each}}\n        </div>\n    </div>\n    {{/btns}}\n    {{^btns}}\n        <a class=\"ax-toast-close\" data-ax-toast-btn=\"ok\">{{{closeIcon}}}</a>\n    {{/btns}}\n    <div style=\"clear:both;\"></div>\n</div>`;\n    }\n};\n\nconst onStateChanged = function (opts, that) {\n    if (opts && opts.onStateChanged) {\n        opts.onStateChanged.call(that, that);\n    }\n    else if (this.onStateChanged) {\n        this.onStateChanged.call(that, that);\n    }\n\n    opts = null;\n    that = null;\n    return true;\n};\nconst getContent = function (toastId, opts) {\n    let data = {\n        toastId: toastId,\n        theme: opts.theme,\n        icon: opts.icon,\n        msg: (opts.msg || \"\").replace(/\\n/g, \"<br/>\"),\n        btns: opts.btns,\n        closeIcon: opts.closeIcon\n    };\n\n    try {\n        return mustache.render(tmpl.display.call(this), data);\n    }\n    finally {\n        toastId = null;\n        data = null;\n    }\n};\nconst open = function (opts, callback) {\n    if (this.toastSeqClear) clearTimeout(this.toastSeqClear);\n\n    let $toastBox,\n        box = {\n            width: opts.width\n        };\n\n    opts.id = 'ax6ui-toast-' + this.instanceId + '-' + (++this.toastSeq);\n\n    if (jQuery('#' + opts.id).get(0)) return this;\n\n    $toastBox = jQuery(getContent(opts.id, opts));\n    $toastBox.css({width: this.$toastContainer.width()});\n\n    if (U.left(this.config.containerPosition, '-') == 'bottom') {\n        this.$toastContainer.append($toastBox);\n    }\n    else {\n        this.$toastContainer.prepend($toastBox);\n    }\n\n    opts.$toastBox = $toastBox;\n    this.queue.push(opts);\n\n    onStateChanged.call(this, opts, {\n        self: this,\n        state: \"open\",\n        toastId: opts.id\n    });\n\n    if (opts.toastType === \"push\") {\n        // 자동 제거 타이머 시작\n        setTimeout(() => {\n            this.close(opts, callback);\n        }, this.config.displayTime);\n\n        $toastBox.on(this.config.clickEventName, '[data-ax-toast-btn]', e => {\n            btnOnClick.call(this, e || window.event, opts, $toastBox, callback);\n        });\n    }\n    else if (opts.toastType === \"confirm\") {\n        $toastBox.on(this.config.clickEventName, '[data-ax-toast-btn]', e => {\n            btnOnClick.call(this, e || window.event, opts, $toastBox, callback);\n        });\n    }\n\n    box = null;\n};\nconst btnOnClick = function (e, opts, $toastBox, callback, target, k) {\n    target = U.findParentNode(e.target, function (target) {\n        if (target.getAttribute(\"data-ax-toast-btn\")) {\n            return true;\n        }\n    });\n\n    if (target) {\n        k = target.getAttribute(\"data-ax-toast-btn\");\n\n        let that = {\n            key: k, value: (opts.btns) ? opts.btns[k] : k,\n            toastId: opts.id,\n            btn_target: target\n        };\n\n        if (opts.btns && opts.btns[k].onClick) {\n            opts.btns[k].onClick.call(that, that);\n        }\n        else if (opts.toastType === \"push\") {\n            if (callback) callback.call(that, that);\n            this.close(opts, callback);\n        }\n        else if (opts.toastType === \"confirm\") {\n            if (callback) callback.call(that, that);\n            this.close(opts);\n        }\n    }\n\n    e = null;\n    opts = null;\n    $toastBox = null;\n    callback = null;\n    target = null;\n    k = null;\n};\n\n/**\n * @class\n */\nclass AX6UIToast extends AX6UICore {\n    /**\n     * @constructor\n     * @param config\n     */\n    constructor(config) {\n        super();\n\n        /**\n         * @member {JSON}\n         * @param config\n         * @param [config.theme='default']\n         * @param [config.width=300]\n         * @param [config.icon='']\n         * @param [config.closeIcon='']\n         * @param [config.msg='']\n         * @param [config.lang]\n         * @param [config.lang.ok='ok']\n         * @param [config.lang.cancel='cancel']\n         * @param [config.displayTime=3000]\n         * @param [config.animateTime=250]\n         * @param [config.containerPosition='bottom-left']\n         */\n        this.config = {\n            clickEventName: \"click\",\n            theme: 'default',\n            width: 300,\n            icon: '',\n            closeIcon: '',\n            msg: '',\n            lang: {\n                \"ok\": \"ok\", \"cancel\": \"cancel\"\n            },\n            displayTime: 3000,\n            animateTime: 250,\n            containerPosition: \"bottom-left\",\n            zIndex: 9999\n        };\n        jQuery.extend(true, this.config, config);\n\n        // 멤버 변수 초기화\n        this.$toastContainer = jQuery('<div data-ax6ui-toast-container=\"' + this.instanceId + '\" data-toast-container-position=\"\"></div>');\n        this.queue = [];\n        this.toastSeq = 0;\n        this.toastSeqClear = null;\n\n        jQuery(document.body).append(this.$toastContainer);\n\n        this.init();\n    }\n\n    /**\n     * @method\n     */\n    init(){\n        this.onStateChanged = this.config.onStateChanged;\n        delete this.config.onStateChanged;\n\n        this.$toastContainer\n            .css({\"z-index\": this.config.zIndex, width: this.config.width, \"max-width\": \"100%\"})\n            .attr(\"data-toast-container-position\", this.config.containerPosition);\n\n        // init 호출 여부\n        this.initOnce();\n    }\n\n    /**\n     * @method\n     */\n    initOnce(){\n        if(this.initialized) return this;\n        this.initialized = true;\n    }\n\n    /**\n     * @method\n     * @param opts\n     * @param callback\n     * @return {AX6UIToast}\n     * @example\n     * ```js\n     * import {AX6UIToast as Toast} from \"ax6ui\";\n     *\n     * let toast = new Toast({\n     *  containerPosition: \"bottom-right\"\n     * });\n     *\n     * toast.push(\"toast messages\");\n     * ```\n     */\n    push(opts, callback) {\n        if (U.isString(opts)) {\n            opts = {\n                title: this.config.title,\n                msg: opts\n            }\n        }\n\n        opts.toastType = \"push\";\n        opts = jQuery.extend(true, {}, this.config, opts);\n        open.call(this, opts, callback);\n\n        opts = null;\n        callback = null;\n        return this;\n    }\n\n    /**\n     * @method\n     * @param opts\n     * @param callback\n     * @returns {AX6UIToast}\n     * @example\n     * ```js\n     * import {AX6UIToast as Toast} from \"ax6ui\";\n     *\n     * let toast = new Toast({\n     *  containerPosition: \"bottom-right\"\n     * });\n     *\n     * toast.confirm({\n     *  title: \"예/아니오\",\n     *  msg: \"당신은 개발자 입니까?\",\n     *  btns: {\n     *      Y: {label: \"예\"},\n     *      N: {label: \"아니오\"}\n     *  }\n     * }, function(res){\n     *  console.log(res);\n     * });\n     * ```\n     */\n    confirm(opts, callback) {\n        if (U.isString(opts)) {\n            opts = {\n                title: this.config.title,\n                msg: opts\n            }\n        }\n\n        opts.toastType = \"confirm\";\n        opts = jQuery.extend(true, {}, this.config, opts);\n        if (typeof opts.btns === \"undefined\") {\n            opts.btns = {\n                ok: {label: opts.lang[\"ok\"], theme: opts.theme}\n            };\n        }\n        open.call(this, opts, callback);\n\n        opts = null;\n        callback = null;\n        return this;\n    }\n\n    /**\n     * close the toast\n     * @method\n     * @returns {AX6UIToast}\n     * @example\n     * ```\n     * toast.close();\n     * ```\n     */\n    close(opts, callback) {\n        let $toastBox = opts.$toastBox;\n        $toastBox.addClass((opts.toastType == \"push\") ? \"removed\" : \"destroy\");\n        this.queue = U.filter(this.queue, function () {\n            return opts.id != this.id;\n        });\n\n        setTimeout((function () {\n            var that = {\n                toastId: opts.id\n            };\n\n            $toastBox.remove();\n            if (callback) callback.call(that, that);\n\n            that = {\n                self: this,\n                state: \"close\",\n                toastId: opts.id\n            };\n            onStateChanged.call(this, opts, that);\n\n            // 3초후에도 아무 일이 없다면 완전히 제거\n            if (this.queue.length === 0) {\n                if (this.toastSeqClear) clearTimeout(this.toastSeqClear);\n                this.toastSeqClear = setTimeout((function () {\n                    /// console.log(\"try clear seq\");\n                    if (this.queue.length === 0) this.toastSeq = 0;\n                }).bind(this), 3000);\n            }\n\n            that = null;\n            opts = null;\n            callback = null;\n            $toastBox = null;\n        }).bind(this), opts.animateTime);\n\n        return this;\n    }\n\n}\n\nexport default AX6UIToast;"]}