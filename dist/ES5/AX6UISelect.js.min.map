{"version":3,"sources":["AX6UISelect.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Info","_AX6Util","_AX6Mustache","$window","_jqmin2","default","window","displayTmpl","columnKeys","selectTmpl","optionsTmpl","alignSelectDisplay","queue","optionSelected","optionText","optionValue","winWidth","max","width","winHeight","Math","activeSelectOptionGroup","this","onStateChanged","call","that","state","pickerDirection","item","onChange","dim","height","i","length","w","pos","top","pickerDim","positionMargin","$display","css","min-width","newTop","reset","find","alignSelectOptionGroup","append","left","$target","offset","outerWidth","outerHeight","document","body","activeSelectQueueIndex","clickEl","direction","target","gindex","index","addClass","close","which","onBodyKeyup","$option","undefined","labels","onBodyClick","isArray","selected","_AX6Util2","findParentNode","e","optgroup","get","val","id","getAttribute","syncLabel","trigger","focus","multiple","label","options","eventKeys","ESC","sort","value","optionFocusIndex","push","optionsSort","attr","$select","getLabel","queIdx","l","forEach","n","_focusIndex","_prevFocusIndex","focusOptionEl","lang","noSelected","data","multipleLabel","focusOptionElHeight","html","optionGroupScrollContainerHeight","focusWord","focusOptionElTop","indexedOptions","searchWord","optionGroupScrollContainer","optionGroupScrollContainerScrollTop","@findex","toLowerCase","search","bindSelectTarget","a","b","focusMove","findex","selectEvent","debounce","optionSelectedIndex","optionItemLength","stopEvent","innerHeight","scrollTop","position","tabIndex","_this","$displayLabel","clear","open","_AX6Info2","SPACE","$displayInput","off","keyDown","on","UP","blur","selectChange","po","elementOptions","newOptions","focusIndex","extend","option","OIndex","instanceId","name","theme","O","OO","_AX6Mustache2","OOIndex","setSelected","render","bind","keyUp","click","syncSelectOptions","_this2","isString","boundID","getQueIdx","ctrlKeys","text","config","toArray","noOptions","loading","console","log","getError","18","8","17","46","40","35","187","27","36","45","37","189","34","33","13","39","16","9","38","91","AX6UISelect","_classCallCheck","_this3","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","animateTime","closeTimer","waitOptionsCallback","keyUpTimer","xvar","init","onExpand","self","initialized","_O","_OIndex","throttle","optionsMap","_AX6UICore3","JSON","parse","stringify","error","parseJson","selectedOptionEl","openTimer","setTimeout","tryCount","size","focusTop","clearTimeout","_item","waitOptions","optionGroupTmpl","getSelected","event","clearSelected","nn","_this4","processor","optionIndex","internal","o","toString","isNumber","values","_this5","key","arr","removeAttr","_this6","remove","onClose"],"mappings":"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","file":"AX6UISelect.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport info from \"./AX6Info\";\nimport U from \"./AX6Util\";\nimport mustache from \"./AX6Mustache\";\nimport \"./AX6UISelect/index.scss\";\n\nconst $window = jQuery(window);\nconst displayTmpl = function (columnKeys) {\n    return `\n<a {{^tabIndex}}href=\"#ax6select-{{id}}\" {{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}class=\"ax6select-display {{theme}}\" \ndata-ax6ui-select-display=\"{{id}}\" data-ax6ui-select-instance=\"{{instanceId}}\" style=\"height: {{height}}px;\">\n    <div class=\"ax6select-display-table\" data-els=\"display-table\">\n        <div data-ax6ui-select-display=\"label\">{{label}}</div>\n        <div data-ax6ui-select-display=\"addon\"> \n            {{#multiple}}{{#reset}}\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\n            {{/reset}}{{/multiple}}\n            {{#icons}}\n            <span class=\"addon-icon-closed\">{{clesed}}</span>\n            <span class=\"addon-icon-opened\">{{opened}}</span>\n            {{/icons}}\n            {{^icons}}\n            <span class=\"addon-icon-closed\"><span class=\"addon-icon-arrow\"></span></span>\n            <span class=\"addon-icon-opened\"><span class=\"addon-icon-arrow\"></span></span>\n            {{/icons}}\n        </div>\n    </div>\n    <input type=\"text\" tabindex=\"-1\" data-ax6ui-select-display=\"input\" \n    style=\"position:absolute;z-index:0;left:0px;top:0px;font-size:1px;opacity: 0;width:1px;height:1px;border: 0 none;color : transparent;text-indent: -9999em;\" />\n</a>\n`;\n};\nconst selectTmpl = function (columnKeys) {\n    return `\n<select tabindex=\"-1\" class=\"\" name=\"{{name}}\" {{#multiple}}multiple=\"multiple\"{{/multiple}} style=\"height: {{height}}px;\"></select>\n`;\n};\nconst optionGroupTmpl = function (columnKeys) {\n    return `\n<div class=\"ax6select-option-group {{theme}}\" data-ax6ui-select-option-group=\"{{id}}\">\n    <div class=\"ax-select-body\">\n        <div class=\"ax-select-option-group-content\" data-els=\"content\"></div>\n    </div>\n    <div class=\"ax-select-arrow\"></div> \n</div>\n`;\n};\nconst optionsTmpl = function (columnKeys) {\n    return `\n{{#waitOptions}}\n    <div class=\"ax-select-option-item\">\n            <div class=\"ax-select-option-item-holder\">\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">\n                    {{{lang.loading}}}\n                </span>\n            </div>\n        </div>\n{{/waitOptions}}\n{{^waitOptions}}\n    {{#options}}\n        {{#optgroup}}\n            <div class=\"ax-select-option-group\">\n                <div class=\"ax-select-option-item-holder\">\n                    <span class=\"ax-select-option-group-label\">\n                        {{{.}}}\n                    </span>\n                </div>\n                {{#options}}\n                <div class=\"ax-select-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-group-index=\"{{@gindex}}\" data-option-index=\"{{@index}}\" \n                data-option-value=\"{{${columnKeys.optionValue}}}\" \n                {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n                    <div class=\"ax-select-option-item-holder\">\n                        {{#multiple}}\n                        <span class=\"ax-select-option-item-cell ax-select-option-item-checkbox\">\n                            <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                        </span>\n                        {{/multiple}}\n                        <span class=\"ax-select-option-item-cell ax-select-option-item-label\">{{{${columnKeys.optionText}}}}</span>\n                    </div>\n                </div>\n                {{/options}}\n            </div>                            \n        {{/optgroup}}\n        {{^optgroup}}\n        <div class=\"ax-select-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{${columnKeys.optionValue}}}\" {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n            <div class=\"ax-select-option-item-holder\">\n                {{#multiple}}\n                <span class=\"ax-select-option-item-cell ax-select-option-item-checkbox\">\n                    <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                </span>\n                {{/multiple}}\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">{{{${columnKeys.optionText}}}}</span>\n            </div>\n        </div>\n        {{/optgroup}}\n    {{/options}}\n    {{^options}}\n        <div class=\"ax-select-option-item\">\n            <div class=\"ax-select-option-item-holder\">\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">\n                    {{{lang.noOptions}}}\n                </span>\n            </div>\n        </div>\n    {{/options}}\n{{/waitOptions}}\n`;\n};\nconst onStateChanged = function (item, that) {\n    if (item && item.onStateChanged) {\n        item.onStateChanged.call(that, that);\n    }\n    else if (this.onStateChanged) {\n        this.onStateChanged.call(that, that);\n    }\n\n    if (that.state == \"changeValue\") {\n        if (item && item.onChange) {\n            item.onChange.call(that, that);\n        }\n        else if (this.onChange) {\n            this.onChange.call(that, that);\n        }\n    }\n\n    item = null;\n    that = null;\n    return true;\n};\nconst alignSelectDisplay = function () {\n    let i = this.queue.length, w;\n    while (i--) {\n        if (this.queue[i].$display) {\n            w = Math.max(this.queue[i].$select.outerWidth(), U.number(this.queue[i].minWidth));\n            this.queue[i].$display.css({\n                \"min-width\": w\n            });\n            if (this.queue[i].reset) {\n                this.queue[i].$display.find(\".addon-icon-reset\").css({\n                    \"line-height\": this.queue[i].$display.height() + \"px\"\n                });\n            }\n        }\n    }\n\n    i = null;\n    w = null;\n    return this;\n};\nconst alignSelectOptionGroup = function (append) {\n    if (!this.activeSelectOptionGroup) return this;\n\n    let item = this.queue[this.activeSelectQueueIndex],\n        pos = {}, positionMargin = 0,\n        dim = {}, pickerDim = {},\n        pickerDirection;\n\n    if (append) jQuery(document.body).append(this.activeSelectOptionGroup);\n\n    pos = item.$target.offset();\n    dim = {\n        width: item.$target.outerWidth(),\n        height: item.$target.outerHeight()\n    };\n    pickerDim = {\n        winWidth: Math.max($window.width(), jQuery(document.body).width()),\n        winHeight: Math.max($window.height(), jQuery(document.body).height()),\n        width: this.activeSelectOptionGroup.outerWidth(),\n        height: this.activeSelectOptionGroup.outerHeight()\n    };\n\n    // picker css(width, left, top) & direction 결정\n    if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n        // set direction\n        pickerDirection = \"top\";\n\n        if (pos.top - pickerDim.height - positionMargin < 0) {\n            pickerDirection = \"top\";\n        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n            pickerDirection = \"bottom\";\n        }\n    } else {\n        pickerDirection = item.direction;\n    }\n    // todo : 표현할 공간이 없다면..\n    if (append) {\n        this.activeSelectOptionGroup\n            .addClass(\"direction-\" + pickerDirection);\n    }\n    this.activeSelectOptionGroup\n        .css((function () {\n            if (pickerDirection == \"top\") {\n                if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                    var newTop = pos.top + dim.height / 2 - pickerDim.height / 2;\n                    if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                        newTop = 0;\n                    }\n                    if (newTop < 0) {\n                        newTop = 0;\n                    }\n\n                    return {\n                        left: pos.left,\n                        top: newTop,\n                        width: dim.width\n                    }\n                }\n                return {\n                    left: pos.left,\n                    top: pos.top + dim.height + 1,\n                    width: dim.width\n                }\n            }\n            else if (pickerDirection == \"bottom\") {\n                return {\n                    left: pos.left,\n                    top: pos.top - pickerDim.height - 1,\n                    width: dim.width\n                }\n            }\n        }).call(this));\n};\nconst onBodyClick = function (e, target) {\n    if (!this.activeSelectOptionGroup) return this;\n\n    let item = this.queue[this.activeSelectQueueIndex],\n        clickEl = \"display\";\n\n    target = U.findParentNode(e.target, function (target) {\n        if (target.getAttribute(\"data-option-value\") || target.getAttribute(\"data-option-value\") == \"\") {\n            clickEl = \"optionItem\";\n            return true;\n        }\n        else if (item.$target.get(0) == target) {\n            clickEl = \"display\";\n            return true;\n        }\n    });\n\n    if (!target) {\n        this.close();\n        return this;\n    }\n    else if (clickEl === \"optionItem\") {\n        this.val(item.id, {\n            index: {\n                gindex: target.getAttribute(\"data-option-group-index\"),\n                index: target.getAttribute(\"data-option-index\")\n            }\n        }, undefined, \"internal\");\n        item.$select.trigger(\"change\");\n        item.$display.focus();\n        if (!item.multiple) this.close();\n    }\n    else {\n        //open and display click\n        //console.log(this.instanceId);\n    }\n\n    return this;\n};\nconst onBodyKeyup = function (e) {\n    if (e.keyCode == info.eventKeys.ESC) {\n        this.close();\n    }\n    else if (e.which == info.eventKeys.RETURN) {\n        if (this.queue[this.activeSelectQueueIndex].optionFocusIndex > -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n            let $option = this.activeSelectOptionGroup.find('[data-option-focus-index=\"' + this.queue[this.activeSelectQueueIndex].optionFocusIndex + '\"]');\n            this.val(this.queue[this.activeSelectQueueIndex].id, {\n                index: {\n                    gindex: $option.attr(\"data-option-group-index\"),\n                    index: $option.attr(\"data-option-index\")\n                }\n            }, undefined, \"internal\");\n            this.queue[this.activeSelectQueueIndex].$select.trigger(\"change\");\n            if (!this.queue[this.activeSelectQueueIndex].multiple) this.close();\n        } else {\n            this.close();\n        }\n    }\n};\nconst getLabel = function (queIdx) {\n    let item = this.queue[queIdx],\n        labels = [];\n\n    if (U.isArray(item.selected) && item.selected.length > 0) {\n        item.selected.forEach(function (n) {\n            if (n.selected) labels.push(n[item.columnKeys.optionText]);\n        });\n    }\n    else {\n        if (!item.multiple && item.options && item.options[0]) {\n            if (item.options[0].optgroup) {\n                labels[0] = item.options[0].options[0][item.columnKeys.optionText];\n            }\n            else {\n                labels[0] = item.options[0][item.columnKeys.optionText];\n            }\n        }\n        else {\n            labels[0] = item.lang.noSelected;\n        }\n    }\n\n    return (function () {\n        if (item.multiple && labels.length > 1) {\n            let data = {\n                label: labels[0],\n                length: labels.length - 1\n            };\n            return mustache.render(item.lang.multipleLabel, data);\n        }\n        else {\n            return labels[0];\n        }\n    })();\n};\nconst syncLabel = function (queIdx) {\n    this.queue[queIdx].$displayLabel\n        .html(getLabel.call(this, queIdx));\n};\nconst focusWord = function (queIdx, searchWord) {\n    let options = [], i = -1, l = this.queue[queIdx].indexedOptions.length - 1, n;\n    if (searchWord) {\n        while (l - i++) {\n            n = this.queue[queIdx].indexedOptions[i];\n            if (('' + n.value).toLowerCase() == searchWord.toLowerCase()) {\n                options = [{'@findex': n['@findex'], optionsSort: 0}];\n                break;\n            } else {\n                let sort = ('' + n.value).toLowerCase().search(searchWord.toLowerCase());\n                if (sort > -1) {\n                    options.push({'@findex': n['@findex'], optionsSort: sort});\n                    if (options.length > 2) break;\n                }\n                sort = null;\n            }\n        }\n        options.sort(function (a, b) {\n            return a.optionsSort - b.optionsSort;\n        });\n    }\n    if (options && options.length > 0) {\n        focusMove.call(this, queIdx, undefined, options[0]['@findex']);\n    }\n\n    try {\n        return options;\n    }\n    finally {\n        options = null;\n        i = null;\n        l = null;\n        n = null;\n    }\n};\nconst focusMove = function (queIdx, direction, findex) {\n    let _focusIndex,\n        _prevFocusIndex,\n        focusOptionEl,\n        optionGroupScrollContainer;\n\n    if (this.activeSelectOptionGroup && this.queue[queIdx].options && this.queue[queIdx].options.length > 0) {\n\n        if (typeof findex !== \"undefined\") {\n            _focusIndex = findex\n        }\n        else {\n            _prevFocusIndex = (this.queue[queIdx].optionFocusIndex == -1) ? this.queue[queIdx].optionSelectedIndex || -1 : this.queue[queIdx].optionFocusIndex;\n            if (_prevFocusIndex == -1) {\n                _focusIndex = (direction > 0) ? 0 : this.queue[queIdx].optionItemLength - 1;\n            }\n            else {\n                _focusIndex = _prevFocusIndex + direction;\n                if (_focusIndex < 0) _focusIndex = 0;\n                else if (_focusIndex > this.queue[queIdx].optionItemLength - 1) _focusIndex = this.queue[queIdx].optionItemLength - 1;\n            }\n        }\n\n        this.queue[queIdx].optionFocusIndex = _focusIndex;\n\n        this.activeSelectOptionGroup\n            .find('[data-option-focus-index]')\n            .removeClass(\"hover\");\n\n        focusOptionEl = this.activeSelectOptionGroup\n            .find('[data-option-focus-index=\"' + _focusIndex + '\"]')\n            .addClass(\"hover\");\n\n        optionGroupScrollContainer = this.activeSelectOptionGroup.find('[data-els=\"content\"]');\n\n        let focusOptionElHeight = focusOptionEl.outerHeight(),\n            optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n            optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n            focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n        if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n            optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n        }\n        else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n            optionGroupScrollContainer.scrollTop(focusOptionElTop);\n        }\n        // optionGroup scroll check\n    }\n};\nconst bindSelectTarget = function (queIdx) {\n    const selectEvent = {\n        'click': function (queIdx, e) {\n            let target = U.findParentNode(e.target, function (target) {\n                if (target.getAttribute(\"data-selected-clear\")) {\n                    //clickEl = \"clear\";\n                    return true;\n                }\n            });\n\n            if (target) {\n                this.val(queIdx, {clear: true});\n            }\n            else {\n                if (this.activeSelectQueueIndex == queIdx) {\n                    if (this.queue[queIdx].optionFocusIndex == -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                        this.close();\n                    }\n                }\n                else {\n                    this.open(queIdx);\n                    U.stopEvent(e);\n                }\n            }\n        },\n        'keyUp': function (queIdx, e) {\n            if (e.which == info.eventKeys.SPACE) {\n                selectEvent.click.call(this, queIdx, e);\n            }\n            else if (!ctrlKeys[e.which]) {\n                // 사용자 입력이 뜸해지면 찾고 검색 값 제거...\n                U.debounce(function (searchWord, queIdx) {\n                    focusWord.call(this, queIdx, searchWord);\n                    this.queue[queIdx].$displayInput.val('');\n                }, 300).call(this, this.queue[queIdx].$displayInput.val(), queIdx);\n            }\n        },\n        'keyDown': function (queIdx, e) {\n            if (e.which == info.eventKeys.DOWN) {\n                focusMove.call(this, queIdx, 1);\n                U.stopEvent(e);\n            }\n            else if (e.which == info.eventKeys.UP) {\n                focusMove.call(this, queIdx, -1);\n                U.stopEvent(e);\n            }\n        },\n        'blur': function (queIdx, e) {\n\n        },\n        'selectChange': function (queIdx, e) {\n            this.val(queIdx, this.queue[queIdx].$select.val(), true);\n        }\n    };\n\n    let item = this.queue[queIdx], data = {};\n\n    // find selected\n    item.selected = [];\n    if (!item.options) item.options = [];\n    item.options.forEach((n) => {\n        if (n[this.config.columnKeys.optionSelected]) item.selected.push(jQuery.extend({}, n));\n    });\n\n    if (!item.$display) {\n        /// 템플릿에 전달할 오브젝트 선언\n        data.instanceId = this.instanceId;\n        data.id = item.id;\n        data.name = item.name;\n        data.theme = item.theme;\n        data.tabIndex = item.tabIndex;\n        data.multiple = item.multiple;\n        data.reset = item.reset;\n        data.height = item.height;\n        data.label = getLabel.call(this, queIdx);\n\n        item.$display = jQuery(mustache.render(displayTmpl.call(this), data));\n        //item.$display.css({height: item.height});\n        item.$displayLabel = item.$display.find('[data-ax6ui-select-display=\"label\"]');\n\n        if (item.$target.find(\"select\").get(0)) {\n            item.$select = item.$target.find(\"select\");\n            // select 속성만 변경\n            item.$select\n                .attr(\"tabindex\", \"-1\")\n                .css({height: data.height});\n\n            if (data.name) {\n                item.$select.attr(\"name\", \"name\");\n            }\n            if (data.multiple) {\n                item.$select.attr(\"multiple\", \"multiple\");\n            }\n        }\n        else {\n            item.$select =  jQuery(mustache.render(selectTmpl.call(this), data));\n            item.$target.append(item.$select);\n            // select append\n        }\n\n        item.$target.append(item.$display);\n        item.$displayInput = item.$display.find('[data-ax6ui-select-display=\"input\"]'); // 사용자 입력값을 받기위한 숨음 입력필드\n        item.options = syncSelectOptions.call(this, queIdx, item.options);\n\n        alignSelectDisplay.call(this);\n\n        item.$displayInput\n            .off(\"blur.ax6select\")\n            .on(\"blur.ax6select\", selectEvent.blur.bind(this, queIdx))\n            .off('keyup.ax6select')\n            .on('keyup.ax6select', selectEvent.keyUp.bind(this, queIdx))\n            .off(\"keydown.ax6select\")\n            .on(\"keydown.ax6select\", selectEvent.keyDown.bind(this, queIdx));\n    }\n    else {\n        item.$displayLabel\n            .html(getLabel.call(this, queIdx));\n        item.options = syncSelectOptions.call(this, queIdx, item.options);\n\n        alignSelectDisplay.call(this);\n    }\n\n    item.$display\n        .off('click.ax6select')\n        .on('click.ax6select', selectEvent.click.bind(this, queIdx))\n        .off('keyup.ax6select')\n        .on('keyup.ax6select', selectEvent.keyUp.bind(this, queIdx));\n\n    // select 태그에 대한 change 이벤트 감시\n    item.$select\n        .off('change.ax6select')\n        .on('change.ax6select', selectEvent.selectChange.bind(this, queIdx));\n\n    data = null;\n    item = null;\n    queIdx = null;\n    return this;\n};\n\nconst syncSelectOptions = function (queIdx, options) {\n    const setSelected = function (queIdx, O) {\n        if (!O) {\n            this.queue[queIdx].selected = [];\n        }\n        else {\n            if (this.queue[queIdx].multiple) this.queue[queIdx].selected.push(jQuery.extend({}, O));\n            else this.queue[queIdx].selected[0] = jQuery.extend({}, O);\n        }\n    };\n\n    let item = this.queue[queIdx],\n        po, elementOptions, newOptions, focusIndex = 0;\n\n    setSelected.call(this, queIdx, false); // item.selected 초기화\n\n    if (options) {\n        item.options = options;\n        item.indexedOptions = [];\n\n        // select options 태그 생성\n        po = [];\n        item.options.forEach((O, OIndex) => {\n            if (O.optgroup) {\n\n                O['@gindex'] = OIndex;\n                O.options.forEach((OO, OOIndex) => {\n                    OO['@index'] = OOIndex;\n                    OO['@findex'] = focusIndex;\n                    po.push('<option value=\"' + OO[item.columnKeys.optionValue] + '\" '\n                        + (OO[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>'\n                        + OO[item.columnKeys.optionText] + '</option>');\n                    if (OO[item.columnKeys.optionSelected]) {\n                        setSelected.call(this, queIdx, OO);\n                    }\n\n                    item.indexedOptions.push({\n                        '@findex': focusIndex, value: OO[item.columnKeys.optionValue], text: OO[item.columnKeys.optionText]\n                    });\n                    focusIndex++;\n                });\n            }\n            else {\n                O['@index'] = OIndex;\n                O['@findex'] = focusIndex;\n                po.push('<option value=\"' + O[item.columnKeys.optionValue] + '\" '\n                    + (O[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>'\n                    + O[item.columnKeys.optionText] + '</option>');\n                if (O[item.columnKeys.optionSelected]) {\n                    setSelected.call(this, queIdx, O);\n                }\n\n                item.indexedOptions.push({\n                    '@findex': focusIndex, value: O[item.columnKeys.optionValue], text: O[item.columnKeys.optionText]\n                });\n                focusIndex++;\n            }\n        });\n        item.optionItemLength = focusIndex;\n        item.$select.html(po.join(''));\n    }\n    else {\n        /// select > options 태그로 스크립트 options를 만들어주는 역할\n        elementOptions = U.toArray(item.$select.get(0).options);\n        // select option 스크립트 생성\n        newOptions = [];\n        elementOptions.forEach((O, OIndex) => {\n            let option = {};\n\n            option[item.columnKeys.optionValue] = O.value;\n            option[item.columnKeys.optionText] = O.text;\n            option[item.columnKeys.optionSelected] = O.selected;\n            option['@index'] = OIndex;\n            option['@findex'] = OIndex;\n            if (O.selected) setSelected.call(this, queIdx, option);\n            newOptions.push(option);\n\n            option = null;\n        });\n        item.options = newOptions;\n        item.indexedOptions = newOptions;\n    }\n\n    if (!item.multiple && item.selected.length == 0 && item.options && item.options[0]) {\n        if (item.options[0].optgroup) {\n            item.options[0].options[0][item.columnKeys.optionSelected] = true;\n            item.selected.push(jQuery.extend({}, item.options[0].options[0]));\n        }\n        else {\n            item.options[0][item.columnKeys.optionSelected] = true;\n            item.selected.push(jQuery.extend({}, item.options[0]));\n        }\n    }\n\n    po = null;\n    elementOptions = null;\n    newOptions = null;\n    return item.options;\n};\n\nconst getQueIdx = function (boundID) {\n    if (!U.isString(boundID)) {\n        boundID = jQuery(boundID).data(\"data-ax6ui-select-id\");\n    }\n    if (!U.isString(boundID)) {\n        console.log(info.getError(\"ax6select\", \"402\", \"getQueIdx\"));\n        return;\n    }\n    return U.search(this.queue, function () {\n        return this.id == boundID;\n    });\n};\n\nlet ctrlKeys = {\n    \"18\": \"KEY_ALT\",\n    \"8\": \"KEY_BACKSPACE\",\n    \"17\": \"KEY_CONTROL\",\n    \"46\": \"KEY_DELETE\",\n    \"40\": \"KEY_DOWN\",\n    \"35\": \"KEY_END\",\n    \"187\": \"KEY_EQUAL\",\n    \"27\": \"KEY_ESC\",\n    \"36\": \"KEY_HOME\",\n    \"45\": \"KEY_INSERT\",\n    \"37\": \"KEY_LEFT\",\n    \"189\": \"KEY_MINUS\",\n    \"34\": \"KEY_PAGEDOWN\",\n    \"33\": \"KEY_PAGEUP\",\n    // \"190\": \"KEY_PERIOD\",\n    \"13\": \"KEY_RETURN\",\n    \"39\": \"KEY_RIGHT\",\n    \"16\": \"KEY_SHIFT\",\n    // \"32\": \"KEY_SPACE\",\n    \"9\": \"KEY_TAB\",\n    \"38\": \"KEY_UP\",\n    \"91\": \"KEY_WINDOW\"\n    //\"107\" : \"NUMPAD_ADD\",\n    //\"194\" : \"NUMPAD_COMMA\",\n    //\"110\" : \"NUMPAD_DECIMAL\",\n    //\"111\" : \"NUMPAD_DIVIDE\",\n    //\"12\" : \"NUMPAD_EQUAL\",\n    //\"106\" : \"NUMPAD_MULTIPLY\",\n    //\"109\" : \"NUMPAD_SUBTRACT\"\n};\n\n\n/**\n * @class\n */\nclass AX6UISelect extends AX6UICore {\n    /**\n     * @constructor\n     * @param config\n     */\n    constructor(config) {\n        super();\n\n        /**\n         * @member {JSON}\n         * @param config\n         * @param [config.theme='default']\n         * @param [config.animateTime=100]\n         * @param [config.lang] - 메세지들\n         * @param [config.lang.noSelected='']\n         * @param [config.lang.noOptions='no options']\n         * @param [config.lang.loading='now loading..']\n         * @param [config.lang.multipleLabel='\"{{label}}\"외 {{length}}건']\n         * @param [config.columnKeys] - 내부에서 사용 JSON key 정의\n         * @param [config.columnKeys.optionValue='value']\n         * @param [config.columnKeys.optionText='text']\n         * @param [config.columnKeys.optionSelected='selected']\n         */\n        this.config = {\n            theme: 'default',\n            animateTime: 100,\n            height: 34,\n            lang: {\n                noSelected: '',\n                noOptions: 'no options',\n                loading: 'now loading..',\n                multipleLabel: '\"{{label}}\"외 {{length}}건'\n            },\n            columnKeys: {\n                optionValue: 'value',\n                optionText: 'text',\n                optionSelected: 'selected'\n            }\n        };\n        jQuery.extend(true, this.config, config);\n\n        // 멤버 변수 초기화\n        /**\n         * bind를 통해 연결된 select가 저장되는 변수\n         * @member {Array}\n         */\n        this.queue = [];\n        /**\n         * @member {Object}\n         */\n        this.activeSelectOptionGroup = null;\n        /**\n         * @member {Number}\n         */\n        this.activeSelectQueueIndex = -1;\n        /**\n         * @member {Object}\n         */\n        this.openTimer = null;\n        /**\n         * @member {Object}\n         */\n        this.closeTimer = null;\n        /**\n         * @member {Function}\n         */\n        this.waitOptionsCallback = null;\n        /**\n         * @member {Object}\n         */\n        this.keyUpTimer = null;\n        /**\n         * @member {Object}\n         */\n        this.xvar = {};\n\n        this.init();\n    }\n\n    /**\n     * @method\n     * @param config\n     */\n    init() {\n        this.onStateChanged = this.config.onStateChanged;\n        delete this.config.onStateChanged;\n        this.onChange = this.config.onChange;\n        delete this.config.onChange;\n\n        // init 호출 여부\n        this.initOnce();\n    }\n\n    /**\n     * @method\n     */\n    initOnce() {\n        if (this.initialized) return this;\n        this.initialized = true;\n\n        // throttledResize\n        $window.on(\"resize.ax6select-display-\" + this.instanceId, U.throttle(function (e) {\n            alignSelectDisplay.call(this, e || window.event);\n            alignSelectOptionGroup.call(this);\n        }, 100).bind(this));\n    }\n\n    /**\n     * @method\n     * @param item\n     * @return {AX6UISelect}\n     */\n    bind(item) {\n        let queIdx;\n        item = jQuery.extend(true, {}, this.config, item);\n\n        if (!item.target) {\n            console.log(info.getError(\"ax6select\", \"401\", \"bind\"));\n            return this;\n        }\n        item.$target = jQuery(item.target);\n\n        if (!item.id) item.id = item.$target.data(\"data-ax6ui-select-id\");\n        if (!item.id) {\n            item.id = 'ax6select-' + AX6UICore.getInstanceId();\n            item.$target.data(\"data-ax6ui-select-id\", item.id);\n        }\n        item.name = item.$target.attr(\"data-ax6ui-select\");\n\n        if (item.options) {\n            item.options = JSON.parse(JSON.stringify(item.options));\n        }\n\n        // target attribute data\n        (function (data) {\n            if (U.isObject(data) && !data.error) {\n                item = jQuery.extend(true, item, data);\n            }\n        })(U.parseJson(item.$target.attr(\"data-ax6ui-select-config\"), true));\n\n        queIdx = U.search(this.queue, function () {\n            return this.id == item.id;\n        });\n\n        if (queIdx === -1) {\n            this.queue.push(item);\n            bindSelectTarget.call(this, this.queue.length - 1);\n        }\n        else {\n            this.queue[queIdx].selected = [];\n            this.queue[queIdx].options = item.options;\n            this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n            bindSelectTarget.call(this, queIdx);\n        }\n\n        queIdx = null;\n        return this;\n    };\n\n    /**\n     * @method\n     * @param boundID\n     * @param tryCount\n     * @return {AX6UISelect}\n     */\n    open(boundID, tryCount) {\n        const onExpand = function (item) {\n            item.onExpand.call({\n                self: this,\n                item: item\n            }, O => {\n                if (this.waitOptionsCallback) {\n                    var data = {};\n                    var item = this.queue[this.activeSelectQueueIndex];\n\n                    /// 현재 selected 검증후 처리\n                    (function (item, O) {\n                        var optionsMap = {};\n                        O.options.forEach(function (_O, _OIndex) {\n                            _O[\"@index\"] = _OIndex;\n                            optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                        });\n                        if (U.isArray(item.selected)) {\n                            item.selected.forEach(function (_O) {\n                                if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                    O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                }\n                            });\n                        }\n                    })(item, O);\n\n\n                    item.$displayLabel\n                        .html(getLabel.call(this, this.activeSelectQueueIndex));\n                    item.options = syncSelectOptions.call(this, this.activeSelectQueueIndex, O.options);\n\n                    alignSelectDisplay.call(this);\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax6select-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n                    data.lang = item.lang;\n                    data.options = item.options;\n                    this.activeSelectOptionGroup.find('[data-els=\"content\"]').html(mustache.render(optionsTmpl.call(this, item.columnKeys), data));\n                }\n            });\n        };\n        this.waitOptionsCallback = null;\n\n        /**\n         * open select from the outside\n         */\n        let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID),\n            item = this.queue[queIdx],\n            data = {}, focusTop, selectedOptionEl;\n\n        if (item.$display.attr(\"disabled\")) return this;\n\n        if (this.openTimer) clearTimeout(this.openTimer);\n        if (this.activeSelectOptionGroup) {\n            if (this.activeSelectQueueIndex == queIdx) {\n                return this;\n            }\n\n            if (tryCount > 2) return this;\n            this.close();\n            this.openTimer = setTimeout((function () {\n                this.open(queIdx, (tryCount || 0) + 1);\n            }).bind(this), this.config.animateTime);\n\n            return this;\n        }\n\n        item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n        if (item.selected && item.selected.length > 0) {\n            item.optionSelectedIndex = item.selected[0][\"@findex\"];\n        }\n\n        /// 템플릿에 전달할 오브젝트 선언\n        data.id = item.id;\n        data.theme = item.theme;\n        data.size = \"ax6select-option-group-\" + item.size;\n        data.multiple = item.multiple;\n\n        data.lang = item.lang;\n        item.$display.attr(\"data-select-option-group-opened\", \"true\");\n        //console.log(data.lang);\n\n        if (item.onExpand) {\n            // onExpand 인 경우 UI 대기모드 추가\n            data.waitOptions = true;\n        }\n\n        data.options = item.options;\n        this.activeSelectOptionGroup = jQuery(mustache.render(optionGroupTmpl.call(this), data));\n        this.activeSelectOptionGroup.find('[data-els=\"content\"]').html(mustache.render(optionsTmpl.call(this, item.columnKeys), data));\n        this.activeSelectQueueIndex = queIdx;\n\n        alignSelectOptionGroup.call(this, \"append\"); // alignSelectOptionGroup 에서 body append\n\n        if (item.selected && item.selected.length > 0) {\n            selectedOptionEl = this.activeSelectOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n\n            if (selectedOptionEl.get(0)) {\n                focusTop = selectedOptionEl.position().top - this.activeSelectOptionGroup.height() / 3;\n                this.activeSelectOptionGroup.find('[data-els=\"content\"]').scrollTop(focusTop);\n            }\n        }\n\n        /// 사용자 입력으로 옵션을 검색하기 위한 시나리오\n        // 옵션그룹이 활성화 되면 사용자 입력을 받기위한 input 값 초기화 및 포커스 다른 select가 닫히면서 display focus 이벤트와 충돌하는 문제가 있으므로\n        // 1밀리세컨 지연후 포커스 처리. input에 포커스가 되므로 input value로 options를 검색 할 수 있게 됩니다.\n        item.$displayInput.val('');\n\n        setTimeout((function () {\n            item.$displayInput.trigger(\"focus\");\n\n            jQuery(window).on(\"keyup.ax6select-\" + this.instanceId, (function (e) {\n                e = e || window.event;\n                onBodyKeyup.call(this, e);\n                U.stopEvent(e);\n            }).bind(this));\n\n            jQuery(window).on(\"click.ax6select-\" + this.instanceId, (function (e) {\n                e = e || window.event;\n                onBodyClick.call(this, e);\n                U.stopEvent(e);\n            }).bind(this));\n\n        }).bind(this), 300);\n\n        onStateChanged.call(this, item, {\n            self: this,\n            state: \"open\",\n            item: item\n        });\n\n        // waitOption timer\n        if (item.onExpand) {\n            this.waitOptionsCallback = true;\n            onExpand.call(this, item);\n        }\n\n        data = null;\n        focusTop = null;\n        selectedOptionEl = null;\n        return this;\n    }\n\n    /**\n     * @method\n     * @param _item\n     * @return {AX6UISelect}\n     */\n    update(_item) {\n        this.bind(_item);\n        return this;\n    };\n\n    /**\n     * @method\n     * @param boundID\n     * @param options\n     * @return {AX6UISelect}\n     */\n    setOptions(boundID, options) {\n        let queIdx = getQueIdx.call(this, boundID);\n        this.queue[queIdx].selected = [];\n        this.queue[queIdx].options = options;\n        bindSelectTarget.call(this, queIdx);\n        return this;\n    }\n\n    /**\n     * @method\n     * @param boundID\n     * @param value\n     * @param selected\n     * @param internal\n     * @return {*}\n     */\n    val(boundID, value, selected, internal) {\n        const getSelected = function (_item, o, selected) {\n                if (typeof selected === \"undefined\") {\n                    return (_item.multiple) ? !o : true;\n                } else {\n                    return selected;\n                }\n            },\n            clearSelected = function (queIdx) {\n                this.queue[queIdx].options.forEach(n => {\n                    if (n.optgroup) {\n                        n.options.forEach(nn => {\n                            nn.selected = false;\n                        });\n                    }\n                    else {\n                        n.selected = false;\n                    }\n                });\n            },\n            processor = {\n                'index': function (queIdx, value, selected) {\n                    // 클래스 내부에서 호출된 형태, 그런 이유로 옵션그룹에 대한 상태를 변경 하고 있다.\n                    let item = this.queue[queIdx];\n\n                    if (U.isString(value.index.gindex)) {\n                        item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected], selected);\n                        this.activeSelectOptionGroup\n                            .find('[data-option-group-index=\"' + value.index.gindex + '\"][data-option-index=\"' + value.index.index + '\"]')\n                            .attr(\"data-option-selected\", item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected].toString());\n                    }\n                    else {\n                        item.options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.index][item.columnKeys.optionSelected], selected);\n                        this.activeSelectOptionGroup\n                            .find('[data-option-index=\"' + value.index.index + '\"]')\n                            .attr(\"data-option-selected\", item.options[value.index.index][item.columnKeys.optionSelected].toString());\n\n                    }\n\n                    syncSelectOptions.call(this, queIdx, item.options);\n                    syncLabel.call(this, queIdx);\n                    alignSelectOptionGroup.call(this);\n                },\n                'arr': function (queIdx, values, selected) {\n                    values.forEach(value => {\n                        if (U.isString(value) || U.isNumber(value)) {\n                            processor.value.call(this, queIdx, value, selected);\n                        }\n                        else {\n                            for (let key in processor) {\n                                if (value[key]) {\n                                    processor[key].call(this, queIdx, value, selected);\n                                    break;\n                                }\n                            }\n                        }\n                    });\n                },\n                'value': function (queIdx, value, selected) {\n                    let item = this.queue[queIdx],\n                        optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionValue] == value;\n                        });\n                    if (optionIndex > -1) {\n                        item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                    }\n                    else {\n                        console.log(info.getError(\"ax6select\", \"501\", \"val\"));\n                        return;\n                    }\n\n                    syncSelectOptions.call(this, queIdx, item.options);\n                    syncLabel.call(this, queIdx);\n                },\n                'text': function (queIdx, value, selected) {\n                    let item = this.queue[queIdx],\n                        optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionText] == value;\n                        });\n                    if (optionIndex > -1) {\n                        item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                    }\n                    else {\n                        console.log(info.getError(\"ax6select\", \"501\", \"val\"));\n                        return;\n                    }\n\n                    syncSelectOptions.call(this, queIdx, item.options);\n                    syncLabel.call(this, queIdx);\n                },\n                'clear': function (queIdx) {\n                    clearSelected.call(this, queIdx);\n                    syncSelectOptions.call(this, queIdx, this.queue[queIdx].options);\n                    syncLabel.call(this, queIdx);\n\n                    if (this.activeSelectOptionGroup) {\n                        this.activeSelectOptionGroup\n                            .find('[data-option-index]')\n                            .attr(\"data-option-selected\", \"false\");\n                    }\n                }\n            };\n\n        let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n        if (!this.queue[queIdx]) {\n            return this;\n        }\n        if (typeof value !== \"undefined\" && !this.queue[queIdx].multiple) {\n            clearSelected.call(this, queIdx);\n        }\n\n        if (typeof value == \"undefined\") {\n            return this.queue[queIdx].selected;\n        }\n        else if (U.isArray(value)) {\n            processor.arr.call(this, queIdx, value, selected);\n        }\n        else if (U.isString(value) || U.isNumber(value)) {\n            processor.value.call(this, queIdx, value, selected);\n        }\n        else {\n            if (value === null) {\n                processor.clear.call(this, queIdx);\n            }\n            else {\n                for (var key in processor) {\n                    if (value[key]) {\n                        processor[key].call(this, queIdx, value, selected);\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (typeof value !== \"undefined\") {\n            onStateChanged.call(this, this.queue[queIdx], {\n                self: this,\n                item: this.queue[queIdx],\n                state: (internal) ? \"changeValue\" : \"setValue\",\n                value: this.queue[queIdx].selected,\n                internal: internal\n            });\n        }\n\n        boundID = null;\n        return this;\n    }\n\n    /**\n     * @method\n     * @param item\n     * @return {AX6UISelect}\n     */\n    close(item) {\n        if (this.closeTimer) clearTimeout(this.closeTimer);\n        if (!this.activeSelectOptionGroup) return this;\n\n        item = this.queue[this.activeSelectQueueIndex];\n        item.optionFocusIndex = -1;\n\n        item.$displayInput.val('').trigger(\"blur\");\n        item.$display.removeAttr(\"data-select-option-group-opened\").trigger(\"focus\");\n\n        this.activeSelectOptionGroup.addClass(\"destroy\");\n\n        jQuery(window)\n            .off(\"resize.ax6select-\" + this.instanceId)\n            .off(\"click.ax6select-\" + this.instanceId)\n            .off(\"keyup.ax6select-\" + this.instanceId);\n\n        this.closeTimer = setTimeout(() => {\n            if (this.activeSelectOptionGroup) this.activeSelectOptionGroup.remove();\n            this.activeSelectOptionGroup = null;\n            this.activeSelectQueueIndex = -1;\n\n            let that = {\n                self: this,\n                item: item,\n                value: item.selected,\n                state: \"close\"\n            };\n\n            onStateChanged.call(this, item, that);\n\n            // waitOption timer\n            if (item.onClose) {\n                item.onClose.call(that);\n            }\n        }, this.config.animateTime);\n        this.waitOptionsCallback = null;\n        return this;\n    };\n\n    /**\n     * @method\n     * @param boundID\n     * @return {AX6UISelect}\n     */\n    enable(boundID) {\n        let queIdx = getQueIdx.call(this, boundID);\n        this.queue[queIdx].$display.removeAttr(\"disabled\");\n        this.queue[queIdx].$select.removeAttr(\"disabled\");\n\n        onStateChanged.call(this, this.queue[queIdx], {\n            self: this,\n            state: \"enable\"\n        });\n\n        return this;\n    };\n\n    /**\n     * @method\n     * @param boundID\n     * @return {AX6UISelect}\n     */\n    disable(boundID) {\n        let queIdx = getQueIdx.call(this, boundID);\n        this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n        this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n\n        onStateChanged.call(this, this.queue[queIdx], {\n            self: this,\n            state: \"disable\"\n        });\n\n        return this;\n    };\n\n}\n\nexport default AX6UISelect;"]}