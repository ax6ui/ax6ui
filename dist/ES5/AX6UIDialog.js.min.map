{"version":3,"sources":["AX6UIDialog.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Util","_AX6Info","_AX6Mustache","dialogTmpl","columnKeys","onStateChanged","opts","that","getContent","call","dialogId","title","config","btns","additionalContent","data","this","msg","replace","input","_crlf","open","isFunction","$activeDialog","document","append","pos","box","callback","dialogConfig","height","id","css","width","_jqmin2","default","body","position","top","window","on","clickEventName","left","onKeyup","zIndex","self","e","state","event","find","dialogType","trigger","_this","_AX6Util2","throttle","align","autoCloseTime","autoCloseTimer","setTimeout","close","btnOnClick","innerHeight","innerWidth","srcElement","target","getAttribute","k","key","value","btnTarget","oi","emptyKey","doNotCallback","val","onClick","keyCode","get","focus","_AX6Info2","eventKeys","ESC","AX6UIDialog","_classCallCheck","_this2","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","instanceId","theme","queue","lang","ok","cancel","animateTime","init","initOnce","initialized","tryCount","isString","extend","label","push","_option","clearTimeout","addClass","off","length","shift","bind"],"mappings":"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","file":"AX6UIDialog.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport U from \"./AX6Util.js\";\nimport info from \"./AX6Info.js\";\nimport mustache from \"./AX6Mustache.js\";\n\n/** ~~~~~~~~~~~~~~~~~~ end of import  ~~~~~~~~~~~~~~~~~~~~ **/\n\nconst dialogTmpl = function (columnKeys) {\n  return ` \n<div id=\"{{dialogId}}\" data-dialog-els=\"root\" data-ax6ui-dialog=\"\" class=\"{{theme}}\">\n    <div class=\"ax-dialog-header\" data-dialog-els=\"header\">\n        {{{title}}}\n    </div>\n    <div class=\"ax-dialog-body\" data-dialog-els=\"body\">\n        <div class=\"ax-dialog-msg\">{{{msg}}}</div>\n        \n        {{#input}}\n        <div class=\"ax-dialog-prompt\">\n            {{#@each}}\n            <div class=\"form-group\">\n            {{#@value.label}}\n            <label>{{#_crlf}}{{{.}}}{{/_crlf}}</label>\n            {{/@value.label}}\n            <input type=\"{{@value.type}}\" placeholder=\"{{@value.placeholder}}\" class=\"form-control {{@value.theme}}\" data-dialog-prompt=\"{{@key}}\" style=\"width:100%;\" value=\"{{@value.value}}\" />\n            {{#@value.help}}\n            <p class=\"help-block\">{{#_crlf}}{{.}}{{/_crlf}}</p>\n            {{/@value.help}}\n            </div>\n            {{/@each}}\n        </div>\n        {{/input}}\n        \n        <div class=\"ax-dialog-buttons\" data-dialog-els=\"buttons\">\n            <div class=\"ax-button-wrap\">\n            {{#btns}}\n                {{#@each}}\n                <button type=\"button\" data-dialog-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{@value.label}}</button>\n                {{/@each}}\n            {{/btns}}\n            </div>\n        </div>\n        \n        {{#additionalContent}}\n        <div data-dialog-els=\"additional-content\">{{{.}}}</div>\n        {{/additionalContent}}\n    </div>\n</div>  \n`;\n};\nconst onStateChanged = function (opts, that) {\n  if (opts && opts.onStateChanged) {\n    opts.onStateChanged.call(that, that);\n  }\n  else if (this.onStateChanged) {\n    this.onStateChanged.call(that, that);\n  }\n\n  opts = null;\n  that = null;\n  return true;\n};\nconst getContent = function (dialogId, opts) {\n  let data = {\n    dialogId: dialogId,\n    title: (opts.title || this.config.title || \"\"),\n    msg: (opts.msg || this.config.msg || \"\").replace(/\\n/g, \"<br/>\"),\n    input: opts.input,\n    btns: opts.btns,\n    '_crlf': function () {\n      return this.replace(/\\n/g, \"<br/>\");\n    },\n    additionalContent: (function (additionalContent) {\n      if (U.isFunction(additionalContent)) {\n        return additionalContent.call(opts);\n      }\n      else {\n        return additionalContent;\n      }\n    })(opts.additionalContent)\n  };\n\n  return mustache.render(dialogTmpl.call(this), data);\n};\nconst open = function (opts, callback) {\n  let pos = {},\n      box = {\n        width: opts.width\n      };\n\n  this.dialogConfig = opts;\n  this.$activeDialog = jQuery(getContent.call(this, opts.id, opts));\n  this.$activeDialog.css({width: box.width});\n  jQuery(document.body).append(this.$activeDialog);\n\n  if (typeof callback === \"undefined\") {\n    callback = opts.callback;\n  }\n\n  // dialog 높이 구하기 - 너비가 정해지면 높이가 변경 될 것.\n  opts.height = box.height = this.$activeDialog.height();\n\n  //- position 정렬\n  if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n    pos.top = jQuery(window).height() / 2 - box.height / 2;\n    pos.left = jQuery(window).width() / 2 - box.width / 2;\n  }\n  else {\n    pos.left = opts.position.left || 0;\n    pos.top = opts.position.top || 0;\n  }\n  if (this.config.zIndex) {\n    pos[\"z-index\"] = this.config.zIndex;\n  }\n\n  this.$activeDialog\n    .css(pos)\n    .on(opts.clickEventName, \"[data-dialog-btn]\", (e) => {\n      btnOnClick.call(this, e || window.event, opts, callback);\n    })\n    .find(opts.dialogType === \"prompt\" ? \"[data-dialog-prompt]\" : \"[data-dialog-btn]\").trigger(\"focus\");\n\n\n  // bind key event\n  jQuery(window)\n    .on(\"keydown.ax6dialog\", (e) => {\n      onKeyup.call(this, e || window.event, opts, callback);\n    })\n    .on(\"resize.ax6dialog\", U.throttle(function (e) {\n      align.call(this, e || window.event);\n    }, 30).bind(this));\n\n  onStateChanged.call(this, opts, {\n    self: this,\n    state: \"open\"\n  });\n\n  if (opts.autoCloseTime) {\n    this.autoCloseTimer = setTimeout(() => {\n      this.close();\n    }, opts.autoCloseTime);\n  }\n\n  pos = null;\n  box = null;\n};\nconst align = function (e) {\n  if (!this.$activeDialog) return this;\n  let opts = this.dialogConfig,\n      box  = {\n        width: opts.width,\n        height: opts.height\n      };\n\n  //- position 정렬\n  if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n    box.top = window.innerHeight / 2 - box.height / 2;\n    box.left = window.innerWidth / 2 - box.width / 2;\n  }\n  else {\n    box.left = opts.position.left || 0;\n    box.top = opts.position.top || 0;\n  }\n  if (box.left < 0) box.left = 0;\n  if (box.top < 0) box.top = 0;\n\n  this.$activeDialog.css(box);\n\n  opts = null;\n  box = null;\n\n  return this;\n};\nconst btnOnClick = function (e, opts, callback, target, k) {\n  let that,\n      emptyKey = null;\n\n  if (e.srcElement) e.target = e.srcElement;\n\n  target = U.findParentNode(e.target, function (target) {\n    if (target.getAttribute(\"data-dialog-btn\")) {\n      return true;\n    }\n  });\n\n  if (target) {\n    k = target.getAttribute(\"data-dialog-btn\");\n\n    that = {\n      self: this,\n      key: k, value: opts.btns[k],\n      dialogId: opts.id,\n      btnTarget: target\n    };\n    if (opts.dialogType === \"prompt\") {\n      for (let oi in opts.input) {\n        that[oi] = this.$activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n        if (that[oi] == \"\" || that[oi] == null) {\n          emptyKey = oi;\n          break;\n        }\n      }\n    }\n    if (opts.btns[k].onClick) {\n      opts.btns[k].onClick.call(that, that);\n    }\n    else if (opts.dialogType === \"alert\") {\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n    else if (opts.dialogType === \"confirm\") {\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n    else if (opts.dialogType === \"prompt\") {\n      if (k === 'ok') {\n        if (emptyKey) {\n          this.$activeDialog.find('[data-dialog-prompt=\"' + emptyKey + '\"]').get(0).focus();\n          return false;\n        }\n      }\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n  }\n\n  that = null;\n  opts = null;\n  callback = null;\n  target = null;\n  k = null;\n};\nconst onKeyup = function (e, opts, callback, target, k) {\n  let that,\n      emptyKey = null;\n\n  if (e.keyCode == info.eventKeys.ESC) {\n    this.close();\n  }\n  if (opts.dialogType === \"prompt\") {\n    if (e.keyCode == info.eventKeys.RETURN) {\n      that = {\n        self: this,\n        key: k, value: opts.btns[k],\n        dialogId: opts.id,\n        btnTarget: target\n      };\n\n      for (let oi in opts.input) {\n        that[oi] = this.$activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n        if (that[oi] == \"\" || that[oi] == null) {\n          emptyKey = oi;\n          break;\n        }\n      }\n      if (emptyKey) {\n        that = null;\n        emptyKey = null;\n        return false;\n      }\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n  }\n\n  that = null;\n  emptyKey = null;\n  opts = null;\n  callback = null;\n  target = null;\n  k = null;\n};\n\n/** ~~~~~~~~~~~~~~~~~~ end of private  ~~~~~~~~~~~~~~~~~~~~ **/\n\n/**\n * @class\n */\nclass AX6UIDialog extends AX6UICore {\n  /**\n   * @constructor\n   * @param config\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @member {JSON}\n     * @param config\n     * @param [config.theme='default']\n     * @param [config.width=300]\n     * @param [config.title='']\n     * @param [config.msg='']\n     * @param [config.lang]\n     * @param [config.lang.ok='ok']\n     * @param [config.lang.cancel='cancel']\n     * @param [config.animateTime=150]\n     * @param [config.autoCloseTime=0]\n     * @param [config.onStateChanged]\n     *\n     */\n    this.config = {\n      id: 'ax6-dialog-' + this.instanceId,\n      clickEventName: \"click\",\n      theme: 'default',\n      width: 300,\n      title: 'AX6UIDialog',\n      msg: '',\n      lang: {\n        \"ok\": \"ok\", \"cancel\": \"cancel\"\n      },\n      animateTime: 150,\n      autoCloseTime: 0\n    };\n    jQuery.extend(true, this.config, config);\n\n    // 멤버 변수 초기화\n    /**\n     * dialog가 열려있는 상태에서 다시 open이 되면 queue에 보관 하였다가 close후 open\n     * @member {Array}\n     */\n    this.queue = [];\n    /**\n     * @member {jQueryElement}\n     */\n    this.$activeDialog = null;\n    /**\n     * @member {Object}\n     */\n    this.autoCloseTimer = null;\n\n    this.init();\n  }\n\n  /**\n   * @method\n   * @param config\n   */\n  init() {\n    this.onStateChanged = this.config.onStateChanged;\n    delete this.config.onStateChanged;\n\n    // init 호출 여부\n    this.initOnce();\n  }\n\n  /**\n   * @method\n   */\n  initOnce() {\n    if (this.initialized) return this;\n    this.initialized = true;\n  }\n\n  /**\n   * @method\n   * @param opts\n   * @param callback\n   * @param tryCount\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * import {Dialog} from \"ax6ui\"\n   *\n   * const dialog = new Dialog();\n   * dialog.alert(\"Alert Message\");\n   * dialog.alert({\n     *     title: \"Title\",\n     *     msg: \"Alert Message\"\n     * });\n   * ```\n   */\n  alert(opts, callback, tryCount) {\n    if (typeof opts === \"undefined\") {\n      opts = {\n        title: this.config.title,\n        msg: \"\"\n      }\n    } else if (U.isString(opts)) {\n      opts = {\n        title: this.config.title,\n        msg: opts\n      }\n    }\n\n    opts = jQuery.extend(true, {}, this.config, opts, {\n      dialogType: \"alert\",\n      callback: callback\n    });\n\n    if (typeof opts.btns === \"undefined\") {\n      opts.btns = {\n        ok: {label: opts.lang[\"ok\"], theme: opts.theme}\n      };\n    }\n\n    if (this.$activeDialog) {\n      this.queue.push(opts);\n    } else {\n      open.call(this, opts, callback);\n    }\n  }\n\n  /**\n   * @method\n   * @param opts\n   * @param callback\n   * @param tryCount\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * import {Dialog} from \"ax6ui\"\n   *\n   * const dialog = new Dialog();\n   * dialog.confirm({\n     *     title: \"확인\",\n     *     msg: \"확인 또는 취소를 누르세요\"\n     * }, function (res) {\n     *     //console.log(this, a, b);\n     *     if(res.key == \"ok\"){\n     *         console.log(\"OK\");\n     *     }\n     *     else if(res.key == \"cancel\"){\n     *         console.log(\"CANCEL\");\n     *     }\n     * });\n   *\n   * // btns custom\n   * dialog.config({\n     *  title: \"예/아니오\",\n     *  msg: \"당신은 개발자 입니까?\",\n     *  btns: {\n     *      Y: {label: \"예\"},\n     *      N: {label: \"아니오\"}\n     *  }\n     * }, function (res) {\n     *      console.log(res);\n     * });\n   * ```\n   */\n  confirm(opts, callback, tryCount) {\n    if (typeof opts === \"undefined\") {\n      opts = {\n        title: this.config.title,\n        msg: \"\"\n      }\n    } else if (U.isString(opts)) {\n      opts = {\n        title: this.config.title,\n        msg: opts\n      }\n    }\n\n    opts = jQuery.extend(true, {}, this.config, opts, {\n      dialogType: \"confirm\",\n      callback: callback\n    });\n\n    if (typeof opts.btns === \"undefined\") {\n      opts.btns = {\n        ok: {label: opts.lang[\"ok\"], theme: opts.theme},\n        cancel: {label: opts.lang[\"cancel\"]}\n      };\n    }\n\n    if (this.$activeDialog) {\n      this.queue.push(opts);\n    } else {\n      open.call(this, opts, callback);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param opts\n   * @param callback\n   * @param tryCount\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * import {Dialog} from \"ax6ui\"\n   *\n   * const dialog = new Dialog();\n   *\n   * dialog.prompt({\n     *  title: \"prompt\",\n     *  msg: '다음의 값을 입력하세요.',\n     *  input: {\n     *      data1: {label: \"data1의 라벨\", type: \"password\"},\n     *      data2: {label: \"data2의 라벨\"}\n     *  }\n     * }, function(res){\n     *      console.log(res);\n     * });\n   * ```\n   */\n  prompt(opts, callback, tryCount) {\n    if (typeof opts === \"undefined\") {\n      opts = {\n        title: this.config.title,\n        msg: \"\"\n      }\n    } else if (U.isString(opts)) {\n      opts = {\n        title: this.config.title,\n        msg: opts\n      }\n    }\n\n    opts = jQuery.extend(true, {}, this.config, opts, {\n      dialogType: \"prompt\",\n      callback: callback\n    });\n\n    if (typeof opts.input === \"undefined\") {\n      opts.input = {\n        value: {label: \"\"}\n      };\n    }\n    if (typeof opts.btns === \"undefined\") {\n      opts.btns = {\n        ok: {label: opts.lang[\"ok\"], theme: opts.theme},\n        cancel: {label: opts.lang[\"cancel\"]}\n      };\n    }\n\n    if (this.$activeDialog) {\n      this.queue.push(opts);\n    } else {\n      open.call(this, opts, callback);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param _option\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * dialog.close();\n   * dialog.close({callback: function(){\n     *\n     * });\n     * ```\n     */\n  close(_option) {\n    let opts, that;\n\n    if (this.$activeDialog) {\n      if (this.autoCloseTimer) clearTimeout(this.autoCloseTimer);\n\n      opts = this.dialogConfig;\n\n      this.$activeDialog.addClass(\"destroy\");\n      jQuery(window)\n        .off(\"keydown.ax6dialog\")\n        .off(\"resize.ax6dialog\");\n\n      setTimeout((function () {\n        if (this.$activeDialog) {\n          this.$activeDialog.remove();\n          this.$activeDialog = null;\n        }\n\n        that = {\n          self: this,\n          state: \"close\",\n          dialogId: opts.id\n        };\n\n        if (_option && U.isFunction(_option.callback)) {\n          _option.callback.call(that, that);\n        } else if (opts.callback && (!_option || !_option.doNotCallback)) {\n          opts.callback.call(that, that);\n        }\n\n        if (opts && opts.onStateChanged) {\n          opts.onStateChanged.call(that, that);\n        }\n        else if (this.onStateChanged) {\n          this.onStateChanged.call(that, that);\n        }\n\n        // 열려야 할 큐가 남아 있다면 큐아이템으로 다시 open\n        if (this.queue && this.queue.length) {\n          open.call(this, this.queue.shift());\n        }\n\n        opts = null;\n        that = null;\n      }).bind(this), this.config.animateTime);\n    }\n    return this;\n  }\n}\n\nexport default AX6UIDialog;"]}