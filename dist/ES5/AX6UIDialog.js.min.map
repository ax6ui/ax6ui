{"version":3,"sources":["AX6UIDialog.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Util","_AX6Info","_AX6Mustache","dialogTmpl","columnKeys","that","opts","onStateChanged","call","data","dialogId","input","btns","getContent","additionalContent","title","msg","this","config","replace","_crlf","render","_AX6Util2","default","isFunction","callback","width","dialogConfig","open","$activeDialog","css","pos","box","height","id","position","top","_jqmin2","window","left","find","dialogType","zIndex","align","on","clickEventName","e","btnOnClick","_this","event","self","trigger","document","body","append","autoCloseTimer","onKeyup","autoCloseTime","throttle","bind","state","setTimeout","close","k","innerHeight","innerWidth","emptyKey","target","findParentNode","key","value","btnTarget","oi","getAttribute","doNotCallback","val","keyCode","get","focus","_AX6Info2","eventKeys","ESC","RETURN","AX6UIDialog","_classCallCheck","_this2","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","instanceId","theme","lang","ok","cancel","animateTime","extend","queue","init","initOnce","initialized","tryCount","isString","label","push","_option","clearTimeout","addClass","off","remove"],"mappings":"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","file":"AX6UIDialog.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport U from \"./AX6Util.js\";\nimport info from \"./AX6Info.js\";\nimport mustache from \"./AX6Mustache.js\";\nimport \"./AX6UIDialog/index.scss\";\n\nconst dialogTmpl = function (columnKeys) {\n  return ` \n<div id=\"{{dialogId}}\" data-dialog-els=\"root\" data-ax6ui-dialog=\"\" class=\"{{theme}}\">\n    <div class=\"ax-dialog-header\" data-dialog-els=\"header\">\n        {{{title}}}\n    </div>\n    <div class=\"ax-dialog-body\" data-dialog-els=\"body\">\n        <div class=\"ax-dialog-msg\">{{{msg}}}</div>\n        \n        {{#input}}\n        <div class=\"ax-dialog-prompt\">\n            {{#@each}}\n            <div class=\"form-group\">\n            {{#@value.label}}\n            <label>{{#_crlf}}{{{.}}}{{/_crlf}}</label>\n            {{/@value.label}}\n            <input type=\"{{@value.type}}\" placeholder=\"{{@value.placeholder}}\" class=\"form-control {{@value.theme}}\" data-dialog-prompt=\"{{@key}}\" style=\"width:100%;\" value=\"{{@value.value}}\" />\n            {{#@value.help}}\n            <p class=\"help-block\">{{#_crlf}}{{.}}{{/_crlf}}</p>\n            {{/@value.help}}\n            </div>\n            {{/@each}}\n        </div>\n        {{/input}}\n        \n        <div class=\"ax-dialog-buttons\" data-dialog-els=\"buttons\">\n            <div class=\"ax-button-wrap\">\n            {{#btns}}\n                {{#@each}}\n                <button type=\"button\" data-dialog-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{@value.label}}</button>\n                {{/@each}}\n            {{/btns}}\n            </div>\n        </div>\n        \n        {{#additionalContent}}\n        <div data-dialog-els=\"additional-content\">{{{.}}}</div>\n        {{/additionalContent}}\n    </div>\n</div>  \n`;\n};\nconst onStateChanged = function (opts, that) {\n  if (opts && opts.onStateChanged) {\n    opts.onStateChanged.call(that, that);\n  }\n  else if (this.onStateChanged) {\n    this.onStateChanged.call(that, that);\n  }\n\n  opts = null;\n  that = null;\n  return true;\n};\nconst getContent = function (dialogId, opts) {\n  let data = {\n    dialogId: dialogId,\n    title: (opts.title || this.config.title || \"\"),\n    msg: (opts.msg || this.config.msg || \"\").replace(/\\n/g, \"<br/>\"),\n    input: opts.input,\n    btns: opts.btns,\n    '_crlf': function () {\n      return this.replace(/\\n/g, \"<br/>\");\n    },\n    additionalContent: (function (additionalContent) {\n      if (U.isFunction(additionalContent)) {\n        return additionalContent.call(opts);\n      }\n      else {\n        return additionalContent;\n      }\n    })(opts.additionalContent)\n  };\n\n  return mustache.render(dialogTmpl.call(this), data);\n};\nconst open = function (opts, callback) {\n  let pos = {},\n    box = {\n      width: opts.width\n    };\n\n  this.dialogConfig = opts;\n  this.$activeDialog = jQuery(getContent.call(this, opts.id, opts));\n  this.$activeDialog.css({width: box.width});\n\n  if (typeof callback === \"undefined\") {\n    callback = opts.callback;\n  }\n\n  // dialog 높이 구하기 - 너비가 정해지면 높이가 변경 될 것.\n  opts.height = box.height = this.$activeDialog.height();\n\n  //- position 정렬\n  if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n    pos.top = jQuery(window).height() / 2 - box.height / 2;\n    pos.left = jQuery(window).width() / 2 - box.width / 2;\n  }\n  else {\n    pos.left = opts.position.left || 0;\n    pos.top = opts.position.top || 0;\n  }\n  if (this.config.zIndex) {\n    pos[\"z-index\"] = this.config.zIndex;\n  }\n\n  this.$activeDialog\n    .css(pos)\n    .on(opts.clickEventName, \"[data-dialog-btn]\", (e) => {\n      btnOnClick.call(this, e || window.event, opts, callback);\n    })\n    .find(opts.dialogType === \"prompt\" ? \"[data-dialog-prompt]\" : \"[data-dialog-btn]\").trigger(\"focus\");\n\n  jQuery(document.body).append(this.$activeDialog);\n\n  // bind key event\n  jQuery(window)\n    .on(\"keydown.ax6dialog\", (e) => {\n      onKeyup.call(this, e || window.event, opts, callback);\n    })\n    .on(\"resize.ax6dialog\", U.throttle(function (e) {\n      align.call(this, e || window.event);\n    }, 30).bind(this));\n\n  onStateChanged.call(this, opts, {\n    self: this,\n    state: \"open\"\n  });\n\n  if (opts.autoCloseTime) {\n    this.autoCloseTimer = setTimeout(() => {\n      this.close();\n    }, opts.autoCloseTime);\n  }\n\n  pos = null;\n  box = null;\n};\nconst align = function (e) {\n  if (!this.$activeDialog) return this;\n  let opts = this.dialogConfig,\n    box = {\n      width: opts.width,\n      height: opts.height\n    };\n\n  //- position 정렬\n  if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n    box.top = window.innerHeight / 2 - box.height / 2;\n    box.left = window.innerWidth / 2 - box.width / 2;\n  }\n  else {\n    box.left = opts.position.left || 0;\n    box.top = opts.position.top || 0;\n  }\n  if (box.left < 0) box.left = 0;\n  if (box.top < 0) box.top = 0;\n\n  this.$activeDialog.css(box);\n\n  opts = null;\n  box = null;\n\n  return this;\n};\nconst btnOnClick = function (e, opts, callback, target, k) {\n  let that,\n    emptyKey = null;\n\n  if (e.srcElement) e.target = e.srcElement;\n\n  target = U.findParentNode(e.target, function (target) {\n    if (target.getAttribute(\"data-dialog-btn\")) {\n      return true;\n    }\n  });\n\n  if (target) {\n    k = target.getAttribute(\"data-dialog-btn\");\n\n    that = {\n      self: this,\n      key: k, value: opts.btns[k],\n      dialogId: opts.id,\n      btnTarget: target\n    };\n    if (opts.dialogType === \"prompt\") {\n      for (let oi in opts.input) {\n        that[oi] = this.$activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n        if (that[oi] == \"\" || that[oi] == null) {\n          emptyKey = oi;\n          break;\n        }\n      }\n    }\n    if (opts.btns[k].onClick) {\n      opts.btns[k].onClick.call(that, that);\n    }\n    else if (opts.dialogType === \"alert\") {\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n    else if (opts.dialogType === \"confirm\") {\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n    else if (opts.dialogType === \"prompt\") {\n      if (k === 'ok') {\n        if (emptyKey) {\n          this.$activeDialog.find('[data-dialog-prompt=\"' + emptyKey + '\"]').get(0).focus();\n          return false;\n        }\n      }\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n  }\n\n  that = null;\n  opts = null;\n  callback = null;\n  target = null;\n  k = null;\n};\nconst onKeyup = function (e, opts, callback, target, k) {\n  let that,\n    emptyKey = null;\n\n  if (e.keyCode == info.eventKeys.ESC) {\n    this.close();\n  }\n  if (opts.dialogType === \"prompt\") {\n    if (e.keyCode == info.eventKeys.RETURN) {\n      that = {\n        self: this,\n        key: k, value: opts.btns[k],\n        dialogId: opts.id,\n        btnTarget: target\n      };\n\n      for (let oi in opts.input) {\n        that[oi] = this.$activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n        if (that[oi] == \"\" || that[oi] == null) {\n          emptyKey = oi;\n          break;\n        }\n      }\n      if (emptyKey) {\n        that = null;\n        emptyKey = null;\n        return false;\n      }\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n  }\n\n  that = null;\n  emptyKey = null;\n  opts = null;\n  callback = null;\n  target = null;\n  k = null;\n};\n\n/**\n * @class\n */\nclass AX6UIDialog extends AX6UICore {\n  /**\n   * @constructor\n   * @param config\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @member {JSON}\n     * @param config\n     * @param [config.theme='default']\n     * @param [config.width=300]\n     * @param [config.title='']\n     * @param [config.msg='']\n     * @param [config.lang]\n     * @param [config.lang.ok='ok']\n     * @param [config.lang.cancel='cancel']\n     * @param [config.animateTime=150]\n     * @param [config.autoCloseTime=0]\n     * @param [config.onStateChanged]\n     *\n     */\n    this.config = {\n      id: 'ax6-dialog-' + this.instanceId,\n      clickEventName: \"click\",\n      theme: 'default',\n      width: 300,\n      title: 'AX6UIDialog',\n      msg: '',\n      lang: {\n        \"ok\": \"ok\", \"cancel\": \"cancel\"\n      },\n      animateTime: 150,\n      autoCloseTime: 0\n    };\n    jQuery.extend(true, this.config, config);\n\n    // 멤버 변수 초기화\n    /**\n     * dialog가 열려있는 상태에서 다시 open이 되면 queue에 보관 하였다가 close후 open\n     * @member {Array}\n     */\n    this.queue = [];\n    /**\n     * @member {jQueryElement}\n     */\n    this.$activeDialog = null;\n    /**\n     * @member {Object}\n     */\n    this.autoCloseTimer = null;\n\n    this.init();\n  }\n\n  /**\n   * @method\n   * @param config\n   */\n  init() {\n    this.onStateChanged = this.config.onStateChanged;\n    delete this.config.onStateChanged;\n\n    // init 호출 여부\n    this.initOnce();\n  }\n\n  /**\n   * @method\n   */\n  initOnce() {\n    if (this.initialized) return this;\n    this.initialized = true;\n  }\n\n  /**\n   * @method\n   * @param opts\n   * @param callback\n   * @param tryCount\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * import {Dialog} from \"ax6ui\"\n   *\n   * const dialog = new Dialog();\n   * dialog.alert(\"Alert Message\");\n   * dialog.alert({\n     *     title: \"Title\",\n     *     msg: \"Alert Message\"\n     * });\n   * ```\n   */\n  alert(opts, callback, tryCount) {\n    if (typeof opts === \"undefined\") {\n      opts = {\n        title: this.config.title,\n        msg: \"\"\n      }\n    } else if (U.isString(opts)) {\n      opts = {\n        title: this.config.title,\n        msg: opts\n      }\n    }\n\n    opts = jQuery.extend(true, {}, this.config, opts, {\n      dialogType: \"alert\",\n      callback: callback\n    });\n\n    if (typeof opts.btns === \"undefined\") {\n      opts.btns = {\n        ok: {label: opts.lang[\"ok\"], theme: opts.theme}\n      };\n    }\n\n    if (this.$activeDialog) {\n      this.queue.push(opts);\n    } else {\n      open.call(this, opts, callback);\n    }\n  }\n\n  /**\n   * @method\n   * @param opts\n   * @param callback\n   * @param tryCount\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * import {Dialog} from \"ax6ui\"\n   *\n   * const dialog = new Dialog();\n   * dialog.confirm({\n     *     title: \"확인\",\n     *     msg: \"확인 또는 취소를 누르세요\"\n     * }, function (res) {\n     *     //console.log(this, a, b);\n     *     if(res.key == \"ok\"){\n     *         console.log(\"OK\");\n     *     }\n     *     else if(res.key == \"cancel\"){\n     *         console.log(\"CANCEL\");\n     *     }\n     * });\n   *\n   * // btns custom\n   * dialog.config({\n     *  title: \"예/아니오\",\n     *  msg: \"당신은 개발자 입니까?\",\n     *  btns: {\n     *      Y: {label: \"예\"},\n     *      N: {label: \"아니오\"}\n     *  }\n     * }, function (res) {\n     *      console.log(res);\n     * });\n   * ```\n   */\n  confirm(opts, callback, tryCount) {\n    if (typeof opts === \"undefined\") {\n      opts = {\n        title: this.config.title,\n        msg: \"\"\n      }\n    } else if (U.isString(opts)) {\n      opts = {\n        title: this.config.title,\n        msg: opts\n      }\n    }\n\n    opts = jQuery.extend(true, {}, this.config, opts, {\n      dialogType: \"confirm\",\n      callback: callback\n    });\n\n    if (typeof opts.btns === \"undefined\") {\n      opts.btns = {\n        ok: {label: opts.lang[\"ok\"], theme: opts.theme},\n        cancel: {label: opts.lang[\"cancel\"]}\n      };\n    }\n\n    if (this.$activeDialog) {\n      this.queue.push(opts);\n    } else {\n      open.call(this, opts, callback);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param opts\n   * @param callback\n   * @param tryCount\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * import {Dialog} from \"ax6ui\"\n   *\n   * const dialog = new Dialog();\n   *\n   * dialog.prompt({\n     *  title: \"prompt\",\n     *  msg: '다음의 값을 입력하세요.',\n     *  input: {\n     *      data1: {label: \"data1의 라벨\", type: \"password\"},\n     *      data2: {label: \"data2의 라벨\"}\n     *  }\n     * }, function(res){\n     *      console.log(res);\n     * });\n   * ```\n   */\n  prompt(opts, callback, tryCount) {\n    if (typeof opts === \"undefined\") {\n      opts = {\n        title: this.config.title,\n        msg: \"\"\n      }\n    } else if (U.isString(opts)) {\n      opts = {\n        title: this.config.title,\n        msg: opts\n      }\n    }\n\n    opts = jQuery.extend(true, {}, this.config, opts, {\n      dialogType: \"prompt\",\n      callback: callback\n    });\n\n    if (typeof opts.input === \"undefined\") {\n      opts.input = {\n        value: {label: \"\"}\n      };\n    }\n    if (typeof opts.btns === \"undefined\") {\n      opts.btns = {\n        ok: {label: opts.lang[\"ok\"], theme: opts.theme},\n        cancel: {label: opts.lang[\"cancel\"]}\n      };\n    }\n\n    if (this.$activeDialog) {\n      this.queue.push(opts);\n    } else {\n      open.call(this, opts, callback);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param _option\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * dialog.close();\n   * dialog.close({callback: function(){\n     *\n     * });\n     * ```\n     */\n  close(_option) {\n    let opts, that;\n\n    if (this.$activeDialog) {\n      if (this.autoCloseTimer) clearTimeout(this.autoCloseTimer);\n\n      opts = this.dialogConfig;\n\n      this.$activeDialog.addClass(\"destroy\");\n      jQuery(window)\n        .off(\"keydown.ax6dialog\")\n        .off(\"resize.ax6dialog\");\n\n      setTimeout((function () {\n        if (this.$activeDialog) {\n          this.$activeDialog.remove();\n          this.$activeDialog = null;\n        }\n\n        that = {\n          self: this,\n          state: \"close\",\n          dialogId: opts.id\n        };\n\n        if (_option && U.isFunction(_option.callback)) {\n          _option.callback.call(that, that);\n        } else if (opts.callback && (!_option || !_option.doNotCallback)) {\n          opts.callback.call(that, that);\n        }\n\n        if (opts && opts.onStateChanged) {\n          opts.onStateChanged.call(that, that);\n        }\n        else if (this.onStateChanged) {\n          this.onStateChanged.call(that, that);\n        }\n\n        // 열려야 할 큐가 남아 있다면 큐아이템으로 다시 open\n        if (this.queue && this.queue.length) {\n          open.call(this, this.queue.shift());\n        }\n\n        opts = null;\n        that = null;\n      }).bind(this), this.config.animateTime);\n    }\n    return this;\n  }\n}\n\nexport default AX6UIDialog;"]}