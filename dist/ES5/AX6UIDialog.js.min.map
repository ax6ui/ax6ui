{"version":3,"sources":["AX6UIDialog.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Util","_AX6Info","_AX6Mustache","dialogTmpl","columnKeys","that","opts","onStateChanged","call","data","dialogId","input","btns","getContent","additionalContent","title","msg","this","config","replace","_crlf","render","_AX6Util2","default","isFunction","callback","width","dialogConfig","open","$activeDialog","css","pos","box","_jqmin2","id","height","document","body","append","position","top","window","left","find","dialogType","zIndex","onKeyup","e","self","event","trigger","on","_this","throttle","align","autoCloseTime","autoCloseTimer","setTimeout","close","btnOnClick","innerHeight","innerWidth","srcElement","target","getAttribute","k","key","value","btnTarget","oi","emptyKey","doNotCallback","val","onClick","keyCode","get","focus","_AX6Info2","eventKeys","ESC","AX6UIDialog","_classCallCheck","_this2","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","instanceId","clickEventName","theme","queue","lang","ok","cancel","animateTime","init","initOnce","initialized","tryCount","isString","extend","label","push","_option","clearTimeout","addClass","off","state","length","shift","bind"],"mappings":"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","file":"AX6UIDialog.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport U from \"./AX6Util.js\";\nimport info from \"./AX6Info.js\";\nimport mustache from \"./AX6Mustache.js\";\nimport \"./AX6UIDialog/index.scss\";\n\nconst dialogTmpl = function (columnKeys) {\n  return ` \n<div id=\"{{dialogId}}\" data-dialog-els=\"root\" data-ax6ui-dialog=\"\" class=\"{{theme}}\">\n    <div class=\"ax-dialog-header\" data-dialog-els=\"header\">\n        {{{title}}}\n    </div>\n    <div class=\"ax-dialog-body\" data-dialog-els=\"body\">\n        <div class=\"ax-dialog-msg\">{{{msg}}}</div>\n        \n        {{#input}}\n        <div class=\"ax-dialog-prompt\">\n            {{#@each}}\n            <div class=\"form-group\">\n            {{#@value.label}}\n            <label>{{#_crlf}}{{{.}}}{{/_crlf}}</label>\n            {{/@value.label}}\n            <input type=\"{{@value.type}}\" placeholder=\"{{@value.placeholder}}\" class=\"form-control {{@value.theme}}\" data-dialog-prompt=\"{{@key}}\" style=\"width:100%;\" value=\"{{@value.value}}\" />\n            {{#@value.help}}\n            <p class=\"help-block\">{{#_crlf}}{{.}}{{/_crlf}}</p>\n            {{/@value.help}}\n            </div>\n            {{/@each}}\n        </div>\n        {{/input}}\n        \n        <div class=\"ax-dialog-buttons\" data-dialog-els=\"buttons\">\n            <div class=\"ax-button-wrap\">\n            {{#btns}}\n                {{#@each}}\n                <button type=\"button\" data-dialog-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{@value.label}}</button>\n                {{/@each}}\n            {{/btns}}\n            </div>\n        </div>\n        \n        {{#additionalContent}}\n        <div data-dialog-els=\"additional-content\">{{{.}}}</div>\n        {{/additionalContent}}\n    </div>\n</div>  \n`;\n};\nconst onStateChanged = function (opts, that) {\n  if (opts && opts.onStateChanged) {\n    opts.onStateChanged.call(that, that);\n  }\n  else if (this.onStateChanged) {\n    this.onStateChanged.call(that, that);\n  }\n\n  opts = null;\n  that = null;\n  return true;\n};\nconst getContent = function (dialogId, opts) {\n  let data = {\n    dialogId: dialogId,\n    title: (opts.title || this.config.title || \"\"),\n    msg: (opts.msg || this.config.msg || \"\").replace(/\\n/g, \"<br/>\"),\n    input: opts.input,\n    btns: opts.btns,\n    '_crlf': function () {\n      return this.replace(/\\n/g, \"<br/>\");\n    },\n    additionalContent: (function (additionalContent) {\n      if (U.isFunction(additionalContent)) {\n        return additionalContent.call(opts);\n      }\n      else {\n        return additionalContent;\n      }\n    })(opts.additionalContent)\n  };\n\n  return mustache.render(dialogTmpl.call(this), data);\n};\nconst open = function (opts, callback) {\n  let pos = {},\n    box = {\n      width: opts.width\n    };\n\n  this.dialogConfig = opts;\n  this.$activeDialog = jQuery(getContent.call(this, opts.id, opts));\n  this.$activeDialog.css({width: box.width});\n  jQuery(document.body).append(this.$activeDialog);\n\n  if (typeof callback === \"undefined\") {\n    callback = opts.callback;\n  }\n\n  // dialog 높이 구하기 - 너비가 정해지면 높이가 변경 될 것.\n  opts.height = box.height = this.$activeDialog.height();\n\n  //- position 정렬\n  if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n    pos.top = jQuery(window).height() / 2 - box.height / 2;\n    pos.left = jQuery(window).width() / 2 - box.width / 2;\n  }\n  else {\n    pos.left = opts.position.left || 0;\n    pos.top = opts.position.top || 0;\n  }\n  if (this.config.zIndex) {\n    pos[\"z-index\"] = this.config.zIndex;\n  }\n\n  this.$activeDialog\n    .css(pos)\n    .on(opts.clickEventName, \"[data-dialog-btn]\", (e) => {\n      btnOnClick.call(this, e || window.event, opts, callback);\n    })\n    .find(opts.dialogType === \"prompt\" ? \"[data-dialog-prompt]\" : \"[data-dialog-btn]\").trigger(\"focus\");\n\n\n\n  // bind key event\n  jQuery(window)\n    .on(\"keydown.ax6dialog\", (e) => {\n      onKeyup.call(this, e || window.event, opts, callback);\n    })\n    .on(\"resize.ax6dialog\", U.throttle(function (e) {\n      align.call(this, e || window.event);\n    }, 30).bind(this));\n\n  onStateChanged.call(this, opts, {\n    self: this,\n    state: \"open\"\n  });\n\n  if (opts.autoCloseTime) {\n    this.autoCloseTimer = setTimeout(() => {\n      this.close();\n    }, opts.autoCloseTime);\n  }\n\n  pos = null;\n  box = null;\n};\nconst align = function (e) {\n  if (!this.$activeDialog) return this;\n  let opts = this.dialogConfig,\n    box = {\n      width: opts.width,\n      height: opts.height\n    };\n\n  //- position 정렬\n  if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n    box.top = window.innerHeight / 2 - box.height / 2;\n    box.left = window.innerWidth / 2 - box.width / 2;\n  }\n  else {\n    box.left = opts.position.left || 0;\n    box.top = opts.position.top || 0;\n  }\n  if (box.left < 0) box.left = 0;\n  if (box.top < 0) box.top = 0;\n\n  this.$activeDialog.css(box);\n\n  opts = null;\n  box = null;\n\n  return this;\n};\nconst btnOnClick = function (e, opts, callback, target, k) {\n  let that,\n    emptyKey = null;\n\n  if (e.srcElement) e.target = e.srcElement;\n\n  target = U.findParentNode(e.target, function (target) {\n    if (target.getAttribute(\"data-dialog-btn\")) {\n      return true;\n    }\n  });\n\n  if (target) {\n    k = target.getAttribute(\"data-dialog-btn\");\n\n    that = {\n      self: this,\n      key: k, value: opts.btns[k],\n      dialogId: opts.id,\n      btnTarget: target\n    };\n    if (opts.dialogType === \"prompt\") {\n      for (let oi in opts.input) {\n        that[oi] = this.$activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n        if (that[oi] == \"\" || that[oi] == null) {\n          emptyKey = oi;\n          break;\n        }\n      }\n    }\n    if (opts.btns[k].onClick) {\n      opts.btns[k].onClick.call(that, that);\n    }\n    else if (opts.dialogType === \"alert\") {\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n    else if (opts.dialogType === \"confirm\") {\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n    else if (opts.dialogType === \"prompt\") {\n      if (k === 'ok') {\n        if (emptyKey) {\n          this.$activeDialog.find('[data-dialog-prompt=\"' + emptyKey + '\"]').get(0).focus();\n          return false;\n        }\n      }\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n  }\n\n  that = null;\n  opts = null;\n  callback = null;\n  target = null;\n  k = null;\n};\nconst onKeyup = function (e, opts, callback, target, k) {\n  let that,\n    emptyKey = null;\n\n  if (e.keyCode == info.eventKeys.ESC) {\n    this.close();\n  }\n  if (opts.dialogType === \"prompt\") {\n    if (e.keyCode == info.eventKeys.RETURN) {\n      that = {\n        self: this,\n        key: k, value: opts.btns[k],\n        dialogId: opts.id,\n        btnTarget: target\n      };\n\n      for (let oi in opts.input) {\n        that[oi] = this.$activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n        if (that[oi] == \"\" || that[oi] == null) {\n          emptyKey = oi;\n          break;\n        }\n      }\n      if (emptyKey) {\n        that = null;\n        emptyKey = null;\n        return false;\n      }\n      if (callback) callback.call(that, that);\n      this.close({doNotCallback: true});\n    }\n  }\n\n  that = null;\n  emptyKey = null;\n  opts = null;\n  callback = null;\n  target = null;\n  k = null;\n};\n\n/**\n * @class\n */\nclass AX6UIDialog extends AX6UICore {\n  /**\n   * @constructor\n   * @param config\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @member {JSON}\n     * @param config\n     * @param [config.theme='default']\n     * @param [config.width=300]\n     * @param [config.title='']\n     * @param [config.msg='']\n     * @param [config.lang]\n     * @param [config.lang.ok='ok']\n     * @param [config.lang.cancel='cancel']\n     * @param [config.animateTime=150]\n     * @param [config.autoCloseTime=0]\n     * @param [config.onStateChanged]\n     *\n     */\n    this.config = {\n      id: 'ax6-dialog-' + this.instanceId,\n      clickEventName: \"click\",\n      theme: 'default',\n      width: 300,\n      title: 'AX6UIDialog',\n      msg: '',\n      lang: {\n        \"ok\": \"ok\", \"cancel\": \"cancel\"\n      },\n      animateTime: 150,\n      autoCloseTime: 0\n    };\n    jQuery.extend(true, this.config, config);\n\n    // 멤버 변수 초기화\n    /**\n     * dialog가 열려있는 상태에서 다시 open이 되면 queue에 보관 하였다가 close후 open\n     * @member {Array}\n     */\n    this.queue = [];\n    /**\n     * @member {jQueryElement}\n     */\n    this.$activeDialog = null;\n    /**\n     * @member {Object}\n     */\n    this.autoCloseTimer = null;\n\n    this.init();\n  }\n\n  /**\n   * @method\n   * @param config\n   */\n  init() {\n    this.onStateChanged = this.config.onStateChanged;\n    delete this.config.onStateChanged;\n\n    // init 호출 여부\n    this.initOnce();\n  }\n\n  /**\n   * @method\n   */\n  initOnce() {\n    if (this.initialized) return this;\n    this.initialized = true;\n  }\n\n  /**\n   * @method\n   * @param opts\n   * @param callback\n   * @param tryCount\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * import {Dialog} from \"ax6ui\"\n   *\n   * const dialog = new Dialog();\n   * dialog.alert(\"Alert Message\");\n   * dialog.alert({\n     *     title: \"Title\",\n     *     msg: \"Alert Message\"\n     * });\n   * ```\n   */\n  alert(opts, callback, tryCount) {\n    if (typeof opts === \"undefined\") {\n      opts = {\n        title: this.config.title,\n        msg: \"\"\n      }\n    } else if (U.isString(opts)) {\n      opts = {\n        title: this.config.title,\n        msg: opts\n      }\n    }\n\n    opts = jQuery.extend(true, {}, this.config, opts, {\n      dialogType: \"alert\",\n      callback: callback\n    });\n\n    if (typeof opts.btns === \"undefined\") {\n      opts.btns = {\n        ok: {label: opts.lang[\"ok\"], theme: opts.theme}\n      };\n    }\n\n    if (this.$activeDialog) {\n      this.queue.push(opts);\n    } else {\n      open.call(this, opts, callback);\n    }\n  }\n\n  /**\n   * @method\n   * @param opts\n   * @param callback\n   * @param tryCount\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * import {Dialog} from \"ax6ui\"\n   *\n   * const dialog = new Dialog();\n   * dialog.confirm({\n     *     title: \"확인\",\n     *     msg: \"확인 또는 취소를 누르세요\"\n     * }, function (res) {\n     *     //console.log(this, a, b);\n     *     if(res.key == \"ok\"){\n     *         console.log(\"OK\");\n     *     }\n     *     else if(res.key == \"cancel\"){\n     *         console.log(\"CANCEL\");\n     *     }\n     * });\n   *\n   * // btns custom\n   * dialog.config({\n     *  title: \"예/아니오\",\n     *  msg: \"당신은 개발자 입니까?\",\n     *  btns: {\n     *      Y: {label: \"예\"},\n     *      N: {label: \"아니오\"}\n     *  }\n     * }, function (res) {\n     *      console.log(res);\n     * });\n   * ```\n   */\n  confirm(opts, callback, tryCount) {\n    if (typeof opts === \"undefined\") {\n      opts = {\n        title: this.config.title,\n        msg: \"\"\n      }\n    } else if (U.isString(opts)) {\n      opts = {\n        title: this.config.title,\n        msg: opts\n      }\n    }\n\n    opts = jQuery.extend(true, {}, this.config, opts, {\n      dialogType: \"confirm\",\n      callback: callback\n    });\n\n    if (typeof opts.btns === \"undefined\") {\n      opts.btns = {\n        ok: {label: opts.lang[\"ok\"], theme: opts.theme},\n        cancel: {label: opts.lang[\"cancel\"]}\n      };\n    }\n\n    if (this.$activeDialog) {\n      this.queue.push(opts);\n    } else {\n      open.call(this, opts, callback);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param opts\n   * @param callback\n   * @param tryCount\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * import {Dialog} from \"ax6ui\"\n   *\n   * const dialog = new Dialog();\n   *\n   * dialog.prompt({\n     *  title: \"prompt\",\n     *  msg: '다음의 값을 입력하세요.',\n     *  input: {\n     *      data1: {label: \"data1의 라벨\", type: \"password\"},\n     *      data2: {label: \"data2의 라벨\"}\n     *  }\n     * }, function(res){\n     *      console.log(res);\n     * });\n   * ```\n   */\n  prompt(opts, callback, tryCount) {\n    if (typeof opts === \"undefined\") {\n      opts = {\n        title: this.config.title,\n        msg: \"\"\n      }\n    } else if (U.isString(opts)) {\n      opts = {\n        title: this.config.title,\n        msg: opts\n      }\n    }\n\n    opts = jQuery.extend(true, {}, this.config, opts, {\n      dialogType: \"prompt\",\n      callback: callback\n    });\n\n    if (typeof opts.input === \"undefined\") {\n      opts.input = {\n        value: {label: \"\"}\n      };\n    }\n    if (typeof opts.btns === \"undefined\") {\n      opts.btns = {\n        ok: {label: opts.lang[\"ok\"], theme: opts.theme},\n        cancel: {label: opts.lang[\"cancel\"]}\n      };\n    }\n\n    if (this.$activeDialog) {\n      this.queue.push(opts);\n    } else {\n      open.call(this, opts, callback);\n    }\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @param _option\n   * @return {AX6UIDialog}\n   * @example\n   * ```js\n   * dialog.close();\n   * dialog.close({callback: function(){\n     *\n     * });\n     * ```\n     */\n  close(_option) {\n    let opts, that;\n\n    if (this.$activeDialog) {\n      if (this.autoCloseTimer) clearTimeout(this.autoCloseTimer);\n\n      opts = this.dialogConfig;\n\n      this.$activeDialog.addClass(\"destroy\");\n      jQuery(window)\n        .off(\"keydown.ax6dialog\")\n        .off(\"resize.ax6dialog\");\n\n      setTimeout((function () {\n        if (this.$activeDialog) {\n          this.$activeDialog.remove();\n          this.$activeDialog = null;\n        }\n\n        that = {\n          self: this,\n          state: \"close\",\n          dialogId: opts.id\n        };\n\n        if (_option && U.isFunction(_option.callback)) {\n          _option.callback.call(that, that);\n        } else if (opts.callback && (!_option || !_option.doNotCallback)) {\n          opts.callback.call(that, that);\n        }\n\n        if (opts && opts.onStateChanged) {\n          opts.onStateChanged.call(that, that);\n        }\n        else if (this.onStateChanged) {\n          this.onStateChanged.call(that, that);\n        }\n\n        // 열려야 할 큐가 남아 있다면 큐아이템으로 다시 open\n        if (this.queue && this.queue.length) {\n          open.call(this, this.queue.shift());\n        }\n\n        opts = null;\n        that = null;\n      }).bind(this), this.config.animateTime);\n    }\n    return this;\n  }\n}\n\nexport default AX6UIDialog;"]}