{"version":3,"sources":["AX6UIMask.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Mustache","getBodyTmpl","data","columnKeys","_AX6Mustache2","default","render","call","this","onStateChanged","opts","that","setBody","content","maskContent","AX6UIMask","config","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","theme","target","_jqmin2","document","body","get","animateTime","extend","status","activeConfig","init","onClick","initOnce","initialized","options","_this2","close","_cfg","$target","maskId","instanceId","$mask","css","templateName","trim","append","position","left","offset","top","width","outerWidth","height","outerHeight","addClass","on","e","align","zIndex","self","state","type","_close","remove","window","off","delay","removeClass","setTimeout","bind"],"mappings":"2/BAAAA,OAAAC,QAAA,gDACAC,YAAAD,QAAA,kEACAE,aAAAF,QAAA,uEACAA,QAAA,0BAEA,IAAMG,YAAc,SAAUC,EAAMC,GAahC,OAAOC,cAAAC,QAASC,OAZI,SAASH,GACzB,MAAA,6UAW+BI,KAAKC,KAAML,GAAaD,IAf/DO,eAAA,SAAAC,EAAAC,GAEMV,OAgBES,GAAQA,EAAKD,eACbC,EAAKD,eAAeF,KAAKI,EAAMA,GAE1BH,KAAKC,gBACVD,KAAKC,eAAeF,KAAKI,EAAMA,GAGnCD,EAAO,KACPC,EAAO,MAxBLV,GAEEW,QAAA,SAAAC,GAUHL,KAXDM,YAAAD,GAeAE,sBA6BA,SAAAA,EAAYC,GAAQC,gBAAAT,KAAAO,GAAA,IAAAG,EAAAC,2BAAAX,MAAAO,EAAAK,WAAAC,OAAAC,eAAAP,IAAAR,KAAAC,OAAA,OAchBU,EAAKF,QACDO,MAAO,GACPC,QAAQ,EAAAC,QAAApB,SAAOqB,SAASC,MAAMC,IAAI,GAClCC,YAAa,KAjBDJ,QAAApB,QAAAyB,QAAA,EAAAZ,EAAAF,OAAAA,GAyBhBE,EAAKJ,YAAc,GAInBI,EAAKa,OAAS,MAIdb,EAAKc,qBAnBS,IACVT,GADUL,EAAAe,OAdEf,uFA6BhBV,KAAAC,eAAAD,KAAAQ,OAAAP,sBACAD,KAAAQ,OAAAP,eAqBAD,KAAK0B,QAAU1B,KAAKQ,OAAOkB,eACpB1B,KAAKQ,OAAOkB,QAEnBtB,QAAQL,KAAKC,KAAMA,KAAKQ,OAAOH,SAAW,IAlB7CL,KAAA2B,8CA6BG,GAAG3B,KAAK4B,YAAa,OAAO5B,KAC5BA,KAAK4B,aAAc,+BAkBlBC,GAAS,IAAAC,EAAA9B,KAxBd,OAAAA,KAAAuB,QAAAvB,KAAA+B,QA0BI3B,QAAQL,KAAKC,KAAO6B,EAAWA,EAAQxB,SAAW,GAAK,IAEvD,IAAI2B,EAAOf,QAAApB,QAAOyB,QAAO,EAAMtB,KAAKQ,OAAQqB,GACxCb,EAASgB,EAAKhB,OACdiB,GAAU,EAAAhB,QAAApB,SAAOmB,GACjBkB,EAAS,WAAalC,KAAKmC,WAC3BC,OAAAA,EA3BJC,KACAlC,KACHmC,EAAAN,EAAAM,aA6BOnB,EAAO1B,aA3BfsB,MAAAiB,EAAAjB,MA6BYmB,OAAQA,EACRf,KAAMnB,KAAKM,YACXgC,aAAcA,IACfC,OA6BP,OA3BA,EAAAtB,QAAApB,SAAOqB,SAASC,MAAMqB,OAAOrB,GAGzBH,GAAUA,KAAW,EAAAC,QAAApB,SAAOqB,SAASC,MAAMC,IAAI,KAC/CiB,GACII,SAAUT,EAAKS,UAAY,WAC3BC,KAAMT,EAAQU,SAASD,KACvBE,IAAKX,EAAQU,SAASC,IACtBC,MAAOZ,EAAQa,aACfC,OAAQd,EAAQe,eAGpBf,EAAQgB,SA/BXpB,eAEDzB,EAAAA,QAAAA,SAAAA,QAAa8C,GAAb,kBAAuC7C,KAAAA,WAAvC,SAAA8C,GAkCQrB,EAAKsB,gBA7BA,IAATlB,EAAAA,SAHJG,EAIID,WAAAA,EAJJiB,QAAArD,KAAAoC,MAOIE,GAAAA,EAAAA,QAAAA,SAAoBA,IAAAA,GAPxBtC,KAAAiC,QAQWxC,EACHsB,KAAAA,OAAAA,KACAmB,EAAAA,IAAAA,GAEAI,KAAAA,SAJeF,EAKhBG,GAbP,QAAA,SAAAY,GA+CQhD,GAhCRmD,KAAAA,EAkCYC,MAAO,OAhCnBC,KAAA,SAEInB,EAAAA,QAAMtC,KAAAI,EAAAA,KAIF0C,eAAAA,KAAOZ,KAAAA,MACPc,KAAAA,KALEQ,MAAN,SAUAvD,KAAAwB,aAAAQ,EAEAH,EAAA,KACIG,EAAA,KACHhB,EAFD,KAGHiB,EAAA,KAkCDC,EAAS,KAhCTE,EAAI,KACAC,EAAAA,KACHlC,EAAA,KAkCDmC,EAAe,KAhCfnB,EAAA,KAEAnB,mCAQYwD,GAHG,GAAAxD,KAAAoC,MAAP,CAMH,IAAAqB,EAPD,WAQHzD,KAAAuB,OAAA,MAkCOvB,KAAKoC,MAAMsB,SAhCnBzD,KAAAA,QAAeF,YAAW,cAEtBwD,eAAOxD,KAAAC,KAAA,MAFXsD,KAAAtD,KAqCYuD,MAAO,WAGX,EAAAtC,QAAApB,SAAO8D,QAAQC,IAAI,kBAAoB5D,KAAKmC,aA9BpDnB,EACAiB,WAAA,WACAC,EAAAnC,KAAAC,OACAoC,KAAApC,MAAA6D,GAEA1D,EAAAJ,KAAAC,MAoCA,OAAOA,uCAQP,GAAIA,KAAKoC,MAAO,CACZ,IAAIqB,EAAS,WACTzD,KAAKuB,OAAS,MACdvB,KAAKoC,MAAMsB,SACX1D,KAAKiC,QAAQ6B,YApCZ,cAsCD7D,eAAeF,KAAKC,KAAM,MAnC1ByD,KAAAA,KACAF,MAAKhC,WAuCL,EAAAN,QAAApB,SAAO8D,QAAQC,IAAI,kBAAoB5D,KAAKmC,aAnCZnC,KAAAoC,MAAhCa,SAAA,YAwCJc,WAAY,WAnCRN,EAAA1D,KAAAC,OACHgE,KAXDhE,MAAAA,KAAAwB,aAAAH,aAaA,OAAArB,qCAQJ,GAAAA,KAAAoC,OAAApC,KAAAwB,cAAAxB,KAAAwB,aAAAR,QAAAhB,KAAAwB,aAAAR,UAAA,EAAAC,QAAApB,SAAAqB,SAAAC,MAAAC,IAAA,GACH,IAqCW,IAAIiB,GAnChBI,SAAAzC,KAAAwB,aAAAiB,UAAA,WAqCgBC,KAAM1C,KAAKiC,QAAQU,SAASD,KAC5BE,IAAK5C,KAAKiC,QAAQU,SAASC,IAC3BC,MAAO7C,KAAKiC,QAAQa,aACpBC,OAAQ/C,KAAKiC,QAAQe,eAEzBhD,KAAKoC,MAAMC,IAAIA,GACjB,MAAOc,IAnCL,OAAAnD,8BAIIsD","file":"AX6UIMask.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport mustache from \"./AX6Mustache.js\";\nimport \"./AX6UIMask/index.scss\";\n\nconst getBodyTmpl = function (data, columnKeys) {\n    const defaultMask = function(columnKeys) {\n        return `\n            <div data-ax6ui-mask=\"\" class=\"{{theme}}\" id=\"{{maskId}}\">\n                <div class=\"ax-mask-bg\"></div>\n                <div class=\"ax-mask-content\">\n                    <div class=\"ax-mask-body\">\n                    {{{body}}}\n                    </div>\n                </div>\n            </div>\n        `;\n    };\n    return mustache.render(defaultMask.call(this, columnKeys), data);\n};\nconst onStateChanged = function (opts, that) {\n    if (opts && opts.onStateChanged) {\n        opts.onStateChanged.call(that, that);\n    }\n    else if (this.onStateChanged) {\n        this.onStateChanged.call(that, that);\n    }\n\n    opts = null;\n    that = null;\n    return true;\n};\nconst setBody = function (content) {\n    this.maskContent = content;\n};\n\n/**\n * @class\n */\nclass AX6UIMask extends AX6UICore {\n    /**\n     * @constructor\n     * @param config\n     * @param [config.theme]\n     * @param [config.target]\n     * @param [config.animateTime]\n     * @param [config.onStateChanged]\n     * @param [config.onClick]\n     * @param [config.content]\n     */\n    constructor(config) {\n        super();\n\n        /**\n         * @member {JSON}\n         * @param config\n         * @param [config.theme]\n         * @param [config.target=document.body]\n         * @param [config.animateTime=250]\n         * @param [config.onStateChanged]\n         * @param [config.onClick]\n         * @param [config.content]\n         *\n         */\n        this.config = {\n            theme: '',\n            target: jQuery(document.body).get(0),\n            animateTime: 250\n        };\n        jQuery.extend(true, this.config, config);\n\n        // 멤버 변수 초기화\n        /**\n         * @member {String}\n         */\n        this.maskContent = '';\n        /**\n         * @member {String}\n         */\n        this.status = \"off\";\n        /**\n         * @member {JSON}\n         */\n        this.activeConfig = {};\n\n        if(typeof config !== \"undefined\") this.init();\n    }\n\n    /**\n     * @method\n     * @param config\n     * @param [config.theme]\n     * @param [config.target]\n     * @param [config.animateTime]\n     * @param [config.onStateChanged]\n     * @param [config.onClick]\n     * @param [config.content]\n     */\n    init(){\n        this.onStateChanged = this.config.onStateChanged;\n        delete this.config.onStateChanged;\n        this.onClick = this.config.onClick;\n        delete this.config.onClick;\n\n        setBody.call(this, this.config.content || \"\");\n\n        // init 호출 여부\n        this.initOnce();\n    }\n\n    /**\n     * @method\n     * @return {AX6UIMask}\n     */\n    initOnce(){\n        if(this.initialized) return this;\n        this.initialized = true;\n    }\n\n    /**\n     * @method\n     * @param options\n     * @param {number} [options.zIndex] - 마스크 엘리먼트의 z-index 값을 정합니다\n     * @return {AX6UIMask}\n     * @example\n     * ```js\n     * let myMask = new Mask();\n     * myMask.setConfig({\n     *  zIndex: 1000\n     * });\n     *\n     * myMask.open();\n     * ```\n     */\n    open(options) {\n        if (this.status === \"on\") this.close();\n        setBody.call(this, (options) ? options.content || \"\" : \"\");\n\n        let _cfg = jQuery.extend(true, this.config, options),\n            target = _cfg.target,\n            $target = jQuery(target),\n            maskId = 'ax-mask-' + this.instanceId,\n            $mask,\n            css = {},\n            that = {},\n            templateName = _cfg.templateName,\n            body = getBodyTmpl({\n                theme: _cfg.theme,\n                maskId: maskId,\n                body: this.maskContent,\n                templateName: templateName\n            }).trim();\n\n        jQuery(document.body).append(body);\n\n        // 마스크의 타겟이 html body 가 아니라면\n        if (target && target !== jQuery(document.body).get(0)) {\n            css = {\n                position: _cfg.position || \"absolute\",\n                left: $target.offset().left,\n                top: $target.offset().top,\n                width: $target.outerWidth(),\n                height: $target.outerHeight()\n            };\n\n            $target.addClass(\"ax-masking\");\n\n            // 마스크의 타겟이 html body가 아닌경우 window resize 이벤트를 추적하여 엘리먼트 마스크의 CSS 속성 변경\n            \n            jQuery(window).on(\"resize.ax5mask-\" + this.instanceId, (e) => {\n                this.align();\n            });\n        }\n\n        if (typeof _cfg.zIndex !== \"undefined\") {\n            css[\"z-index\"] = _cfg.zIndex;\n        }\n\n        this.$mask = $mask = jQuery(\"#\" + maskId);\n        this.$target = $target;\n        this.status = \"on\";\n        $mask.css(css);\n\n        if (this.onClick) {\n            $mask.on(\"click\", (e) => {\n                that = {\n                    self: this,\n                    state: \"open\",\n                    type: \"click\"\n                };\n                this.onClick.call(that, that);\n            });\n        }\n\n        onStateChanged.call(this, null, {\n            self: this,\n            state: \"open\"\n        });\n\n        // 현재 활성화된 설정 기억\n        this.activeConfig = _cfg;\n\n        options = null;\n        _cfg = null;\n        target = null;\n        $target = null;\n        maskId = null;\n        $mask = null;\n        css = null;\n        that = null;\n        templateName = null;\n        body = null;\n\n        return this;\n    }\n\n    /**\n     * @method\n     * @param delay\n     * @return {AX6UIMask}\n     */\n    close(delay) {\n        if (this.$mask) {\n\n            let _close = function () {\n                this.status = \"off\";\n                this.$mask.remove();\n                this.$target.removeClass(\"ax-masking\");\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"close\"\n                });\n\n                jQuery(window).off(\"resize.ax5mask-\" + this.instanceId);\n            };\n\n            if (delay) {\n                setTimeout((function () {\n                    _close.call(this);\n                }).bind(this), delay);\n            } else {\n                _close.call(this);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @method\n     * @return {AX6UIMask}\n     */\n    fadeOut(){\n        if (this.$mask) {\n            let _close = function () {\n                this.status = \"off\";\n                this.$mask.remove();\n                this.$target.removeClass(\"ax-masking\");\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"close\"\n                });\n\n                jQuery(window).off(\"resize.ax5mask-\" + this.instanceId);\n            };\n\n\n            this.$mask.addClass(\"fade-out\");\n            setTimeout((function () {\n                _close.call(this);\n            }).bind(this), this.activeConfig.animateTime);\n        }\n        return this;\n    }\n\n    /**\n     * @method\n     * @return {AX6UIMask}\n     */\n    align(){\n        if (this.$mask && this.activeConfig && this.activeConfig.target && this.activeConfig.target !== jQuery(document.body).get(0)) {\n            try {\n                let css = {\n                    position: this.activeConfig.position || \"absolute\",\n                    left: this.$target.offset().left,\n                    top: this.$target.offset().top,\n                    width: this.$target.outerWidth(),\n                    height: this.$target.outerHeight()\n                };\n                this.$mask.css(css);\n            } catch (e) {\n\n            }\n        }\n        return this;\n    }\n}\n\nexport default AX6UIMask;"]}