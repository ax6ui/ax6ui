{"version":3,"sources":["AX6UIMask.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Mustache","onStateChanged","opts","that","call","this","getBodyTmpl","data","columnKeys","setBody","maskContent","AX6UIMask","config","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","theme","target","_jqmin2","default","document","body","get","animateTime","extend","status","activeConfig","onClick","content","init","initOnce","initialized","options","_this2","close","_cfg","$target","maskId","instanceId","$mask","css","templateName","trim","append","position","left","offset","top","width","outerWidth","height","outerHeight","addClass","window","on","e","zIndex","self","state","delay","_close","removeClass","off","bind","remove","setTimeout"],"mappings":"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","file":"AX6UIMask.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport mustache from \"./AX6Mustache.js\";\n\nconst onStateChanged = function (opts, that) {\n    if (opts && opts.onStateChanged) {\n        opts.onStateChanged.call(that, that);\n    }\n    else if (this.onStateChanged) {\n        this.onStateChanged.call(that, that);\n    }\n\n    opts = null;\n    that = null;\n    return true;\n};\nconst getBodyTmpl = function (data, columnKeys) {\n    const defaultMask = function(columnKeys) {\n        return `\n            <div class=\"ax-mask {{theme}}\" id=\"{{maskId}}\">\n                <div class=\"ax-mask-bg\"></div>\n                <div class=\"ax-mask-content\">\n                    <div class=\"ax-mask-body\">\n                    {{{body}}}\n                    </div>\n                </div>\n            </div>\n        `;\n    };\n    return mustache.render(defaultMask.call(this, columnKeys), data);\n};\nconst setBody = function (content) {\n    this.maskContent = content;\n};\n\n/**\n * @class\n */\nclass AX6UIMask extends AX6UICore {\n    /**\n     * @constructor\n     * @param config\n     * @param [config.theme]\n     * @param [config.target]\n     * @param [config.animateTime]\n     * @param [config.onStateChanged]\n     * @param [config.onClick]\n     * @param [config.content]\n     */\n    constructor(config) {\n        super();\n\n        /**\n         * @member {JSON}\n         * @param config\n         * @param [config.theme]\n         * @param [config.target=document.body]\n         * @param [config.animateTime=250]\n         * @param [config.onStateChanged]\n         * @param [config.onClick]\n         * @param [config.content]\n         *\n         */\n        this.config = {\n            theme: '',\n            target: jQuery(document.body).get(0),\n            animateTime: 250\n        };\n        jQuery.extend(true, this.config, config);\n\n        // 멤버 변수 초기화\n        /**\n         * @member {String}\n         */\n        this.maskContent = '';\n        /**\n         * @member {String}\n         */\n        this.status = \"off\";\n        /**\n         * @member {JSON}\n         */\n        this.activeConfig = {};\n\n        if(typeof config !== \"undefined\") this.init();\n    }\n\n    /**\n     * @method\n     * @param config\n     * @param [config.theme]\n     * @param [config.target]\n     * @param [config.animateTime]\n     * @param [config.onStateChanged]\n     * @param [config.onClick]\n     * @param [config.content]\n     */\n    init(){\n        this.onStateChanged = this.config.onStateChanged;\n        delete this.config.onStateChanged;\n        this.onClick = this.config.onClick;\n        delete this.config.onClick;\n\n        setBody.call(this, this.config.content || \"\");\n\n        // init 호출 여부\n        this.initOnce();\n    }\n\n    /**\n     * @method\n     * @return {AX6UIMask}\n     */\n    initOnce(){\n        if(this.initialized) return this;\n        this.initialized = true;\n    }\n\n    /**\n     * @method\n     * @param options\n     * @param {number} [options.zIndex] - 마스크 엘리먼트의 z-index 값을 정합니다\n     * @return {AX6UIMask}\n     * @example\n     * ```js\n     * let myMask = new Mask();\n     * myMask.setConfig({\n     *  zIndex: 1000\n     * });\n     *\n     * myMask.open();\n     * ```\n     */\n    open(options) {\n        if (this.status === \"on\") this.close();\n        setBody.call(this, (options) ? options.content || \"\" : \"\");\n\n        let _cfg = jQuery.extend(true, this.config, options),\n            target = _cfg.target,\n            $target = jQuery(target),\n            maskId = 'ax-mask-' + this.instanceId,\n            $mask,\n            css = {},\n            that = {},\n            templateName = _cfg.templateName,\n            body = getBodyTmpl({\n                theme: _cfg.theme,\n                maskId: maskId,\n                body: this.maskContent,\n                templateName: templateName\n            }).trim();\n\n        jQuery(document.body).append(body);\n\n        // 마스크의 타겟이 html body 가 아니라면\n        if (target && target !== jQuery(document.body).get(0)) {\n            css = {\n                position: _cfg.position || \"absolute\",\n                left: $target.offset().left,\n                top: $target.offset().top,\n                width: $target.outerWidth(),\n                height: $target.outerHeight()\n            };\n\n            $target.addClass(\"ax-masking\");\n\n            // 마스크의 타겟이 html body가 아닌경우 window resize 이벤트를 추적하여 엘리먼트 마스크의 CSS 속성 변경\n            \n            jQuery(window).on(\"resize.ax5mask-\" + this.instanceId, (e) => {\n                this.align();\n            });\n        }\n\n        if (typeof _cfg.zIndex !== \"undefined\") {\n            css[\"z-index\"] = _cfg.zIndex;\n        }\n\n        this.$mask = $mask = jQuery(\"#\" + maskId);\n        this.$target = $target;\n        this.status = \"on\";\n        $mask.css(css);\n\n        if (this.onClick) {\n            $mask.on(\"click\", (e) => {\n                that = {\n                    self: this,\n                    state: \"open\",\n                    type: \"click\"\n                };\n                this.onClick.call(that, that);\n            });\n        }\n\n        onStateChanged.call(this, null, {\n            self: this,\n            state: \"open\"\n        });\n\n        // 현재 활성화된 설정 기억\n        this.activeConfig = _cfg;\n\n        options = null;\n        _cfg = null;\n        target = null;\n        $target = null;\n        maskId = null;\n        $mask = null;\n        css = null;\n        that = null;\n        templateName = null;\n        body = null;\n\n        return this;\n    }\n\n    /**\n     * @method\n     * @param delay\n     * @return {AX6UIMask}\n     */\n    close(delay) {\n        if (this.$mask) {\n\n            let _close = function () {\n                this.status = \"off\";\n                this.$mask.remove();\n                this.$target.removeClass(\"ax-masking\");\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"close\"\n                });\n\n                jQuery(window).off(\"resize.ax5mask-\" + this.instanceId);\n            };\n\n            if (delay) {\n                setTimeout((function () {\n                    _close.call(this);\n                }).bind(this), delay);\n            } else {\n                _close.call(this);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @method\n     * @return {AX6UIMask}\n     */\n    fadeOut(){\n        if (this.$mask) {\n            let _close = function () {\n                this.status = \"off\";\n                this.$mask.remove();\n                this.$target.removeClass(\"ax-masking\");\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"close\"\n                });\n\n                jQuery(window).off(\"resize.ax5mask-\" + this.instanceId);\n            };\n\n\n            this.$mask.addClass(\"fade-out\");\n            setTimeout((function () {\n                _close.call(this);\n            }).bind(this), this.activeConfig.animateTime);\n        }\n        return this;\n    }\n\n    /**\n     * @method\n     * @return {AX6UIMask}\n     */\n    align(){\n        if (this.$mask && this.activeConfig && this.activeConfig.target && this.activeConfig.target !== jQuery(document.body).get(0)) {\n            try {\n                let css = {\n                    position: this.activeConfig.position || \"absolute\",\n                    left: this.$target.offset().left,\n                    top: this.$target.offset().top,\n                    width: this.$target.outerWidth(),\n                    height: this.$target.outerHeight()\n                };\n                this.$mask.css(css);\n            } catch (e) {\n\n            }\n        }\n        return this;\n    }\n}\n\nexport default AX6UIMask;"]}