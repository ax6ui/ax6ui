{"version":3,"sources":["AX6UIMask.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Util","_AX6Mustache","getBodyTmpl","data","columnKeys","_AX6Mustache2","default","render","call","this","onStateChanged","opts","that","setBody","content","config","_this","theme","target","_jqmin2","document","body","get","animateTime","extend","maskContent","status","activeConfig","init","onClick","initOnce","initialized","options","_this2","close","_cfg","$target","maskId","instanceId","$mask","css","templateName","trim","append","position","left","offset","top","width","outerWidth","height","outerHeight","addClass","window","on","_AX6Util2","throttle","e","align","bind","zIndex","type","self","removeClass","off","delay","_close","remove","state","AX6UIMask"],"mappings":"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","file":"AX6UIMask.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore.js\";\nimport U from \"./AX6Util\";\nimport mustache from \"./AX6Mustache.js\";\nimport \"./AX6UIMask/index.scss\";\n\nconst getBodyTmpl = function (data, columnKeys) {\n    const defaultMask = function(columnKeys) {\n        return `\n            <div data-ax6ui-mask=\"\" class=\"{{theme}}\" id=\"{{maskId}}\">\n                <div class=\"ax-mask-bg\"></div>\n                <div class=\"ax-mask-content\">\n                    <div class=\"ax-mask-body\">\n                    {{{body}}}\n                    </div>\n                </div>\n            </div>\n        `;\n    };\n    return mustache.render(defaultMask.call(this, columnKeys), data);\n};\nconst onStateChanged = function (opts, that) {\n    if (opts && opts.onStateChanged) {\n        opts.onStateChanged.call(that, that);\n    }\n    else if (this.onStateChanged) {\n        this.onStateChanged.call(that, that);\n    }\n\n    opts = null;\n    that = null;\n    return true;\n};\nconst setBody = function (content) {\n    this.maskContent = content;\n};\n\n/**\n * @class\n */\nclass AX6UIMask extends AX6UICore {\n    /**\n     * @constructor\n     * @param config\n     * @param [config.theme]\n     * @param [config.target]\n     * @param [config.animateTime]\n     * @param [config.onStateChanged]\n     * @param [config.onClick]\n     * @param [config.content]\n     */\n    constructor(config) {\n        super();\n\n        /**\n         * @member {JSON}\n         * @param config\n         * @param [config.theme]\n         * @param [config.target=document.body]\n         * @param [config.animateTime=250]\n         * @param [config.onStateChanged]\n         * @param [config.onClick]\n         * @param [config.content]\n         *\n         */\n        this.config = {\n            theme: '',\n            target: jQuery(document.body).get(0),\n            animateTime: 250\n        };\n        jQuery.extend(true, this.config, config);\n\n        // 멤버 변수 초기화\n        /**\n         * @member {String}\n         */\n        this.maskContent = '';\n        /**\n         * @member {String}\n         */\n        this.status = \"off\";\n        /**\n         * @member {JSON}\n         */\n        this.activeConfig = {};\n\n        if(typeof config !== \"undefined\") this.init();\n    }\n\n    /**\n     * @method\n     * @param config\n     * @param [config.theme]\n     * @param [config.target]\n     * @param [config.animateTime]\n     * @param [config.onStateChanged]\n     * @param [config.onClick]\n     * @param [config.content]\n     */\n    init(){\n        this.onStateChanged = this.config.onStateChanged;\n        delete this.config.onStateChanged;\n        this.onClick = this.config.onClick;\n        delete this.config.onClick;\n\n        setBody.call(this, this.config.content || \"\");\n\n        // init 호출 여부\n        this.initOnce();\n    }\n\n    /**\n     * @method\n     */\n    initOnce(){\n        if(this.initialized) return this;\n        this.initialized = true;\n    }\n\n    /**\n     * @method\n     * @param options\n     * @param {number} [options.zIndex] - 마스크 엘리먼트의 z-index 값을 정합니다\n     * @return {AX6UIMask}\n     * @example\n     * ```js\n     * let myMask = new Mask();\n     * myMask.setConfig({\n     *  zIndex: 1000\n     * });\n     *\n     * myMask.open();\n     * ```\n     */\n    open(options) {\n        if (this.status === \"on\") this.close();\n        setBody.call(this, (options) ? options.content || \"\" : \"\");\n\n        let _cfg = jQuery.extend(true, this.config, options),\n            target = _cfg.target,\n            $target = jQuery(target),\n            maskId = 'ax-mask-' + this.instanceId,\n            $mask,\n            css = {},\n            that = {},\n            templateName = _cfg.templateName,\n            body = getBodyTmpl({\n                theme: _cfg.theme,\n                maskId: maskId,\n                body: this.maskContent,\n                templateName: templateName\n            }).trim();\n\n        jQuery(document.body).append(body);\n\n        // 마스크의 타겟이 html body 가 아니라면\n        if (target && target !== jQuery(document.body).get(0)) {\n            css = {\n                position: _cfg.position || \"absolute\",\n                left: $target.offset().left,\n                top: $target.offset().top,\n                width: $target.outerWidth(),\n                height: $target.outerHeight()\n            };\n\n            $target.addClass(\"ax-masking\");\n\n            // 마스크의 타겟이 html body가 아닌경우 window resize 이벤트를 추적하여 엘리먼트 마스크의 CSS 속성 변경\n            jQuery(window).on(\"resize.ax5mask-\" + this.instanceId, U.throttle(function (e) {\n                this.align();\n            }, 100).bind(this));\n        }\n\n        if (typeof _cfg.zIndex !== \"undefined\") {\n            css[\"z-index\"] = _cfg.zIndex;\n        }\n\n        this.$mask = $mask = jQuery(\"#\" + maskId);\n        this.$target = $target;\n        this.status = \"on\";\n        $mask.css(css);\n\n        if (this.onClick) {\n            $mask.on(\"click\", (e) => {\n                that = {\n                    self: this,\n                    state: \"open\",\n                    type: \"click\"\n                };\n                this.onClick.call(that, that);\n            });\n        }\n\n        onStateChanged.call(this, null, {\n            self: this,\n            state: \"open\"\n        });\n\n        // 현재 활성화된 설정 기억\n        this.activeConfig = _cfg;\n\n        options = null;\n        _cfg = null;\n        target = null;\n        $target = null;\n        maskId = null;\n        $mask = null;\n        css = null;\n        that = null;\n        templateName = null;\n        body = null;\n\n        return this;\n    }\n\n    /**\n     * @method\n     * @param delay\n     * @return {AX6UIMask}\n     */\n    close(delay) {\n        if (this.$mask) {\n\n            let _close = function () {\n                this.status = \"off\";\n                this.$mask.remove();\n                this.$target.removeClass(\"ax-masking\");\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"close\"\n                });\n\n                jQuery(window).off(\"resize.ax5mask-\" + this.instanceId);\n            };\n\n            if (delay) {\n                setTimeout((function () {\n                    _close.call(this);\n                }).bind(this), delay);\n            } else {\n                _close.call(this);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @method\n     * @return {AX6UIMask}\n     */\n    fadeOut(){\n        if (this.$mask) {\n            let _close = function () {\n                this.status = \"off\";\n                this.$mask.remove();\n                this.$target.removeClass(\"ax-masking\");\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"close\"\n                });\n\n                jQuery(window).off(\"resize.ax5mask-\" + this.instanceId);\n            };\n\n\n            this.$mask.addClass(\"fade-out\");\n            setTimeout((function () {\n                _close.call(this);\n            }).bind(this), this.activeConfig.animateTime);\n        }\n        return this;\n    }\n\n    /**\n     * @method\n     * @return {AX6UIMask}\n     */\n    align(){\n        if (this.$mask && this.activeConfig && this.activeConfig.target && this.activeConfig.target !== jQuery(document.body).get(0)) {\n            try {\n                let css = {\n                    position: this.activeConfig.position || \"absolute\",\n                    left: this.$target.offset().left,\n                    top: this.$target.offset().top,\n                    width: this.$target.outerWidth(),\n                    height: this.$target.outerHeight()\n                };\n                this.$mask.css(css);\n            } catch (e) {\n\n            }\n        }\n        return this;\n    }\n}\n\nexport default AX6UIMask;"]}