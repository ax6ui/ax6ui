{"version":3,"sources":["AX6UICalendar.js"],"names":["_jqmin","require","_AX6UICore2","_AX6Info","_AX6Util","_AX6Mustache","frameTmpl","columnKeys","dayTmpl","monthTmpl","that","yearTmpl","config","mode","yy","onStateChanged","opts","call","this","mm","printDay","data","_jqmin2","default","extend","controlCSS","dotDate","tableStartDate","_AX6Util2","cssNumber","dimensions","controlHeight","controlButtonCSS","monthStratDate","css","day","render","loopDate","setDisplay","_this","k","date","displayDate","_k","frameWidth","frameHeight","control","replace","myDate","getFullYear","height","number","lang","months","getMonth","$","html","floor","concat","weekNames","colHeadHeight","yy1","yy2","Number","find","on","clickEventName","e","target","findParentNode","getAttribute","_date","isStartOfWeek","thisDataLabel","itemStyles","addClass","classNames","nowDate","_today","getDay","_this2","startOfWeek","add","d","thisMonth","i","width","Math","itemPadding","_AX6Info2","event","slice","splice","forEach","n","self","action","printedDay","thisDate","return","dateFormat","row","col","getDate","selectable","selectableMap","printMonth","monthHeading","markerMap","theme","defaultMarkerTheme","selectionMap","list","push","_month","isStartOfRow","_loop","thisMonthLabel","_AX6Mustache2","window","onclick","stopEvent","start","end","m","_this3","nMonth","printYear","tableStartMonth","setDigit","yearHeading","_year","nYear","_this4","tableStartYear","removed","colHeadLabel","dt","thisYear","y","thisYearLabel","selection","length","selectableCount","value","selectMode","_this5","multipleSelect","isNumber","removeClass","onClick","applyMarkerMap","applySelectionMap","dateElement","changeMode","clearPeriodMap","move","animateTime","controlButtonWidth","setTimeout","bind","applyPeriodMap","periodMap","label","empty","AX6UICalendar","_this6","setSelection","setSelectable","defaultPeriodTheme","$target","init","_this7","console","log","getError","getFrame","root","control-display","body","processor","map","setMarker","isArray","isPrint","initOnce","initialized","key","changeDate","_this8","range","result","arr","v","count","isDate","obj","isDateFormat","from","to","setDate","marker","isApply","period","Object","keys","_this9","Date","getTime","fromLabel","toLabel"],"mappings":"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","file":"AX6UICalendar.js","sourcesContent":["import jQuery from \"jqmin\";\nimport AX6UICore from \"./AX6UICore\";\nimport info from \"./AX6Info\";\nimport U from \"./AX6Util\";\nimport mustache from \"./AX6Mustache\";\n\n\nconst frameTmpl = function (columnKeys) {\n    return `\n<div class=\"ax6-ui-calendar {{theme}}\" data-calendar-els=\"root\" onselectstart=\"return false;\">\n    {{#control}}\n    <div class=\"calendar-control\" data-calendar-els=\"control\" style=\"{{controlCSS}}\">\n        <a class=\"date-move-left\" data-calendar-move=\"left\" style=\"{{controlButtonCSS}}\">{{{left}}}</a>\n        <div class=\"date-display\" data-calendar-els=\"control-display\" style=\"{{controlCSS}}\"></div>\n        <a class=\"date-move-right\" data-calendar-move=\"right\" style=\"{{controlButtonCSS}}\">{{{right}}}</a>\n    </div>\n    {{/control}}\n    <div class=\"calendar-body\" data-calendar-els=\"body\"></div>\n</div>\n`;\n};\nconst dayTmpl = function (columnKeys) {\n    return `\n<table data-calendar-table=\"day\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\n    <thead>\n        <tr>\n        {{#weekNames}}\n            <td class=\"calendar-col-{{col}}\" style=\"height: {{colHeadHeight}}\">\n            {{label}}\n            </td>\n        {{/weekNames}}\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            {{#list}}    \n            {{#isStartOfWeek}}\n            {{^@first}}\n        </tr>\n        <tr>\n            {{/@first}}\n            {{/isStartOfWeek}}\n            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\n                <a class=\"calendar-item-day {{addClass}}\" data-calendar-item-date=\"{{thisDate}}\">\n                    <span class=\"addon addon-header\"></span>\n                    {{thisDataLabel}}\n                    <span class=\"addon addon-footer\"></span>\n                </a>\n            </td>\n            {{/list}}\n        </tr>\n    </tbody>\n</table>\n`;\n};\nconst monthTmpl = function (columnKeys) {\n    return `\n<table data-calendar-table=\"month\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\n    <thead>\n        <tr>\n            <td class=\"calendar-col-0\" colspan=\"3\" style=\"height: {{colHeadHeight}}\">\n            {{colHeadLabel}}\n            </td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            {{#list}}    \n            {{#isStartOfRow}}\n            {{^@first}}\n        </tr>\n        <tr>\n            {{/@first}}\n            {{/isStartOfRow}}\n            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\n                <a class=\"calendar-item-month {{addClass}}\" data-calendar-item-month=\"{{thisMonth}}\">\n                    <span class=\"addon\"></span>\n                    {{thisMonthLabel}}\n                    <span class=\"lunar\"></span>\n                </a>\n            </td>\n            {{/list}}\n        </tr>\n    </tbody>\n</table>\n`;\n};\nconst yearTmpl = function (columnKeys) {\n    return `\n<table data-calendar-table=\"year\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\n    <thead>\n        <tr>\n            <td class=\"calendar-col-0\" colspan=\"4\" style=\"height: {{colHeadHeight}}\">\n            {{colHeadLabel}}\n            </td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            {{#list}}    \n            {{#isStartOfRow}}\n            {{^@first}}\n        </tr>\n        <tr>\n            {{/@first}}\n            {{/isStartOfRow}}\n            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\n                <a class=\"calendar-item-year {{addClass}}\" data-calendar-item-year=\"{{thisYear}}\">\n                    <span class=\"addon\"></span>\n                    {{thisYearLabel}}\n                    <span class=\"lunar\"></span>\n                </a>\n            </td>\n            {{/list}}\n        </tr>\n    </tbody>\n</table>\n`;\n};\n\nconst onStateChanged = function (opts, that) {\n    if (opts && opts.onStateChanged) {\n        opts.onStateChanged.call(that, that);\n    }\n    else if (this.onStateChanged) {\n        this.onStateChanged.call(that, that);\n    }\n\n    that = null;\n};\nconst getFrame = function () {\n    let data = jQuery.extend(true, {}, this.config, {\n            controlCSS: {},\n            controlButtonCSS: {}\n        });\n\n    data.controlButtonCSS[\"height\"] = data.controlCSS[\"height\"] = U.cssNumber(this.config.dimensions.controlHeight);\n    data.controlButtonCSS[\"line-height\"] = data.controlCSS[\"line-height\"] = U.cssNumber(this.config.dimensions.controlHeight);\n    data.controlButtonCSS[\"width\"] = U.cssNumber(this.config.dimensions.controlHeight);\n\n    data.controlCSS = U.css(data.controlCSS);\n    data.controlButtonCSS = U.css(data.controlButtonCSS);\n\n    try {\n        return mustache.render(frameTmpl.call(this), data);\n    }\n    finally {\n        data = null;\n    }\n};\nconst setDisplay = function () {\n    let myDate = U.date(this.config.displayDate),\n        yy = \"\",\n        mm = \"\",\n        yy1, yy2;\n\n    if (this.config.control) {\n        if (this.config.mode == \"day\" || this.config.mode == \"d\") {\n            yy = (this.config.control.yearTmpl) ? this.config.control.yearTmpl.replace('%s', myDate.getFullYear()) : myDate.getFullYear();\n            mm = (this.config.control.monthTmpl) ? this.config.control.monthTmpl.replace('%s', this.config.lang.months[myDate.getMonth()]) : this.config.lang.months[myDate.getMonth()];\n\n            this.$[\"control-display\"].html((() => {\n                if (this.config.control.yearFirst) {\n                    return '<span data-calendar-display=\"year\">' + yy + '</span>' +\n                        '<span data-calendar-display=\"month\">' + mm + '</span>';\n                }\n                else {\n                    return '<span data-calendar-display=\"month\">' + mm + '</span>' +\n                        '<span data-calendar-display=\"year\">' + yy + '</span>';\n                }\n            })());\n        }\n        else if (this.config.mode == \"month\" || this.config.mode == \"m\") {\n            yy = (this.config.control.yearTmpl) ? this.config.control.yearTmpl.replace('%s', myDate.getFullYear()) : myDate.getFullYear();\n            this.$[\"control-display\"].html('<span data-calendar-display=\"year\">' + yy + '</span>');\n        }\n        else if (this.config.mode == \"year\" || this.config.mode == \"y\") {\n            yy1 = (this.config.control.yearTmpl) ? this.config.control.yearTmpl.replace('%s', myDate.getFullYear() - 10) : myDate.getFullYear() - 10;\n            yy2 = (this.config.control.yearTmpl) ? this.config.control.yearTmpl.replace('%s', Number(myDate.getFullYear()) + 9) : Number(myDate.getFullYear()) + 9;\n            this.$[\"control-display\"].html(yy1 + ' ~ ' + yy2);\n        }\n\n        this.$[\"control-display\"].find('[data-calendar-display]').on(this.config.clickEventName, (function (e) {\n            let target = U.findParentNode(e.target, function (target) {\n                if (target.getAttribute(\"data-calendar-display\")) {\n                    return true;\n                }\n            }), mode;\n            if (target) {\n                mode = target.getAttribute(\"data-calendar-display\");\n                this.changeMode(mode);\n            }\n            target = null;\n            mode = null;\n        }).bind(this));\n    }\n\n    myDate = null;\n    yy = null;\n    mm = null;\n    yy1 = null;\n    yy2 = null;\n    return this;\n};\nconst printDay = function (nowDate) {\n    let dotDate = U.date(nowDate),\n        monthStratDate = new Date(dotDate.getFullYear(), dotDate.getMonth(), 1, 12),\n        _today = this.config.displayDate,\n        tableStartDate = (() => {\n            let day = monthStratDate.getDay();\n            if (day == 0) day = 7;\n            day -= this.config.startOfWeek;\n\n            try {\n                return U.date(monthStratDate, {add: {d: -day}});\n            }\n            finally {\n                day = null;\n            }\n        })(),\n        loopDate,\n        thisMonth = dotDate.getMonth(),\n        itemStyles = {},\n        i,\n        k, _k,\n        frameWidth = this.$[\"body\"].width(),\n        frameHeight = Math.floor(frameWidth * (6 / 7)), // 1week = 7days, 1month = 6weeks\n        data;\n\n    if (this.config.dimensions.height) {\n        frameHeight = U.number(this.config.dimensions.height) - U.number(this.config.dimensions.colHeadHeight);\n    }\n\n    itemStyles['height'] = Math.floor(frameHeight / 6) - U.number(this.config.dimensions.itemPadding) * 2 + 'px';\n    itemStyles['line-height'] = itemStyles['height'];\n    itemStyles['padding'] = U.cssNumber(this.config.dimensions.itemPadding);\n\n    data = {\n        weekNames: [].concat(info.weekNames),\n        list: []\n    };\n\n    if (this.config.startOfWeek) {\n        data.weekNames = data.weekNames.concat(data.weekNames.slice(0, this.config.startOfWeek)).splice(this.config.startOfWeek);\n    }\n\n    data.weekNames.forEach((n) => {\n        n.colHeadHeight = U.cssNumber(this.config.dimensions.colHeadHeight);\n    });\n\n    loopDate = tableStartDate;\n    i = 0;\n    while (i < 6) {\n        k = 0;\n        while (k < 7) {\n            _k = (7 + (k - this.config.startOfWeek)) % 7;\n            let thisDate = '' + U.date(loopDate, {\"return\": this.config.dateFormat}),\n                _date = {\n                    'row': i,\n                    'col': k,\n                    isStartOfWeek: (k == 0),\n                    thisDate: '' + thisDate,\n                    thisDataLabel: this.config.lang.dayTmpl.replace('%s', loopDate.getDate()),\n                    itemStyles: U.css(itemStyles),\n                    addClass: (() => {\n                        let classNames = \"\";\n\n                        if (this.config.selectable) {\n                            if (this.selectableMap[thisDate]) {\n                                classNames += ( loopDate.getMonth() == thisMonth ) ? \" live\" : \"\";\n                            }\n                            else {\n                                classNames += \" disable\";\n                            }\n                        }\n                        else {\n                            if (loopDate.getMonth() == thisMonth) {\n                                if (thisDate == U.date(_today, {\"return\": \"yyyyMMdd\"})) {\n                                    classNames += \" focus\";\n                                } else {\n                                    classNames += \" live\";\n                                }\n\n                                if (loopDate.getDay() == 0) {\n                                    classNames += \" sunday\";\n                                }\n                                if (loopDate.getDay() == 6) {\n                                    classNames += \" saturday\";\n                                }\n                            }\n                        }\n\n                        return classNames;\n                    })()\n                    + ' '\n                    + (() => {\n                        return (this.markerMap[thisDate]) ? this.markerMap[thisDate].theme || this.config.defaultMarkerTheme : '';\n                    })()\n                    + ' '\n                    + (() => {\n                        return (this.selectionMap[thisDate]) ? \"selected-day\" : '';\n                    })()\n                };\n            data.list.push(_date);\n\n            k++;\n            loopDate = U.date(loopDate, {add: {d: 1}});\n\n            thisDate = null;\n            _date = null;\n        }\n        i++;\n    }\n\n    this.$[\"body\"]\n        .html(mustache.render(dayTmpl.call(this), data))\n        .find('[data-calendar-item-date]').on(this.config.clickEventName, (e) => {\n            e = e || window.event;\n            onclick.call(this, e, 'date');\n            U.stopEvent(e);\n        });\n\n    this.printedDay = {\n        start: tableStartDate, end: loopDate\n    };\n\n    onStateChanged.call(this, null, {\n        self: this,\n        action: \"printDay\",\n        printedDay: this.printedDay\n    });\n    setDisplay.call(this);\n\n    dotDate = null;\n    monthStratDate = null;\n    _today = null;\n    tableStartDate = null;\n    loopDate = null;\n    thisMonth = null;\n    itemStyles = null;\n    i = null;\n    k = null;\n    frameWidth = null;\n    frameHeight = null;\n    data = null;\n};\nconst printMonth = function (nowDate) {\n    let dotDate = U.date(nowDate),\n        nMonth = dotDate.getMonth(),\n        itemStyles = {},\n        i,\n        k,\n        m,\n        tableStartMonth,\n        frameWidth = this.$[\"body\"].width(),\n        frameHeight = Math.floor(frameWidth * (6 / 7)),\n        data;\n\n    if (this.config.dimensions.height) {\n        frameHeight = U.number(this.config.dimensions.height) - U.number(this.config.dimensions.colHeadHeight);\n    }\n\n    itemStyles['height'] = Math.floor(frameHeight / 4) - U.number(this.config.dimensions.itemPadding) * 2 + 'px';\n    itemStyles['line-height'] = itemStyles['height'];\n    itemStyles['padding'] = U.cssNumber(this.config.dimensions.itemPadding);\n\n    data = {\n        colHeadHeight: U.cssNumber(this.config.dimensions.colHeadHeight),\n        colHeadLabel: this.config.lang.monthHeading,\n        list: []\n    };\n\n    tableStartMonth = 0;\n    m = 0;\n    i = 0;\n    while (i < 4) {\n        k = 0;\n        while (k < 3) {\n            let _month = {\n                    row: i,\n                    col: k,\n                    isStartOfRow: (k == 0),\n                    thisMonth: dotDate.getFullYear() + '-' + U.setDigit(m + 1, 2) + '-' + U.setDigit(dotDate.getDate(), 2),\n                    thisMonthLabel: this.config.lang.months[m],\n                    itemStyles: U.css(itemStyles),\n                addClass: (() => {\n                        if (this.config.selectable) {\n                            return (this.selectableMap[m]) ? 'live' : 'disable';\n                        }\n                        else {\n                            return 'live';\n                        }\n                    })()\n                    + ' '\n                + (() => {\n                        return ( m == nMonth ) ? \"focus\" : \"\";\n                    })()\n                    + ' '\n                + (() => {\n                    return (this.markerMap[m]) ? this.markerMap[m].theme || this.config.defaultMarkerTheme : '';\n                    })()\n                };\n            data.list.push(_month);\n            m++;\n            k++;\n            _month = null;\n        }\n        i++;\n    }\n\n    this.$[\"body\"]\n        .html(mustache.render(monthTmpl.call(this), data))\n        .find('[data-calendar-item-month]').on(this.config.clickEventName, (e) => {\n        e = e || window.event;\n        onclick.call(this, e, 'month');\n        U.stopEvent(e);\n    });\n\n    this.printedDay = {\n        start: dotDate.getFullYear() + '-' + U.setDigit(tableStartMonth + 1, 2),\n        end: dotDate.getFullYear() + '-' + U.setDigit(m, 2)\n    };\n\n    onStateChanged.call(this, null, {\n        self: this,\n        action: \"printMonth\",\n        printedDay: this.printedDay\n    });\n    setDisplay.call(this);\n\n    dotDate = null;\n    nMonth = null;\n    itemStyles = null;\n    i = null;\n    k = null;\n    m = null;\n    tableStartMonth = null;\n    frameWidth = null;\n    frameHeight = null;\n    data = null;\n};\nconst printYear = function (nowDate) {\n    let dotDate = U.date(nowDate),\n        nYear = dotDate.getFullYear(),\n        itemStyles = {},\n        i,\n        k,\n        y,\n        tableStartYear,\n        frameWidth = this.$[\"body\"].width(),\n        frameHeight = Math.floor(frameWidth * (6 / 7)),\n        data;\n\n    if (this.config.dimensions.height) {\n        frameHeight = U.number(this.config.dimensions.height) - U.number(this.config.dimensions.colHeadHeight);\n    }\n\n    itemStyles['height'] = Math.floor(frameHeight / 5) - U.number(this.config.dimensions.itemPadding) * 2 + 'px';\n    itemStyles['line-height'] = itemStyles['height'];\n    itemStyles['padding'] = U.cssNumber(this.config.dimensions.itemPadding);\n\n    data = {\n        colHeadHeight: U.cssNumber(this.config.dimensions.colHeadHeight),\n        colHeadLabel: this.config.lang.yearHeading,\n        list: []\n    };\n\n    tableStartYear = nYear - 10;\n    y = nYear - 10;\n    i = 0;\n    while (i < 5) {\n        k = 0;\n        while (k < 4) {\n            let _year = {\n                row: i,\n                col: k,\n                isStartOfRow: (k == 0),\n                thisYear: y + '-' + U.setDigit(dotDate.getMonth() + 1, 2) + '-' + U.setDigit(dotDate.getDate(), 2),\n                thisYearLabel: this.config.lang.yearTmpl.replace('%s', (y)),\n                itemStyles: U.css(itemStyles),\n                addClass: (() => {\n                    if (this.config.selectable) {\n                        return (this.selectableMap[y]) ? 'live' : 'disable';\n                    }\n                    else {\n                        return 'live';\n                    }\n                })()\n                + ' '\n                + (() => {\n                    return ( y == nYear ) ? \"focus\" : \"\";\n                })()\n                + ' '\n                + (() => {\n                    return (this.selectableMap[y]) ? this.selectableMap[y].theme || this.config.defaultMarkerTheme : '';\n                })()\n            };\n            data.list.push(_year);\n            y++;\n            k++;\n            _year = null;\n        }\n        i++;\n    }\n\n    this.$[\"body\"]\n        .html(mustache.render(yearTmpl.call(this), data))\n        .find('[data-calendar-item-year]').on(this.config.clickEventName, (e) => {\n        e = (e || window.event);\n        onclick.call(this, e, 'year');\n        U.stopEvent(e);\n    });\n\n    this.printedDay = {\n        start: tableStartYear, end: y - 1\n    };\n\n    onStateChanged.call(this, null, {\n        self: this,\n        action: \"printYear\",\n        printedDay: this.printedDay\n    });\n    setDisplay.call(this);\n\n    dotDate = null;\n    nYear = null;\n    itemStyles = null;\n    i = null;\n    k = null;\n    y = null;\n    tableStartYear = null;\n    frameWidth = null;\n    frameHeight = null;\n    data = null;\n};\nconst onclick = function (e, mode, target, value) {\n    let removed,\n        dt,\n        selectable;\n\n    mode = mode || \"date\";\n    target = U.findParentNode(e.target, function (target) {\n        if (target.getAttribute(\"data-calendar-item-\" + mode)) {\n            return true;\n        }\n    });\n    if (target) {\n        value = target.getAttribute(\"data-calendar-item-\" + mode);\n\n        dt = U.date(value, {\"return\": this.config.dateFormat});\n        selectable = true;\n        this.selectableCount = (this.config.multipleSelect) ? (U.isNumber(this.config.multipleSelect)) ? this.config.multipleSelect : 2 : 1;\n\n        if (this.config.selectable) {\n            if (!this.selectableMap[dt]) selectable = false;\n        }\n\n        if (mode == \"date\") {\n            if (selectable) {\n\n                if (this.selection.length >= this.selectableCount) {\n                    removed = this.selection.splice(0, this.selection.length - (this.selectableCount - 1));\n                    removed.forEach((d) => {\n                        this.$[\"body\"].find('[data-calendar-item-date=\"' + U.date(d, {\"return\": this.config.dateFormat}) + '\"]').removeClass(\"selected-day\");\n                    });\n                }\n\n                jQuery(target).addClass(\"selected-day\");\n                this.selection.push(value);\n\n                if (this.onClick) {\n                    this.onClick.call({\n                        self: this, date: value, target: this.target, dateElement: target\n                    });\n                }\n            }\n        }\n        else if (mode == \"month\") {\n            if (this.config.selectMode == \"month\") {\n                if (selectable) {\n                    if (this.selection.length >= this.selectableCount) {\n                        removed = this.selection.splice(0, this.selection.length - (this.selectableCount - 1));\n                        removed.forEach((d) => {\n                            this.$[\"body\"].find('[data-calendar-item-month=\"' + U.date(d, {\"return\": 'yyyy-MM-dd'}) + '\"]').removeClass(\"selected-month\");\n                        });\n                    }\n\n                    jQuery(target).addClass(\"selected-month\");\n                    this.selection.push(value);\n\n                    if (this.onClick) {\n                        this.onClick.call({\n                            self: this, date: value, target: this.target, dateElement: target\n                        });\n                    }\n                }\n            }\n            else {\n                this.changeMode(\"day\", value);\n            }\n        }\n        else if (mode == \"year\") {\n            if (this.config.selectMode == \"year\") {\n                if (selectable) {\n                    if (this.selection.length >= this.selectableCount) {\n                        removed = this.selection.splice(0, this.selection.length - (this.selectableCount - 1));\n                        removed.forEach((d) => {\n                            this.$[\"body\"].find('[data-calendar-item-year=\"' + U.date(d, {\"return\": 'yyyy-MM-dd'}) + '\"]').removeClass(\"selected-year\");\n                        });\n                    }\n\n                    jQuery(target).addClass(\"selected-year\");\n                    this.selection.push(value);\n\n                    if (this.onClick) {\n                        this.onClick.call({\n                            self: this, date: value, target: this.target, dateElement: target\n                        });\n                    }\n                }\n            }\n            else {\n                this.changeMode(\"month\", value);\n            }\n        }\n    }\n\n    mode = null;\n    target = null;\n    value = null;\n    removed = null;\n    dt = null;\n    selectable = null;\n};\nconst move = function (e, target, value) {\n    target = U.findParentNode(e.target, function (target) {\n        if (target.getAttribute(\"data-calendar-move\")) {\n            return true;\n        }\n    });\n    if (target) {\n        value = target.getAttribute(\"data-calendar-move\");\n        if (this.config.mode == \"day\" || this.config.mode == \"d\") {\n            if (value == \"left\") {\n                this.config.displayDate = U.date(this.config.displayDate, {add: {m: -1}});\n            }\n            else {\n                this.config.displayDate = U.date(this.config.displayDate, {add: {m: 1}});\n            }\n            printDay.call(this, this.config.displayDate);\n        }\n        else if (this.config.mode == \"month\" || this.config.mode == \"m\") {\n            if (value == \"left\") {\n                this.config.displayDate = U.date(this.config.displayDate, {add: {y: -1}});\n            }\n            else {\n                this.config.displayDate = U.date(this.config.displayDate, {add: {y: 1}});\n            }\n            printMonth.call(this, this.config.displayDate);\n        }\n        else if (this.config.mode == \"year\" || this.config.mode == \"y\") {\n            if (value == \"left\") {\n                this.config.displayDate = U.date(this.config.displayDate, {add: {y: -10}});\n            }\n            else {\n                this.config.displayDate = U.date(this.config.displayDate, {add: {y: 10}});\n            }\n            printYear.call(this, this.config.displayDate);\n        }\n    }\n\n    target = null;\n    value = null;\n};\nconst applyMarkerMap = function () {\n    setTimeout((function () {\n        if (this.config.mode === \"day\" || this.config.mode === \"d\") {\n            for (let k in this.markerMap) {\n                this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(this.markerMap[k].theme || this.config.defaultMarkerTheme);\n            }\n        }\n    }).bind(this));\n};\nconst applySelectionMap = function () {\n    setTimeout((function () {\n        for (let k in this.selectionMap) {\n            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(\"selected-day\");\n        }\n    }).bind(this));\n};\nconst applyPeriodMap = function () {\n    setTimeout((function () {\n        if (this.config.mode === \"day\" || this.config.mode === \"d\") {\n            for (let k in this.periodMap) {\n                if (this.periodMap[k].label) {\n                    this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').find(\".addon-footer\").html(this.periodMap[k].label);\n                }\n                this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(this.periodMap[k].theme);\n            }\n        }\n    }).bind(this));\n};\nconst clearPeriodMap = function () {\n    if (this.config.mode === \"day\" || this.config.mode === \"d\") {\n        for (let k in this.periodMap) {\n            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').find(\".addon-footer\").empty();\n            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').removeClass(this.periodMap[k].theme);\n        }\n    }\n};\n\n/**\n * @class\n */\nclass AX6UICalendar extends AX6UICore {\n    /**\n     * @constructor\n     * @param config\n     * @param [config.theme]\n     * @param [config.target]\n     * @param [config.animateTime]\n     * @param [config.onStateChanged]\n     * @param [config.onClick]\n     * @param [config.content]\n     */\n    constructor(config) {\n        super();\n\n        this.config = {\n            clickEventName: \"click\",\n            theme: 'default',\n            startOfWeek: 0,\n            mode: 'day', // day|month|year,\n            dateFormat: 'yyyy-MM-dd',\n            displayDate: (new Date()),\n            animateTime: 100,\n            dimensions: {\n                controlHeight: '40',\n                controlButtonWidth: '40',\n                colHeadHeight: '30',\n                itemPadding: 2\n            },\n            lang: {\n                yearHeading: \"Choose the year\",\n                monthHeading: \"Choose the month\",\n                yearTmpl: \"%s\",\n                months: info.months || ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n                dayTmpl: \"%s\"\n            },\n            multipleSelect: false,\n            selectMode: 'day',\n            defaultMarkerTheme: 'holiday',\n            defaultPeriodTheme: 'period'\n        };\n        jQuery.extend(true, this.config, config);\n\n        // ?????? ?????? ?????????\n        this.$target = null;\n        this.selection = [];\n        this.selectionMap = {};\n        this.selectableMap = {};\n        this.markerMap = {};\n        this.printedDay = {\n            start: \"\", end: \"\"\n        };\n        this.selectableCount = 1;\n\n        this.init();\n    }\n\n    /**\n     * @method\n     * @param config\n     * @param [config.theme]\n     * @param [config.target]\n     * @param [config.animateTime]\n     * @param [config.onStateChanged]\n     * @param [config.onClick]\n     * @param [config.content]\n     */\n    init(){\n        this.onStateChanged = this.config.onStateChanged;\n        delete this.config.onStateChanged;\n        this.onClick = this.config.onClick;\n        delete this.config.onClick;\n\n        if (!this.config.target) {\n            console.log(info.getError(\"ax6calendar\", \"401\", \"setConfig\"));\n        }\n        this.$target = jQuery(this.config.target);\n        this.config.displayDate = U.date(this.config.displayDate);\n\n        this.$target.html(getFrame.call(this));\n\n        // ????????????\n        this.$ = {\n            \"root\": this.$target.find('[data-calendar-els=\"root\"]'),\n            \"control\": this.$target.find('[data-calendar-els=\"control\"]'),\n            \"control-display\": this.$target.find('[data-calendar-els=\"control-display\"]'),\n            \"body\": this.$target.find('[data-calendar-els=\"body\"]')\n        };\n\n        if (this.config.control) {\n            this.$[\"root\"].on(this.config.clickEventName, '[data-calendar-move]', (e) => {\n                move.call(this, e || window.event);\n            });\n        }\n\n        // collect selectableMap\n        if (this.config.selection) {\n            this.setSelection(this.config.selection, false);\n        }\n        // collect selectableMap\n        if (this.config.selectable) {\n            this.setSelectable(this.config.selectable, false);\n        }\n        // collect markerMap\n        if (this.config.marker) {\n            this.setMarker(this.config.marker, false);\n        }\n\n        setTimeout((function () {\n            if (this.config.mode === \"day\" || this.config.mode === \"d\") {\n                printDay.call(this, this.config.displayDate);\n            }\n            else if (this.config.mode === \"month\" || this.config.mode === \"m\") {\n                printMonth.call(this, this.config.displayDate);\n            }\n            else if (this.config.mode === \"year\" || this.config.mode === \"y\") {\n                printYear.call(this, this.config.displayDate);\n            }\n        }).bind(this));\n\n        // init ?????? ??????\n        this.initOnce();\n    }\n\n    /**\n     * @method\n     * @return {AX6UIMask}\n     */\n    initOnce(){\n        if(this.initialized) return this;\n        this.initialized = true;\n    }\n\n    /**\n     * @method\n     * @param mode\n     * @param changeDate\n     * @return {AX6UICalendar}\n     */\n    changeMode(mode, changeDate) {\n        if (typeof changeDate != \"undefined\") this.config.displayDate = changeDate;\n        if (mode) this.config.mode = mode;\n\n        this.$[\"body\"].removeClass(\"fadein\").addClass(\"fadeout\");\n        setTimeout(() => {\n            if (this.config.mode == \"day\" || this.config.mode == \"d\") {\n                printDay.call(this, this.config.displayDate);\n            }\n            else if (this.config.mode == \"month\" || this.config.mode == \"m\") {\n                printMonth.call(this, this.config.displayDate);\n            }\n            else if (this.config.mode == \"year\" || this.config.mode == \"y\") {\n                printYear.call(this, this.config.displayDate);\n            }\n            this.$[\"body\"].removeClass(\"fadeout\").addClass(\"fadein\");\n        }, this.config.animateTime);\n\n        return this;\n    }\n\n    setSelection(selection, isPrint) {\n        this.selectionMap = {};\n        let result = {};\n        const processor = {\n            'arr': function (v, map, count) {\n                map = {};\n                if (!U.isArray(v)) return map;\n                this.selection = v = v.splice(0, count);\n                v.forEach(function (n) {\n                    if (U.isDate(n))\n                        n = U.date(n, {'return': this.config.dateFormat});\n                    map[n] = true;\n                });\n                return map;\n            }\n        };\n\n        this.selectableCount = (this.config.multipleSelect) ? (U.isNumber(this.config.multipleSelect)) ? this.config.multipleSelect : 2 : 1;\n\n        if (this.config.selection = selection) {\n            if (U.isArray(selection)) {\n                result = processor.arr(selection, {}, this.selectableCount);\n            } else {\n                return this;\n            }\n        }\n\n        this.selectionMap = jQuery.extend({}, result);\n        // ???????????? ???????????? ??????\n\n        if (isPrint !== false) applySelectionMap.call(this);\n\n        result = null;\n\n        return this;\n    }\n\n    getSelection() {\n        return this.selection;\n    }\n\n    setSelectable(selection, isPrint) {\n        this.selectableMap = {};\n        let key, result = {};\n        const processor = {\n            'arr': function (v, map) {\n                map = {};\n                if (!U.isArray(v)) return map;\n                v.forEach(function (n) {\n                    if (U.isDate(n))\n                        n = U.date(n, {'return': this.config.dateFormat});\n                    map[n] = true;\n                });\n                return map;\n            },\n            'obj': function (v, map) {\n                map = {};\n                if (U.isArray(v)) return map;\n                if (v.range) return map;\n                for (let k in v) {\n                    map[k] = v[k];\n                }\n                return map;\n            },\n            'range': function (v, map) {\n                map = {};\n                if (U.isArray(v)) return map;\n                if (!v.range) return map;\n\n                v.range.forEach(function (n) {\n                    if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                        for (let d = U.date(n.from); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                            map[U.date(d, {\"return\": this.config.dateFormat})] = true;\n                        }\n                    }\n                    else {\n                        for (let i = n.from; i <= n.to; i++) {\n                            map[i] = true;\n                        }\n                    }\n                });\n\n                return map;\n            }\n        };\n\n        if (this.config.selectable = selectable) {\n            if (U.isArray(selectable)) {\n                result = processor.arr(selectable);\n            }\n            else {\n                for (key in processor) {\n                    if (selectable[key]) {\n                        result = processor[key](selectable);\n                        break;\n                    }\n                }\n                if (Object.keys(result).length === 0) {\n                    result = processor.obj(selectable);\n                }\n            }\n        }\n\n        this.selectableMap = result;\n        // ???????????? ???????????? ??????\n        if (isPrint !== false) this.changeMode();\n\n        return this;\n    }\n\n    setMarker(marker, isApply) {\n        this.markerMap = {};\n        let key, result = {};\n        const processor = {\n            'obj': function (v, map) {\n                map = {};\n                if (U.isArray(v)) return map;\n                if (v.range) return map;\n                for (let k in v) {\n                    map[k] = v[k];\n                }\n\n                v = null;\n                return map;\n            },\n            'range': function (v, map) {\n                map = {};\n                if (U.isArray(v)) return map;\n                if (!v.range) return map;\n\n                v.range.forEach(function (n) {\n                    if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                        for (let d = U.date(n.from); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                            map[U.date(d, {\"return\": this.config.dateFormat})] = {theme: n.theme, label: n.label};\n                        }\n                    }\n                    else {\n                        for (let i = n.from; i <= n.to; i++) {\n                            map[i] = {theme: n.theme, label: n.label};\n                        }\n                    }\n                });\n\n                v = null;\n                return map;\n            }\n        };\n\n        if (this.config.marker = marker) {\n            for (key in processor) {\n                if (marker[key]) {\n                    result = processor[key](marker);\n                    break;\n                }\n            }\n            if (Object.keys(result).length === 0) {\n                result = processor.obj(marker);\n            }\n        }\n\n        this.markerMap = result;\n        // ???????????? ???????????? ??????\n        if (isApply !== false) applyMarkerMap.call(this);\n        return this;\n    }\n\n    setPeriod(period, isApply) {\n        this.periodMap = {};\n        let key, result = {};\n        const processor = {\n            'range': function (v, map) {\n                map = {};\n                if (U.isArray(v)) return map;\n                if (!v.range) return map;\n\n                v.range.forEach((n) => {\n                    if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                        for (let d = new Date(U.date(n.from)); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                            if (d.getTime() == U.date(n.from).getTime()) {\n                                map[U.date(d, {\"return\": this.config.dateFormat})] = {theme: n.theme || this.config.defaultPeriodTheme, label: n.fromLabel};\n                            } else if (d.getTime() == U.date(n.to).getTime()) {\n                                map[U.date(d, {\"return\": this.config.dateFormat})] = {theme: n.theme || this.config.defaultPeriodTheme, label: n.toLabel};\n                            } else {\n                                map[U.date(d, {\"return\": this.config.dateFormat})] = {theme: n.theme || this.config.defaultPeriodTheme};\n                            }\n                        }\n                    }\n                });\n\n                v = null;\n                return map;\n            }\n        };\n\n        // ???????????? ???????????? ??????\n        if (isApply !== false) {\n            clearPeriodMap.call(this);\n        }\n\n        if (this.config.period = period) {\n            result = processor.range(period);\n        }\n\n        this.periodMap = result;\n\n        // ???????????? ???????????? ??????\n        if (isApply !== false) {\n            applyPeriodMap.call(this);\n        }\n        return this;\n    }\n}\n\nexport default AX6UICalendar;"]}