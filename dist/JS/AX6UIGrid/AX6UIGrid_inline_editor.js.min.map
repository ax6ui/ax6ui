{"version":3,"sources":["AX6UIGrid_inline_editor.js"],"names":["_jqmin","require","_AX6UIGrid_body","edit_text","useReturnToSave","editMode","getHtml","_root","_columnKey","_editor","_value","attributes","attributesText","k","init","_$parent","$el","_jqmin2","default","this","_AX6UIGrid_body2","inlineEdit","bindUI","_$el","trigger","edit_money","call","data","ax5formatter","$","extend","pattern","config","edit_number","edit_date","direction","content","type","onStateChanged","state","self","activePicker","attr","deActive","formatter","po","push","join","append","edit_select","optionText","optionSelected","eConfig","n","columnKeys","optionValue","options","activeSelectOptionGroup","forEach","ax5select","edit_checkbox","checked","lineHeight","body","columnHeight","columnPadding","columnBorderWidth","trueValue","height","marginTop","edit_textarea","offset","box","width","$newDiv","find","css","position","editorHeight","left","buttonHeight","top","value","ax5","util","stopEvent","e","originalEvent","$newTextarea","on","document","info","eventKeys","_getHtml","_bindUI","text","money","number","date","select","checkbox","textarea"],"mappings":"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","file":"AX6UIGrid_inline_editor.js","sourcesContent":["import jQuery from \"jqmin\";\nimport BODY from \"./AX6UIGrid_body\";\n\nconst edit_text = {\n  useReturnToSave: true,\n  editMode: \"popup\",\n  getHtml: function (_root, _columnKey, _editor, _value) {\n    if (typeof _editor.attributes !== \"undefined\") {\n      var attributesText = \"\";\n      for (var k in _editor.attributes) {\n        attributesText += ` ${k}='${_editor.attributes[k]}'`;\n      }\n    }\n    return `<input type=\"text\" data-ax6grid-editor=\"text\" value=\"${_value}\" ${attributesText}>`;\n  },\n  init: function (_root, _columnKey, _editor, _$parent, _value) {\n    var $el;\n    _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n    this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n    $el.on(\"blur\", function () {\n      BODY.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n    });\n    return $el;\n  },\n  bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n    _$el.trigger(\"focus\").trigger(\"select\");\n  }\n};\n\nconst edit_money = {\n  useReturnToSave: true,\n  editMode: \"popup\",\n  getHtml: function (_root, _columnKey, _editor, _value) {\n    let attributesText = \"\";\n    if (typeof _editor.attributes !== \"undefined\") {\n      for (let k in _editor.attributes) {\n        attributesText += ` ${k}='${_editor.attributes[k]}'`;\n      }\n    }\n    return '<input type=\"text\" data-ax6grid-editor=\"money\" value=\"' + _value + '\" ' + attributesText + '\" />';\n  },\n  init: function (_root, _columnKey, _editor, _$parent, _value) {\n    let $el;\n    _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n    this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n    $el.on(\"blur\", function () {\n      BODY.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n    });\n    return $el;\n  },\n  bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n    _$el.data(\"binded-ax5ui\", \"ax5formater\");\n    _$el.ax5formatter($.extend(true, {\n      pattern: \"money\"\n    }, _editor.config));\n    _$el.trigger(\"focus\").trigger(\"select\");\n  }\n};\n\nconst edit_number = {\n  useReturnToSave: true,\n  editMode: \"popup\",\n  getHtml: function (_root, _columnKey, _editor, _value) {\n    let attributesText = \"\";\n    if (typeof _editor.attributes !== \"undefined\") {\n      for (let k in _editor.attributes) {\n        attributesText += ` ${k}='${_editor.attributes[k]}'`;\n      }\n    }\n    return '<input type=\"text\" data-ax6grid-editor=\"number\" value=\"' + _value + '\" ' + attributesText + '\" />';\n  },\n  init: function (_root, _columnKey, _editor, _$parent, _value) {\n    var $el;\n    _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n    this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n    $el.on(\"blur\", function () {\n      BODY.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n    });\n    return $el;\n  },\n  bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n    _$el.data(\"binded-ax5ui\", \"ax5formater\");\n    _$el.ax5formatter($.extend(true, {\n      pattern: \"number\"\n    }, _editor.config));\n    _$el.trigger(\"focus\").trigger(\"select\");\n  }\n};\n\nconst edit_date = {\n  useReturnToSave: true,\n  editMode: \"popup\",\n  getHtml: function (_root, _columnKey, _editor, _value) {\n    return '<input type=\"text\" data-ax6grid-editor=\"calendar\" value=\"' + _value + '\" >';\n  },\n  init: function (_root, _columnKey, _editor, _$parent, _value) {\n    var $el;\n    _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n    this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n    return $el;\n  },\n  bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n    var self = _root;\n    _$el.data(\"binded-ax5ui\", \"ax5picker\");\n\n    _$el.ax5picker($.extend(true, {\n      direction: \"auto\",\n      content: {\n        type: 'date',\n        formatter: {\n          pattern: 'date'\n        }\n      },\n      onStateChanged: function () {\n        if (this.state == \"open\") {\n          this.self.activePicker.attr(\"data-ax6grid-inline-edit-picker\", \"date\");\n        } else if (this.state == \"close\") {\n          BODY.inlineEdit.deActive.call(self, \"RETURN\", _columnKey);\n        }\n      }\n    }, _editor.config));\n\n    _$el.trigger(\"focus\").trigger(\"select\");\n  }\n};\n\nconst edit_select = {\n  useReturnToSave: false,\n  editMode: \"popup\",\n  getHtml: function (_root, _columnKey, _editor, _value) {\n    var po = [];\n    po.push('<div data-ax5select=\"ax5grid-editor\" data-ax5select-config=\"{}\">');\n    po.push('</div>');\n\n    return po.join('');\n  },\n  init: function (_root, _columnKey, _editor, _$parent, _value) {\n    var $el;\n    _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n    this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n    return $el;\n  },\n  bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n    var eConfig = {\n      columnKeys: {\n        optionValue: \"value\",\n        optionText: \"text\",\n        optionSelected: \"selected\"\n      }\n    };\n    jQuery.extend(true, eConfig, _editor.config);\n\n    eConfig.options.forEach(function (n) {\n      if (n[eConfig.columnKeys.optionValue] == _value) n[eConfig.columnKeys.optionSelected] = true;\n    });\n\n    var self = _root;\n    _$el.data(\"binded-ax5ui\", \"ax5select\");\n    _$el.ax5select($.extend(true, {\n      direction: \"auto\",\n      columnKeys: eConfig.columnKeys,\n      options: eConfig.options,\n      onStateChanged: function () {\n        if (this.state == \"open\") {\n          this.self.activeSelectOptionGroup.attr(\"data-ax6grid-inline-edit-picker\", \"select\");\n        } else if (this.state == \"changeValue\") {\n          BODY.inlineEdit.deActive.call(self, \"RETURN\", _columnKey, this.value[0][eConfig.columnKeys.optionValue]);\n        } else if (this.state == \"close\") {\n          BODY.inlineEdit.deActive.call(self, \"ESC\", _columnKey);\n        }\n      }\n    }, _editor.config));\n    _$el.ax5select(\"open\");\n    _$el.ax5select(\"setValue\", _value);\n    _$el.find(\"a\").trigger(\"focus\");\n  }\n};\n\nconst edit_checkbox = {\n  editMode: \"inline\",\n  getHtml: function (_root, _editor, _value) {\n\n    var lineHeight = (_root.config.body.columnHeight - _root.config.body.columnPadding * 2 - _root.config.body.columnBorderWidth);\n    var checked;\n    if (_editor.config && _editor.config.trueValue) {\n      checked = (_value == _editor.config.trueValue) ? \"true\" : \"false\";\n    } else {\n      checked = (_value == false || _value == \"false\" || _value < \"1\") ? \"false\" : \"true\";\n    }\n\n    var eConfig = {\n      marginTop: 2,\n      height: lineHeight - 4\n    };\n    jQuery.extend(true, eConfig, _editor.config);\n    eConfig.marginTop = (lineHeight - eConfig.height) / 2;\n\n    return '<div data-ax6grid-editor=\"checkbox\" data-ax6grid-checked=\"' + checked + '\" style=\"height:' + eConfig.height + 'px;width:' + eConfig.height + 'px;margin-top:' + eConfig.marginTop + 'px;\"></div>';\n  }\n};\n\nconst edit_textarea = {\n  useReturnToSave: false,\n  editMode: \"popup\",\n  _getHtml: function (_root, _columnKey, _editor, _value) {\n    // init 에서 사용하게 될 HTML 태그를 만들어 줍니다.\n    return `<div data-ax6grid-editor=\"textarea\"></div>`;\n  },\n  _bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n    // 위치와 크기를 구합니다.\n    let offset = _$el.offset();\n    let box = {\n      width: _$el.width()\n    };\n    let editorHeight = 150;\n    let buttonHeight = 30;\n\n    // 새로운 엘리먼트 생성\n    let $newDiv = jQuery(`<div data-ax6grid-popup=\"textarea\" style=\"z-index: 9999;\">\n    <textarea style=\"width:100%;height:${editorHeight - buttonHeight}px;\" class=\"form-control\">${_value}</textarea>\n    <div style=\"height:${buttonHeight}px;padding:5px;text-align: right;\">\n        <button class=\"btn btn-default\">OK</button>\n    </div>\n</div>`);\n    let $newTextarea = $newDiv.find(\"textarea\");\n    // 엘리먼트에 CSS 적용\n    $newDiv.css({\n      position: \"absolute\",\n      left: offset.left,\n      top: offset.top,\n      width: box.width,\n      height: editorHeight\n    });\n    $newDiv.find(\"textarea\");\n\n    // 새로운 엘리먼트를 document.body에 append\n    jQuery(document.body).append($newDiv);\n    $newTextarea.trigger(\"focus\").trigger(\"select\");\n\n    $newTextarea.on(\"blur\", function (e) {\n      BODY.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey, this.value);\n      $newDiv.remove();\n      ax5.util.stopEvent(e.originalEvent);\n    });\n    $newTextarea.on(\"keydown\", function (e) {\n      if (e.which == ax5.info.eventKeys.ESC) {\n        BODY.inlineEdit.deActive.call(_root, \"ESC\", _columnKey);\n        $newDiv.remove();\n        ax5.util.stopEvent(e.originalEvent);\n      }\n    });\n\n    /// 값 변경\n    /// BODY.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey, this.value[0][eConfig.columnKeys.optionValue]);\n    /// 에디팅 취소\n    /// BODY.inlineEdit.deActive.call(_root, \"ESC\", _columnKey);\n  },\n\n  init: function (_root, _columnKey, _editor, _$parent, _value) {\n    // 인라인 에디팅 활성화 시작\n    /**\n     * _root : gridInstance\n     * _columnKey : di + \"_\" + col.colIndex + \"_\" + col.rowIndex\n     * _editor : col.editor\n     * _$parent : 셀\n     * _value : 값\n     */\n    let $el;\n    _$parent.append($el = jQuery(this._getHtml(_root, _columnKey, _editor, _value)));\n    // 셀에 HTML 컨텐츠 추가\n\n    this._bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n    // 이벤트 바인딩\n\n    return $el;\n  },\n};\n\nexport default {\n  \"text\": edit_text,\n  \"money\": edit_money,\n  \"number\": edit_number,\n  \"date\": edit_date,\n  \"select\": edit_select,\n  \"checkbox\": edit_checkbox,\n  \"textarea\": edit_textarea\n};"]}