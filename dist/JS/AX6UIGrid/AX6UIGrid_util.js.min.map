{"version":3,"sources":["AX6UIGrid_util.js"],"names":["_jqmin","require","_AX6Util","_AX6Info","divideTableByFrozenColumnIndex","_table","_frozenColumnIndex","tempTable_l","rows","tempTable_r","r","rl","length","row","cols","c","cl","col","_jqmin2","default","extend","colStartIndex","colIndex","colEndIndex","colspan","push","leftCol","rightCol","leftData","rightData","getTableByStartEndColumnIndex","_startColumnIndex","_endColumnIndex","tempTable","getMousePosition","mouseObj","e","originalEvent","changedTouches","clientX","pageX","clientY","pageY","ENM","mousedown","_AX6Info2","supportTouch","mousemove","mouseup","columns","_columns","cfg","this","config","maekRows","depth","parentField","i","l","field","table","rowspan","rowIndex","width","columnMinWidth","concat","makeBodyRowTable","selfMakeRow","hidden","__columns","makeBodyRowMap","map","forEach","makeFootSumTable","_footSumColumns","footSumRow","addC","colGroup","align","label","columnAttr","key","formatter","makeBodyGroupingTable","_bodyGroupingColumns","findPanelByColumnIndex","_dindex","_colIndex","_rowIndex","_containerPanelName","_isScrollPanel","_panels","frozenColumnIndex","xvar","frozenRowIndex","join","panelName","containerPanelName","isScrollPanel","getRealPathForDataItem","_dataPath","path","_path","split","n","makeHeaderTable"],"mappings":"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","file":"AX6UIGrid_util.js","sourcesContent":["import jQuery from \"jqmin\";\nimport U from \"../AX6Util\";\nimport info from \"../AX6Info\";\n\n/**\n * @method ax5grid.util.divideTableByFrozenColumnIndex\n * @param _table\n * @param _frozenColumnIndex\n * @returns {{leftHeaderData: {rows: Array}, headerData: {rows: Array}}}\n */\nconst divideTableByFrozenColumnIndex = function (_table, _frozenColumnIndex) {\n\n  let tempTable_l = {rows: []},\n    tempTable_r = {rows: []};\n\n  for (let r = 0, rl = _table.rows.length; r < rl; r++) {\n    let row = _table.rows[r];\n\n    tempTable_l.rows[r] = {cols: []};\n    tempTable_r.rows[r] = {cols: []};\n\n    for (let c = 0, cl = row.cols.length; c < cl; c++) {\n      let col = jQuery.extend({}, row.cols[c]),\n        colStartIndex = col.colIndex,\n        colEndIndex = col.colIndex + col.colspan;\n\n      if (colStartIndex < _frozenColumnIndex) {\n        if (colEndIndex <= _frozenColumnIndex) {\n          // 좌측편에 변형없이 추가\n          tempTable_l.rows[r].cols.push(col);\n        } else {\n          let leftCol = jQuery.extend({}, col),\n            rightCol = jQuery.extend({}, leftCol);\n\n          leftCol.colspan = _frozenColumnIndex - leftCol.colIndex;\n          rightCol.colIndex = _frozenColumnIndex;\n          rightCol.colspan = col.colspan - leftCol.colspan;\n\n          tempTable_l.rows[r].cols.push(leftCol);\n          if (rightCol.colspan) {\n            tempTable_r.rows[r].cols.push(rightCol);\n          }\n        }\n      }\n      else {\n        // 오른편\n        tempTable_r.rows[r].cols.push(col);\n      }\n\n      col = null;\n      colStartIndex = null;\n      colEndIndex = null;\n    }\n\n    row = null;\n  }\n\n  return {\n    leftData: tempTable_l,\n    rightData: tempTable_r\n  }\n};\n\nconst getTableByStartEndColumnIndex = function (_table, _startColumnIndex, _endColumnIndex) {\n\n  let tempTable = {rows: []};\n  for (let r = 0, rl = _table.rows.length; r < rl; r++) {\n    let row = _table.rows[r];\n\n    tempTable.rows[r] = {cols: []};\n    for (let c = 0, cl = row.cols.length; c < cl; c++) {\n      let col = jQuery.extend({}, row.cols[c]),\n        colStartIndex = col.colIndex, colEndIndex = col.colIndex + col.colspan;\n\n      if (_startColumnIndex <= colStartIndex || colEndIndex <= _endColumnIndex) {\n        if (_startColumnIndex <= colStartIndex && colEndIndex <= _endColumnIndex) {\n          // 변형없이 추가\n          tempTable.rows[r].cols.push(col);\n        }\n        else if (_startColumnIndex > colStartIndex && colEndIndex > _startColumnIndex) {\n          // 앞에서 걸친경우\n          col.colspan = colEndIndex - _startColumnIndex;\n          tempTable.rows[r].cols.push(col);\n        }\n        else if (colEndIndex > _endColumnIndex && colStartIndex <= _endColumnIndex) {\n          tempTable.rows[r].cols.push(col);\n        }\n      }\n    }\n  }\n\n  return tempTable;\n};\n\nconst getMousePosition = function (e) {\n  let mouseObj,\n    originalEvent = (e.originalEvent) ? e.originalEvent : e;\n\n  mouseObj = ('changedTouches' in originalEvent && originalEvent.changedTouches) ? originalEvent.changedTouches[0] : originalEvent;\n  // clientX, Y 쓰면 스크롤에서 문제 발생\n  return {\n    clientX: mouseObj.pageX,\n    clientY: mouseObj.pageY\n  }\n};\n\nconst ENM = {\n  \"mousedown\": (info.supportTouch) ? \"touchstart\" : \"mousedown\",\n  \"mousemove\": (info.supportTouch) ? \"touchmove\" : \"mousemove\",\n  \"mouseup\": (info.supportTouch) ? \"touchend\" : \"mouseup\"\n};\n\nconst makeHeaderTable = function (_columns) {\n  let columns = _columns,\n    cfg = this.config,\n    table = {\n      rows: []\n    },\n    colIndex = 0,\n    maekRows = function (_columns, depth, parentField) {\n      var row = {cols: []};\n      var i = 0, l = _columns.length;\n\n      for (; i < l; i++) {\n        var field = jQuery.extend({}, _columns[i]);\n        var colspan = 1;\n\n        if (!field.hidden) {\n          field.colspan = 1;\n          field.rowspan = 1;\n\n          field.rowIndex = depth;\n          field.colIndex = (function () {\n            if (!parentField) {\n              return colIndex++;\n            } else {\n              colIndex = parentField.colIndex + i + 1;\n              return parentField.colIndex + i;\n            }\n          })();\n\n          row.cols.push(field);\n\n          if ('columns' in field) {\n            colspan = maekRows(field.columns, depth + 1, field);\n          } else {\n            field.width = ('width' in field) ? field.width : cfg.columnMinWidth;\n          }\n          field.colspan = colspan;\n        } else {\n\n\n        }\n      }\n\n      if (row.cols.length > 0) {\n        if (!table.rows[depth]) {\n          table.rows[depth] = {cols: []};\n        }\n        table.rows[depth].cols = table.rows[depth].cols.concat(row.cols);\n        return (row.cols.length - 1) + colspan;\n      } else {\n        return colspan;\n      }\n\n    };\n\n  maekRows(columns, 0);\n\n  // set rowspan\n  for (let r = 0, rl = table.rows.length; r < rl; r++) {\n    for (let c = 0, cl = table.rows[r].cols.length; c < cl; c++) {\n      if (!('columns' in table.rows[r].cols[c])) {\n        table.rows[r].cols[c].rowspan = rl - r;\n      }\n    }\n  }\n\n  return table;\n};\n\nconst makeBodyRowTable = function (_columns) {\n  let columns = _columns,\n    table = {\n      rows: []\n    },\n    colIndex = 0,\n    maekRows = function (_columns, depth, parentField) {\n      let row = {cols: []},\n        i = 0,\n        l = _columns.length,\n        colspan = 1;\n\n      let selfMakeRow = function (__columns) {\n        let i = 0, l = __columns.length;\n        for (; i < l; i++) {\n          let field = jQuery.extend({}, __columns[i]),\n            colspan = 1;\n\n          if (!field.hidden) {\n\n            if ('key' in field) {\n              field.colspan = 1;\n              field.rowspan = 1;\n\n              field.rowIndex = depth;\n              field.colIndex = (function () {\n                if (!parentField) {\n                  return colIndex++;\n                } else {\n                  colIndex = parentField.colIndex + i + 1;\n                  return parentField.colIndex + i;\n                }\n              })();\n\n              row.cols.push(field);\n              if ('columns' in field) {\n                colspan = maekRows(field.columns, depth + 1, field);\n              }\n              field.colspan = colspan;\n            }\n            else {\n              if ('columns' in field) {\n                selfMakeRow(field.columns, depth);\n              }\n            }\n          }\n          else {\n\n          }\n        }\n      };\n\n      for (; i < l; i++) {\n        let field = jQuery.extend({}, _columns[i]);\n        colspan = 1;\n\n        if (!field.hidden) {\n\n          if ('key' in field) {\n            field.colspan = 1;\n            field.rowspan = 1;\n\n            field.rowIndex = depth;\n            field.colIndex = (function () {\n              if (!parentField) {\n                return colIndex++;\n              } else {\n                colIndex = parentField.colIndex + i + 1;\n                return parentField.colIndex + i;\n              }\n            })();\n\n            row.cols.push(field);\n            if ('columns' in field) {\n              colspan = maekRows(field.columns, depth + 1, field);\n            }\n            field.colspan = colspan;\n          }\n          else {\n            if ('columns' in field) {\n              selfMakeRow(field.columns, depth);\n            }\n          }\n        }\n        else {\n\n        }\n\n        field = null;\n      }\n\n      if (row.cols.length > 0) {\n        if (!table.rows[depth]) {\n          table.rows[depth] = {cols: []};\n        }\n        table.rows[depth].cols = table.rows[depth].cols.concat(row.cols);\n        return (row.cols.length - 1) + colspan;\n      }\n      else {\n        return colspan;\n      }\n    };\n\n  maekRows(columns, 0);\n\n  (function (table) {\n    // set rowspan\n    for (let r = 0, rl = table.rows.length; r < rl; r++) {\n      let row = table.rows[r];\n      for (let c = 0, cl = row.cols.length; c < cl; c++) {\n        let col = row.cols[c];\n        if (!('columns' in col)) {\n          col.rowspan = rl - r;\n        }\n        col = null;\n      }\n      row = null;\n    }\n  })(table);\n\n  return table;\n};\n\nconst makeBodyRowMap = function (_table) {\n  let map = {};\n  _table.rows.forEach(function (row) {\n    row.cols.forEach(function (col) {\n      map[col.rowIndex + \"_\" + col.colIndex] = jQuery.extend({}, col);\n    });\n  });\n  return map;\n};\n\nlet makeFootSumTable = function (_footSumColumns) {\n  let table = {\n    rows: []\n  };\n\n  for (let r = 0, rl = _footSumColumns.length; r < rl; r++) {\n    let footSumRow = _footSumColumns[r],\n      addC = 0;\n\n    table.rows[r] = {cols: []};\n\n    for (let c = 0, cl = footSumRow.length; c < cl; c++) {\n      if (addC > this.colGroup.length) break;\n      let colspan = footSumRow[c].colspan || 1;\n      if (footSumRow[c].label || footSumRow[c].key) {\n        table.rows[r].cols.push({\n          colspan: colspan,\n          rowspan: 1,\n          colIndex: addC,\n          columnAttr: \"sum\",\n          align: footSumRow[c].align,\n          label: footSumRow[c].label,\n          key: footSumRow[c].key,\n          collector: footSumRow[c].collector,\n          formatter: footSumRow[c].formatter\n        });\n      } else {\n        table.rows[r].cols.push({\n          colIndex: addC,\n          colspan: colspan,\n          rowspan: 1,\n          label: \"&nbsp;\",\n        });\n      }\n      addC += colspan;\n      colspan = null;\n    }\n\n    if (addC < this.colGroup.length) {\n      for (let c = addC; c < this.colGroup.length; c++) {\n        table.rows[r].cols.push({\n          colIndex: (c),\n          colspan: 1,\n          rowspan: 1,\n          label: \"&nbsp;\",\n        });\n      }\n    }\n    footSumRow = null;\n    addC = null;\n  }\n\n  return table;\n};\n\nconst makeBodyGroupingTable = function (_bodyGroupingColumns) {\n  let table = {\n      rows: []\n    },\n    r = 0,\n    addC = 0;\n\n  table.rows[r] = {cols: []};\n  for (let c = 0, cl = _bodyGroupingColumns.length; c < cl; c++) {\n    if (addC > this.columns.length) break;\n    let colspan = _bodyGroupingColumns[c].colspan || 1;\n    if (_bodyGroupingColumns[c].label || _bodyGroupingColumns[c].key) {\n      table.rows[r].cols.push({\n        colspan: colspan,\n        rowspan: 1,\n        rowIndex: 0,\n        colIndex: addC,\n        columnAttr: \"default\",\n        align: _bodyGroupingColumns[c].align,\n        label: _bodyGroupingColumns[c].label,\n        key: _bodyGroupingColumns[c].key,\n        collector: _bodyGroupingColumns[c].collector,\n        formatter: _bodyGroupingColumns[c].formatter\n      });\n    } else {\n      table.rows[r].cols.push({\n        rowIndex: 0,\n        colIndex: addC,\n        colspan: colspan,\n        rowspan: 1,\n        label: \"&nbsp;\"\n      });\n    }\n    addC += colspan;\n  }\n\n  if (addC < this.colGroup.length) {\n    for (var c = addC; c < this.colGroup.length; c++) {\n      table.rows[r].cols.push({\n        rowIndex: 0,\n        colIndex: (c),\n        colspan: 1,\n        rowspan: 1,\n        label: \"&nbsp;\",\n      });\n    }\n  }\n\n  return table;\n};\n\nconst findPanelByColumnIndex = function (_dindex, _colIndex, _rowIndex) {\n  let _containerPanelName,\n    _isScrollPanel = false,\n    _panels = [];\n\n  if (this.xvar.frozenRowIndex > _dindex) _panels.push(\"top\");\n  if (this.xvar.frozenColumnIndex > _colIndex) _panels.push(\"left\");\n  _panels.push(\"body\");\n\n  if (this.xvar.frozenColumnIndex <= _colIndex || this.xvar.frozenRowIndex <= _dindex) {\n    _containerPanelName = _panels.join(\"-\");\n    _panels.push(\"scroll\");\n    _isScrollPanel = true;\n  }\n\n  return {\n    panelName: _panels.join(\"-\"),\n    containerPanelName: _containerPanelName,\n    isScrollPanel: _isScrollPanel\n  }\n};\n\nconst getRealPathForDataItem = function (_dataPath) {\n  let path = [],\n    _path = [].concat(_dataPath.split(/[\\.\\[\\]]/g));\n\n  _path.forEach(function (n) {\n    if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n  });\n  _path = null;\n  return path.join(\"\");\n};\n\nexport default {\n  divideTableByFrozenColumnIndex: divideTableByFrozenColumnIndex,\n  getTableByStartEndColumnIndex: getTableByStartEndColumnIndex,\n  getMousePosition: getMousePosition,\n  ENM: ENM,\n  makeHeaderTable: makeHeaderTable,\n  makeBodyRowTable: makeBodyRowTable,\n  makeBodyRowMap: makeBodyRowMap,\n  makeFootSumTable: makeFootSumTable,\n  makeBodyGroupingTable: makeBodyGroupingTable,\n  findPanelByColumnIndex: findPanelByColumnIndex,\n  getRealPathForDataItem: getRealPathForDataItem\n};"]}